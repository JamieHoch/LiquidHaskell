(set-option :auto-config false)
(set-option :model true)

(set-option :smt.mbqi false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort LSet () (Array Elt Bool))
(define-fun smt_set_emp () LSet ((as const LSet) false))
(define-fun smt_set_sng ((x Elt)) LSet (store ((as const LSet) false) x true))
(define-fun smt_set_mem ((x Elt) (s LSet)) Bool (select s x))
(define-fun smt_set_add ((s LSet) (x Elt)) LSet (store s x true))
(define-fun smt_set_cup ((s1 LSet) (s2 LSet)) LSet ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 LSet) (s2 LSet)) LSet ((_ map and) s1 s2))
(define-fun smt_set_com ((s LSet)) LSet ((_ map not) s))
(define-fun smt_set_dif ((s1 LSet) (s2 LSet)) LSet (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 LSet) (s2 LSet)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun smt_map_cup ((m1 Map) (m2 Map)) Map ((_ map (+ (Elt Elt) Elt)) m1 m2))
(define-fun smt_map_prj ((s LSet) (m Map)) Map ((_ map (ite (Bool Elt Elt) Elt)) s m ((as const (Array Elt Elt)) 0)))
(define-fun smt_map_to_set ((m Map)) LSet ((_ map (> (Elt Elt) Bool)) m ((as const (Array Elt Elt)) 0)))
(define-fun smt_map_max ((m1 Map) (m2 Map)) Map (lambda ((i Int)) (ite (> (select m1 i) (select m2 i)) (select m1 i) (select m2 i))))
(define-fun smt_map_min ((m1 Map) (m2 Map)) Map (lambda ((i Int)) (ite (< (select m1 i) (select m2 i)) (select m1 i) (select m2 i))))
(define-fun smt_map_shift ((n Int) (m Map)) Map (lambda ((i Int)) (select m (- i n))))
(define-fun smt_map_def ((v Elt)) Map ((as const (Map)) v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-fun lq_anf$36$$35$$35$7205759403792867337$35$$35$djbj () Bool)
(declare-fun papp7 () Int)
(declare-fun lq_karg$36$ds_dj3v$35$$35$k_$35$$35$1252 () Int)
(declare-fun GHC.Base.id () Int)
(declare-fun t2$35$$35$aiOd () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867232$35$$35$dj9C$35$$35$k_$35$$35$1729 () Int)
(declare-fun lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6333 () Int)
(declare-fun VV$35$$35$F$35$$35$339 () Int)
(declare-fun lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6291 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867238$35$$35$dj9I$35$$35$k_$35$$35$1729 () Map)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3221 () Int)
(declare-fun GHC.Types.KindRepTypeLitS () Int)
(declare-fun lq_tmp$36$x$35$$35$3575 () Int)
(declare-fun lq_karg$36$ds_dj4L$35$$35$k_$35$$35$1550 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867352$35$$35$djby () Int)
(declare-fun lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3221 () Int)
(declare-fun totalityError () Int)
(declare-fun lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3853 () Int)
(declare-fun Binomial.insert$39$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G$35$$35$k_$35$$35$1729 () Int)
(declare-fun is$36$GHC.Types.$58$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867335$35$$35$djbh () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6240 () Int)
(declare-fun VV$35$$35$F$35$$35$166 () Int)
(declare-fun lq_karg$36$ds_dj7T$35$$35$k_$35$$35$2202 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867230$35$$35$dj9A$35$$35$k_$35$$35$1729 () Bool)
(declare-fun VV$35$$35$F$35$$35$320 () Int)
(declare-fun VV$35$$35$F$35$$35$238 () Int)
(declare-fun lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4102 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867237$35$$35$dj9H () Map)
(declare-fun r$35$$35$aiO5 () Int)
(declare-fun lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3284 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3035 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3042 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$2861 () Int)
(declare-fun VV$35$$35$F$35$$35$203 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3214 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3284 () Int)
(declare-fun lq_karg$36$t$35$$35$aiNT$35$$35$k_$35$$35$1550 () Int)
(declare-fun lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3556 () Int)
(declare-fun r1$35$$35$aiOa () Int)
(declare-fun lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4102 () Int)
(declare-fun VV$35$$35$F$35$$35$247 () Int)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3326 () Bool)
(declare-fun VV$35$$35$F$35$$35$40 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E$35$$35$k_$35$$35$1729 () Int)
(declare-fun lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3035 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3799 () Map)
(declare-fun VV$35$$35$7292 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$2861 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l$35$$35$k_$35$$35$1252 () Int)
(declare-fun lq_karg$36$ds_dj1J$35$$35$k_$35$$35$2982 () Int)
(declare-fun VV$35$$35$F$35$$35$381 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y$35$$35$k_$35$$35$2394 () Int)
(declare-fun lq_tmp$36$x$35$$35$1226 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3778 () Bool)
(declare-fun VV$35$$35$F$35$$35$516 () Int)
(declare-fun VV$35$$35$F$35$$35$310 () Int)
(declare-fun ds_dj3v () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S () Int)
(declare-fun lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6180 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867316$35$$35$djaY () Int)
(declare-fun VV$35$$35$F$35$$35$486 () Int)
(declare-fun VV$35$$35$F$35$$35$280 () Int)
(declare-fun VV$35$$35$F$35$$35$34 () Int)
(declare-fun lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3580 () Int)
(declare-fun lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3174 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3174 () Int)
(declare-fun Binomial.rankOfFirstTree () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6173 () Int)
(declare-fun lq_karg$36$ds_dj8n$35$$35$k_$35$$35$2394 () Int)
(declare-fun lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4075 () Int)
(declare-fun VV$35$$35$F$35$$35$255 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf$35$$35$k_$35$$35$3214 () Int)
(declare-fun lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3883 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3799 () Int)
(declare-fun GHC.Real.divMod () Int)
(declare-fun VV$35$$35$9531 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3556 () Bool)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3286 () Bool)
(declare-fun VV$35$$35$F$35$$35$69 () Int)
(declare-fun lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3033 () Int)
(declare-fun VV$35$$35$F$35$$35$70 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3042 () Int)
(declare-fun lq_karg$36$ds_dj7T$35$$35$k_$35$$35$2377 () Int)
(declare-fun VV$35$$35$F$35$$35$468 () Int)
(declare-fun GHC.List.reverse () Int)
(declare-fun VV$35$$35$10527 () Map)
(declare-fun VV$35$$35$11537 () Int)
(declare-fun lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6268 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4075 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3150 () Bool)
(declare-fun VV$35$$35$F$35$$35$417 () Int)
(declare-fun lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4096 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3556 () Int)
(declare-fun lq_karg$36$VV$35$$35$2725$35$$35$k_$35$$35$2717 () Int)
(declare-fun lq_karg$36$VV$35$$35$3220$35$$35$k_$35$$35$3212 () Int)
(declare-fun Language.Haskell.Liquid.Bag.fromList () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw () Map)
(declare-fun lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM () Int)
(declare-fun lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3333 () Int)
(declare-fun lq_karg$36$x$35$$35$aiOs$35$$35$k_$35$$35$4581 () Int)
(declare-fun lq_karg$36$x$35$$35$aiOm$35$$35$k_$35$$35$5553 () Int)
(declare-fun lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6365 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867348$35$$35$djbu$35$$35$k_$35$$35$5561 () Int)
(declare-fun x$35$$35$aiO4 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867229$35$$35$dj9z$35$$35$k_$35$$35$1729 () Int)
(declare-fun lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3805 () Int)
(declare-fun lq_karg$36$ds_dj1J$35$$35$k_$35$$35$2726 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j$35$$35$k_$35$$35$1252 () Int)
(declare-fun VV$35$$35$F$35$$35$354 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867212$35$$35$dj9i () Str)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$3587$35$$35$k_$35$$35$3586 () Int)
(declare-fun VV$35$$35$F$35$$35$502 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y$35$$35$k_$35$$35$2377 () Int)
(declare-fun is$36$Binomial.Node () Int)
(declare-fun lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3324 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3883 () Bool)
(declare-fun lq_tmp$36$x$35$$35$6815 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3580 () Bool)
(declare-fun VV$35$$35$F$35$$35$39 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3778 () Int)
(declare-fun VV$35$$35$F$35$$35$340 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$Binomial.Heap$35$$35$1 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867237$35$$35$dj9H$35$$35$k_$35$$35$1738 () Map)
(declare-fun lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3214 () Int)
(declare-fun lq_karg$36$ds_dj8n$35$$35$k_$35$$35$2377 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$2717 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3101 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867309$35$$35$djaR () Int)
(declare-fun lq_karg$36$ds_dj3t$35$$35$k_$35$$35$1229 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3221 () Bool)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867343$35$$35$djbp$35$$35$k_$35$$35$4901 () Int)
(declare-fun Data.Map.Internal.Tip () Map)
(declare-fun VV$35$$35$F$35$$35$465 () Int)
(declare-fun lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4096 () Int)
(declare-fun GHC.List.scanl () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3778 () Map)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 () Int)
(declare-fun GHC.Classes.min () Int)
(declare-fun VV$35$$35$F$35$$35$492 () Int)
(declare-fun VV$35$$35$F$35$$35$294 () Int)
(declare-fun VV$35$$35$11105 () Map)
(declare-fun GHC.Types.C$35$ () Int)
(declare-fun Binomial.reverseHeapList () Int)
(declare-fun lq_karg$36$x$35$$35$aiNN$35$$35$k_$35$$35$1550 () Int)
(declare-fun lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3326 () Int)
(declare-fun VV$35$$35$10049 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3326 () Int)
(declare-fun VV$35$$35$F$35$$35$421 () Int)
(declare-fun lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6173 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6291 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$2828 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3284 () Int)
(declare-fun GHC.Real.$47$ () Int)
(declare-fun ts2$35$$35$aj0b () Int)
(declare-fun lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4075 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3035 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz () Map)
(declare-fun lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3262 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3805 () Map)
(declare-fun lq_karg$36$ds_dj6s$35$$35$k_$35$$35$4583 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867319$35$$35$djb1$35$$35$k_$35$$35$4583 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0$35$$35$k_$35$$35$4583 () Int)
(declare-fun VV$35$$35$F$35$$35$359 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867273$35$$35$djah$35$$35$k_$35$$35$3284 () Int)
(declare-fun VV$35$$35$7370 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3875 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m () Int)
(declare-fun lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3877 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867349$35$$35$djbv$35$$35$k_$35$$35$5555 () Int)
(declare-fun lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3778 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4075 () Map)
(declare-fun lq_karg$36$VV$35$$35$2981$35$$35$k_$35$$35$2982 () Int)
(declare-fun VV$35$$35$F$35$$35$347 () Int)
(declare-fun VV$35$$35$F$35$$35$145 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867226$35$$35$dj9w$35$$35$k_$35$$35$1738 () Int)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u$35$$35$k_$35$$35$1738 () Int)
(declare-fun VV$35$$35$F$35$$35$459 () Int)
(declare-fun lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3799 () Int)
(declare-fun tail () Int)
(declare-fun lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6120 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3578 () Int)
(declare-fun VV$35$$35$F$35$$35$94 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt () Int)
(declare-fun lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3214 () Int)
(declare-fun lit$36$$47$home$47$jamie$47$Documents$47$Master$47$MasterThesis$47$master$45$thesis$45$project$47$lh$45$thesis$47$src$47$Binomial.hs$58$185$58$1$45$35$124$function$32$unheapNonempty () Str)
(declare-fun VV$35$$35$F$35$$35$462 () Int)
(declare-fun VV$35$$35$F$35$$35$220 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867228$35$$35$dj9y$35$$35$k_$35$$35$1738 () Int)
(declare-fun lq_karg$36$VV$35$$35$3111$35$$35$k_$35$$35$3112 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4075 () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792867343$35$$35$djbp () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3284 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3150 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3214 () Int)
(declare-fun VV$35$$35$F$35$$35$495 () Int)
(declare-fun VV$35$$35$F$35$$35$293 () Int)
(declare-fun ts$35$$35$aiOD () Int)
(declare-fun lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3778 () Int)
(declare-fun VV$35$$35$10057 () Int)
(declare-fun lq_karg$36$VV$35$$35$3585$35$$35$k_$35$$35$3586 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3262 () Bool)
(declare-fun lq_karg$36$ds_dj4M$35$$35$k_$35$$35$1550 () Int)
(declare-fun lq_karg$36$VV$35$$35$3555$35$$35$k_$35$$35$3556 () Int)
(declare-fun lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3221 () Int)
(declare-fun lq_karg$36$ts$35$$35$aiOz$35$$35$k_$35$$35$5765 () Int)
(declare-fun lq_karg$36$VV$35$$35$2725$35$$35$k_$35$$35$2726 () Int)
(declare-fun lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3875 () Int)
(declare-fun lq_karg$36$VV$35$$35$3171$35$$35$k_$35$$35$3172 () Int)
(declare-fun lq_karg$36$VV$35$$35$4101$35$$35$k_$35$$35$4102 () Int)
(declare-fun lq_karg$36$VV$35$$35$6121$35$$35$k_$35$$35$6122 () Int)
(declare-fun lq_tmp$36$x$35$$35$6461 () Int)
(declare-fun isJust () Int)
(declare-fun lq_karg$36$ds_dj4a$35$$35$k_$35$$35$1738 () Int)
(declare-fun lq_tmp$36$x$35$$35$5686 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4075 () Map)
(declare-fun VV$35$$35$F$35$$35$189 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3799 () Bool)
(declare-fun VV$35$$35$11038 () Int)
(declare-fun VV$35$$35$F$35$$35$505 () Str)
(declare-fun ds_dj8o () Int)
(declare-fun lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6391 () Int)
(declare-fun lq_karg$36$ds_dj2p$35$$35$k_$35$$35$2984 () Int)
(declare-fun lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3580 () Int)
(declare-fun VV$35$$35$8881 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4096 () Bool)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$3877 () Int)
(declare-fun Binomial.treeSize () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U () Bool)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$3877 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867239$35$$35$dj9J () Map)
(declare-fun lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3778 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$2982 () Int)
(declare-fun GHC.Real.div () Int)
(declare-fun lq_karg$36$ts$35$$35$aiOt$35$$35$k_$35$$35$4583 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3586 () Int)
(declare-fun lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3284 () Int)
(declare-fun lq_tmp$36$x$35$$35$6583 () Int)
(declare-fun VV$35$$35$7341 () Int)
(declare-fun lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3799 () Int)
(declare-fun lq_tmp$36$x$35$$35$6556 () Int)
(declare-fun VV$35$$35$7394 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867265$35$$35$dja9$35$$35$k_$35$$35$2726 () Str)
(declare-fun lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3778 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W () Int)
(declare-fun GHC.Classes.$62$$61$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867350$35$$35$djbw () Int)
(declare-fun lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6333 () Int)
(declare-fun VV$35$$35$F$35$$35$371 () Int)
(declare-fun is$36$GHC.Maybe.Nothing () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867293$35$$35$djaB () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4096 () Map)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$3853 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3112 () Int)
(declare-fun lit$36$Heap () Str)
(declare-fun lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6291 () Int)
(declare-fun GHC.List.span () Int)
(declare-fun lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3875 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3333 () Bool)
(declare-fun lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3580 () Int)
(declare-fun lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3799 () Int)
(declare-fun lq_karg$36$ts$35$$35$aiNR$35$$35$k_$35$$35$1729 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$2 () Int)
(declare-fun VV$35$$35$F$35$$35$476 () Int)
(declare-fun VV$35$$35$F$35$$35$234 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4096 () Map)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$2740 () Int)
(declare-fun lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3214 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3221 () Int)
(declare-fun lq_karg$36$t$35$$35$aiNY$35$$35$k_$35$$35$1229 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH () Int)
(declare-fun lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3150 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h$35$$35$k_$35$$35$996 () Int)
(declare-fun lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3578 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6257 () Int)
(declare-fun VV$35$$35$F$35$$35$432 () Int)
(declare-fun lq_karg$36$ds_dj2M$35$$35$k_$35$$35$1003 () Int)
(declare-fun lq_tmp$36$x$35$$35$6053 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867231$35$$35$dj9B () Int)
(declare-fun ds_dj1s () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867235$35$$35$dj9F () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 () Int)
(declare-fun lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3286 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD () Int)
(declare-fun lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3262 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3578 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3262 () Int)
(declare-fun VV$35$$35$11126 () Map)
(declare-fun VV$35$$35$10073 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$2982 () Int)
(declare-fun GHC.Types.krep$36$$42$Arr$42$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL$35$$35$k_$35$$35$6391 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3214 () Int)
(declare-fun VV$35$$35$7940 () Int)
(declare-fun lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3778 () Int)
(declare-fun ts$39$$35$$35$aiOr () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN$35$$35$k_$35$$35$6391 () Int)
(declare-fun lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3324 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$2830 () Int)
(declare-fun ds_dj3J () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6393 () Int)
(declare-fun VV$35$$35$F$35$$35$521 () Int)
(declare-fun Binomial.assert () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867220$35$$35$dj9q () Int)
(declare-fun r$35$$35$aiNK () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867228$35$$35$dj9y () Int)
(declare-fun lq_karg$36$residual$35$$35$aiNU$35$$35$k_$35$$35$1738 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867207$35$$35$dj9d () Int)
(declare-fun VV$35$$35$F$35$$35$161 () Int)
(declare-fun lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3799 () Int)
(declare-fun lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3586 () Int)
(declare-fun lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6365 () Int)
(declare-fun GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$2859 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3578 () Bool)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6391 () Int)
(declare-fun lq_karg$36$ds_dj2M$35$$35$k_$35$$35$996 () Int)
(declare-fun Binomial.Heap () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6122 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867222$35$$35$dj9s () Int)
(declare-fun GHC.Real.$94$ () Int)
(declare-fun Binomial.treeRank () Int)
(declare-fun lq_karg$36$ds_dj1J$35$$35$k_$35$$35$2861 () Int)
(declare-fun VV$35$$35$F$35$$35$204 () Int)
(declare-fun VV$35$$35$9560 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3578 () Int)
(declare-fun ds_dj45 () Int)
(declare-fun lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3586 () Int)
(declare-fun lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3284 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3174 () Int)
(declare-fun lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6268 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4075 () Map)
(declare-fun VV$35$$35$10172 () Int)
(declare-fun VV$35$$35$10334 () Int)
(declare-fun VV$35$$35$F$35$$35$240 () Int)
(declare-fun fix$36$$36$dOrd_aiZd () Int)
(declare-fun Binomial.treeElts () Int)
(declare-fun VV$35$$35$F$35$$35$47 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 () Int)
(declare-fun lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3326 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM$35$$35$k_$35$$35$6393 () Int)
(declare-fun GHC.Classes.$61$$61$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867226$35$$35$dj9w () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867322$35$$35$djb4 () Int)
(declare-fun lq_tmp$36$x$35$$35$6563 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867239$35$$35$dj9J$35$$35$k_$35$$35$1729 () Map)
(declare-fun lq_karg$36$VV$35$$35$3149$35$$35$k_$35$$35$3150 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK$35$$35$k_$35$$35$6365 () Int)
(declare-fun lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3883 () Int)
(declare-fun lq_karg$36$VV$35$$35$5489$35$$35$k_$35$$35$5490 () Int)
(declare-fun VV$35$$35$7257 () Int)
(declare-fun x$35$$35$aiOm () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4096 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867353$35$$35$djbz () Int)
(declare-fun lq_tmp$36$x$35$$35$6808 () Int)
(declare-fun Binomial.rankOfTailDecreases () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$2982 () Int)
(declare-fun lq_karg$36$VV$35$$35$1002$35$$35$k_$35$$35$996 () Int)
(declare-fun VV$35$$35$10900 () Int)
(declare-fun VV$35$$35$F$35$$35$524 () Int)
(declare-fun VV$35$$35$10229 () Int)
(declare-fun VV$35$$35$9987 () Int)
(declare-fun GHC.Integer.Type.Jn$35$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3853 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867351$35$$35$djbx () Int)
(declare-fun VV$35$$35$F$35$$35$164 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL () Map)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867235$35$$35$dj9F$35$$35$k_$35$$35$1729 () Int)
(declare-fun GHC.List.$33$$33$ () Int)
(declare-fun lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3333 () Int)
(declare-fun lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4102 () Int)
(declare-fun VV$35$$35$F$35$$35$322 () Int)
(declare-fun GHC.Base.$36$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S$35$$35$k_$35$$35$2202 () Int)
(declare-fun VV$35$$35$F$35$$35$478 () Int)
(declare-fun VV$35$$35$F$35$$35$391 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$2969 () Int)
(declare-fun lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3286 () Int)
(declare-fun lq_karg$36$ds_dj3t$35$$35$k_$35$$35$1252 () Int)
(declare-fun GHC.List.last () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3172 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3286 () Int)
(declare-fun lq_karg$36$x$35$$35$aiNN$35$$35$k_$35$$35$1729 () Int)
(declare-fun Binomial.insert () Int)
(declare-fun lq_karg$36$ts$35$$35$aiOD$35$$35$k_$35$$35$2394 () Int)
(declare-fun ts2$35$$35$aiOR () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4102 () Int)
(declare-fun lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3221 () Int)
(declare-fun VV$35$$35$9718 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T$35$$35$k_$35$$35$2394 () Int)
(declare-fun is$36$GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3883 () Int)
(declare-fun VV$35$$35$F$35$$35$245 () Int)
(declare-fun lq_karg$36$VV$35$$35$1549$35$$35$k_$35$$35$1550 () Map)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3324 () Bool)
(declare-fun lq_karg$36$VV$35$$35$2829$35$$35$k_$35$$35$2830 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867214$35$$35$dj9k$35$$35$k_$35$$35$1103 () Str)
(declare-fun x1$35$$35$aiO9 () Int)
(declare-fun VV$35$$35$11642 () Int)
(declare-fun VV$35$$35$F$35$$35$443 () Map)
(declare-fun lq_anf$36$$35$$35$7205759403792867323$35$$35$djb5 () Int)
(declare-fun VV$35$$35$10081 () Int)
(declare-fun residual$35$$35$aiOG () Int)
(declare-fun lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3172 () Int)
(declare-fun GHC.List.zipWith () Int)
(declare-fun papp5 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867336$35$$35$djbi () Bool)
(declare-fun VV$35$$35$10133 () Int)
(declare-fun lq_tmp$36$x$35$$35$2361 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3112 () Int)
(declare-fun VV$35$$35$F$35$$35$510 () Int)
(declare-fun VV$35$$35$F$35$$35$316 () Int)
(declare-fun snd () Int)
(declare-fun xs$35$$35$aiNM () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6333 () Int)
(declare-fun lq_karg$36$VV$35$$35$3577$35$$35$k_$35$$35$3578 () Int)
(declare-fun VV$35$$35$F$35$$35$286 () Int)
(declare-fun VV$35$$35$F$35$$35$32 () Int)
(declare-fun lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3586 () Int)
(declare-fun lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3172 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3172 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T () Int)
(declare-fun GHC.Classes.$36$fEqInt () Int)
(declare-fun VV$35$$35$F$35$$35$149 () Int)
(declare-fun lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3556 () Int)
(declare-fun VV$35$$35$F$35$$35$253 () Int)
(declare-fun lq_karg$36$VV$35$$35$1737$35$$35$k_$35$$35$1738 () Map)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf$35$$35$k_$35$$35$3212 () Int)
(declare-fun VV$35$$35$F$35$$35$455 () Int)
(declare-fun ds_dj30 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867320$35$$35$djb2$35$$35$k_$35$$35$4589 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3333 () Int)
(declare-fun GHC.Base.$43$$43$ () Int)
(declare-fun VV$35$$35$10295 () Int)
(declare-fun lq_tmp$36$x$35$$35$682 () Int)
(declare-fun lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3035 () Int)
(declare-fun lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6391 () Int)
(declare-fun GHC.Maybe.Just () Int)
(declare-fun fix$36$$36$dEq_aiXD () Int)
(declare-fun VV$35$$35$10125 () Int)
(declare-fun x_Tuple22 () Int)
(declare-fun Binomial.root () Int)
(declare-fun lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3883 () Int)
(declare-fun Binomial.singleton () Int)
(declare-fun lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6107 () Int)
(declare-fun lit$36$$47$home$47$jamie$47$Documents$47$Master$47$MasterThesis$47$master$45$thesis$45$project$47$lh$45$thesis$47$src$47$Binomial.hs$58$$40$83$44$1$41$$45$$40$84$44$77$41$$124$function$32$rankOfFirstTree () Str)
(declare-fun lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4102 () Int)
(declare-fun VV$35$$35$F$35$$35$499 () Int)
(declare-fun lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6240 () Int)
(declare-fun lq_karg$36$VV$35$$35$3220$35$$35$k_$35$$35$3214 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3333 () Bool)
(declare-fun lq_karg$36$VV$35$$35$2867$35$$35$k_$35$$35$2868 () Int)
(declare-fun ts$35$$35$aiOH () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3853 () Bool)
(declare-fun Binomial.deleteMin$39$ () Int)
(declare-fun lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$2969 () Int)
(declare-fun lq_karg$36$x$35$$35$aiOm$35$$35$k_$35$$35$5555 () Int)
(declare-fun GHC.Classes.$36$fOrdInt () Int)
(declare-fun VV$35$$35$10358 () Int)
(declare-fun VV$35$$35$10097 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X$35$$35$k_$35$$35$2394 () Int)
(declare-fun ds_dj7T () Int)
(declare-fun lq_karg$36$VV$35$$35$3777$35$$35$k_$35$$35$3778 () Int)
(declare-fun x$35$$35$aiO2 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4096 () Bool)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3324 () Int)
(declare-fun lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4102 () Int)
(declare-fun VV$35$$35$F$35$$35$352 () Int)
(declare-fun VV$35$$35$F$35$$35$150 () Int)
(declare-fun t2$35$$35$aiOY () Int)
(declare-fun lq_karg$36$VV$35$$35$2827$35$$35$k_$35$$35$2828 () Int)
(declare-fun lq_karg$36$ds_dj1J$35$$35$k_$35$$35$2984 () Int)
(declare-fun t$35$$35$aiOn () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867273$35$$35$djah$35$$35$k_$35$$35$3324 () Int)
(declare-fun VV$35$$35$F$35$$35$283 () Int)
(declare-fun VV$35$$35$F$35$$35$37 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$3875 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3324 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3035 () Int)
(declare-fun VV$35$$35$F$35$$35$485 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3799 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867273$35$$35$djah () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3214 () Bool)
(declare-fun lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3556 () Int)
(declare-fun GHC.Real.fromIntegral () Int)
(declare-fun VV$35$$35$F$35$$35$450 () Map)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$2719 () Int)
(declare-fun lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3262 () Int)
(declare-fun lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3586 () Int)
(declare-fun GHC.IO.Exception.IOError () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867277$35$$35$djal () Int)
(declare-fun VV$35$$35$F$35$$35$73 () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867342$35$$35$djbo$35$$35$k_$35$$35$4901 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4102 () Map)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3262 () Int)
(declare-fun GHC.List.tail () Int)
(declare-fun lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3853 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0$35$$35$k_$35$$35$2394 () Int)
(declare-fun lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3033 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3580 () Bool)
(declare-fun lq_tmp$36$x$35$$35$2428 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6268 () Int)
(declare-fun VV$35$$35$F$35$$35$414 () Int)
(declare-fun Binomial.unheapNonempty () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3883 () Bool)
(declare-fun lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$2830 () Int)
(declare-fun fix$36$$36$dOrd_aiYP () Int)
(declare-fun VV$35$$35$10164 () Int)
(declare-fun lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6391 () Int)
(declare-fun ds_dj4J () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4102 () Map)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3580 () Int)
(declare-fun VV$35$$35$10560 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD () Int)
(declare-fun VV$35$$35$10092 () Int)
(declare-fun GHC.Types.Module () Int)
(declare-fun GHC.Stack.Types.FreezeCallStack () Int)
(declare-fun lq_karg$36$residual$35$$35$aiOG$35$$35$k_$35$$35$2377 () Int)
(declare-fun Language.Haskell.Liquid.Bag.get () Int)
(declare-fun lq_tmp$36$x$35$$35$6637 () Int)
(declare-fun VV$35$$35$10975 () Map)
(declare-fun VV$35$$35$F$35$$35$357 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3580 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$2859 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4102 () Bool)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3799 () Int)
(declare-fun GHC.Types.TrNameD () Int)
(declare-fun lq_karg$36$t$35$$35$aiOF$35$$35$k_$35$$35$2202 () Int)
(declare-fun VV$35$$35$F$35$$35$382 () Int)
(declare-fun lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3174 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867329$35$$35$djbb$35$$35$k_$35$$35$4901 () Str)
(declare-fun VV$35$$35$F$35$$35$515 () Int)
(declare-fun GHC.Types.TyCon () Int)
(declare-fun ds_dj3u () Int)
(declare-fun lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3778 () Int)
(declare-fun lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3333 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867339$35$$35$djbl () Int)
(declare-fun lq_karg$36$VV$35$$35$6290$35$$35$k_$35$$35$6291 () Int)
(declare-fun VV$35$$35$9539 () Int)
(declare-fun ds_dj7z () Int)
(declare-fun lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3578 () Int)
(declare-fun lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3586 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W$35$$35$k_$35$$35$2394 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867284$35$$35$djas () Int)
(declare-fun lq_karg$36$t$35$$35$aiOF$35$$35$k_$35$$35$2377 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867312$35$$35$djaU () Int)
(declare-fun ts1$35$$35$aiOP () Int)
(declare-fun lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3112 () Int)
(declare-fun lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6122 () Int)
(declare-fun lq_karg$36$VV$35$$35$3034$35$$35$k_$35$$35$3035 () Int)
(declare-fun VV$35$$35$F$35$$35$222 () Bool)
(declare-fun VV$35$$35$F$35$$35$96 () Int)
(declare-fun lq_karg$36$VV$35$$35$995$35$$35$k_$35$$35$996 () Int)
(declare-fun new$35$$35$aiOj () Int)
(declare-fun lq_karg$36$ds_dj3u$35$$35$k_$35$$35$1252 () Int)
(declare-fun lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6257 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3286 () Int)
(declare-fun VV$35$$35$F$35$$35$25 () Int)
(declare-fun fromJust () Int)
(declare-fun lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3805 () Int)
(declare-fun VV$35$$35$F$35$$35$497 () Int)
(declare-fun VV$35$$35$9492 () Int)
(declare-fun VV$35$$35$F$35$$35$424 () Int)
(declare-fun lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3221 () Int)
(declare-fun Binomial.link () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4075 () Int)
(declare-fun lit$36$main () Str)
(declare-fun lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3799 () Int)
(declare-fun lq_karg$36$x$35$$35$aiOs$35$$35$k_$35$$35$4589 () Int)
(declare-fun ds_dj6s () Int)
(declare-fun lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3578 () Int)
(declare-fun lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3877 () Int)
(declare-fun t$35$$35$aiNY () Int)
(declare-fun lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3580 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3333 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3172 () Int)
(declare-fun lq_karg$36$VV$35$$35$2983$35$$35$k_$35$$35$2982 () Int)
(declare-fun lq_karg$36$VV$35$$35$3798$35$$35$k_$35$$35$3799 () Int)
(declare-fun lq_karg$36$VV$35$$35$6121$35$$35$k_$35$$35$6120 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867229$35$$35$dj9z$35$$35$k_$35$$35$1738 () Int)
(declare-fun Binomial.Node () Int)
(declare-fun lq_karg$36$VV$35$$35$3032$35$$35$k_$35$$35$3033 () Int)
(declare-fun lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3799 () Int)
(declare-fun lq_karg$36$ds_dj4K$35$$35$k_$35$$35$1729 () Int)
(declare-fun lq_karg$36$VV$35$$35$3173$35$$35$k_$35$$35$3172 () Int)
(declare-fun VV$35$$35$7375 () Int)
(declare-fun Data.Map.Internal.$36$WBin () Int)
(declare-fun lq_karg$36$VV$35$$35$4900$35$$35$k_$35$$35$4901 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867273$35$$35$djah$35$$35$k_$35$$35$3333 () Int)
(declare-fun ds_dj4a () Int)
(declare-fun VV$35$$35$F$35$$35$389 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867227$35$$35$dj9x$35$$35$k_$35$$35$1550 () Int)
(declare-fun lq_karg$36$VV$35$$35$4588$35$$35$k_$35$$35$4589 () Int)
(declare-fun VV$35$$35$F$35$$35$318 () Int)
(declare-fun ds_dj8m () Int)
(declare-fun h$35$$35$aiOl () Int)
(declare-fun lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6393 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U$35$$35$k_$35$$35$2394 () Bool)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4096 () Bool)
(declare-fun lq_karg$36$VV$35$$35$3882$35$$35$k_$35$$35$3883 () Int)
(declare-fun VV$35$$35$F$35$$35$288 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3778 () Int)
(declare-fun VV$35$$35$F$35$$35$345 () Int)
(declare-fun VV$35$$35$F$35$$35$147 () Str)
(declare-fun lq_karg$36$ts$35$$35$aiOt$35$$35$k_$35$$35$4581 () Int)
(declare-fun Binomial.merge () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867238$35$$35$dj9I () Map)
(declare-fun lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3286 () Int)
(declare-fun fix$36$$36$dOrd_aiW8 () Int)
(declare-fun lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3805 () Int)
(declare-fun lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6268 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3778 () Bool)
(declare-fun lq_tmp$36$x$35$$35$6657 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7 () Int)
(declare-fun t$35$$35$aj09 () Int)
(declare-fun lq_tmp$36$x$35$$35$4699 () Int)
(declare-fun Binomial.size () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867232$35$$35$dj9C () Int)
(declare-fun lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3150 () Int)
(declare-fun VV$35$$35$F$35$$35$373 () Int)
(declare-fun Data.Foldable.length () Int)
(declare-fun lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3578 () Int)
(declare-fun lq_karg$36$t$35$$35$aiOF$35$$35$k_$35$$35$2394 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf$35$$35$k_$35$$35$3174 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G () Int)
(declare-fun VV$35$$35$10261 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6257 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867233$35$$35$dj9D$35$$35$k_$35$$35$1738 () Int)
(declare-fun lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3877 () Int)
(declare-fun VV$35$$35$9651 () Int)
(declare-fun VV$35$$35$F$35$$35$236 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867274$35$$35$djai () Int)
(declare-fun lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6365 () Int)
(declare-fun lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3578 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4102 () Map)
(declare-fun lq_anf$36$$35$$35$7205759403792867251$35$$35$dj9V () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867276$35$$35$djak () Int)
(declare-fun lq_karg$36$ds_dj1J$35$$35$k_$35$$35$2868 () Int)
(declare-fun ds_dj8p () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867330$35$$35$djbc () Int)
(declare-fun VV$35$$35$10500 () Map)
(declare-fun lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$2984 () Int)
(declare-fun lq_karg$36$sz$35$$35$aiO7$35$$35$k_$35$$35$2654 () Int)
(declare-fun lq_karg$36$ds_dj2M$35$$35$k_$35$$35$1001 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3580 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E () Int)
(declare-fun VV$35$$35$10588 () Int)
(declare-fun VV$35$$35$11185 () Int)
(declare-fun lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3284 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867237$35$$35$dj9H$35$$35$k_$35$$35$1729 () Map)
(declare-fun VV$35$$35$F$35$$35$249 () Int)
(declare-fun lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3805 () Int)
(declare-fun VV$35$$35$10342 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867334$35$$35$djbg () Int)
(declare-fun lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3778 () Int)
(declare-fun VV$35$$35$11150 () Int)
(declare-fun fix$36$$36$dOrd_aiWX () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4096 () Int)
(declare-fun lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3214 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3262 () Int)
(declare-fun Control.Exception.Base.patError () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3214 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$3875 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867230$35$$35$dj9A () Bool)
(declare-fun lq_tmp$36$x$35$$35$6613 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$3875 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4075 () Int)
(declare-fun VV$35$$35$F$35$$35$176 () Int)
(declare-fun lq_karg$36$ds_dj8q$35$$35$k_$35$$35$2377 () Int)
(declare-fun fix$36$$36$dOrd_aiX8 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O$35$$35$k_$35$$35$2377 () Int)
(declare-fun VV$35$$35$7267 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4102 () Bool)
(declare-fun lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4096 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867272$35$$35$djag$35$$35$k_$35$$35$3214 () Int)
(declare-fun lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3112 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867317$35$$35$djaZ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3326 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867208$35$$35$dj9e () Int)
(declare-fun VV$35$$35$11210 () Int)
(declare-fun lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6333 () Int)
(declare-fun GHC.Classes.not () Int)
(declare-fun VV$35$$35$F$35$$35$374 () Int)
(declare-fun VV$35$$35$10813 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3214 () Int)
(declare-fun GHC.List.iterate () Int)
(declare-fun ds_dj2M () Int)
(declare-fun VV$35$$35$F$35$$35$50 () Int)
(declare-fun lq_karg$36$VV$35$$35$3041$35$$35$k_$35$$35$3035 () Int)
(declare-fun lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3101 () Int)
(declare-fun lq_karg$36$x$35$$35$aiO4$35$$35$k_$35$$35$2654 () Int)
(declare-fun lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3326 () Int)
(declare-fun VV$35$$35$F$35$$35$85 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$3883 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3799 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2$35$$35$k_$35$$35$2377 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3214 () Bool)
(declare-fun fromList () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$2868 () Int)
(declare-fun VV$35$$35$F$35$$35$437 () Map)
(declare-fun VV$35$$35$F$35$$35$275 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867227$35$$35$dj9x () Int)
(declare-fun VV$35$$35$10389 () Int)
(declare-fun lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$2828 () Int)
(declare-fun VV$35$$35$11380 () Int)
(declare-fun lq_tmp$36$x$35$$35$3790 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3799 () Map)
(declare-fun VV$35$$35$F$35$$35$49 () Int)
(declare-fun lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4096 () Int)
(declare-fun residual$35$$35$aiNU () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867315$35$$35$djaX () Bool)
(declare-fun lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6291 () Int)
(declare-fun VV$35$$35$10578 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3556 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867274$35$$35$djai$35$$35$k_$35$$35$3326 () Int)
(declare-fun lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3212 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4075 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3875 () Bool)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3221 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4075 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF () Int)
(declare-fun lq_tmp$36$x$35$$35$6835 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$2984 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL$35$$35$k_$35$$35$6365 () Int)
(declare-fun lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4075 () Int)
(declare-fun VV$35$$35$F$35$$35$522 () Int)
(declare-fun VV$35$$35$F$35$$35$379 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3799 () Map)
(declare-fun Binomial.subtreeEltsAreEltsOfTree () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867290$35$$35$djay () Map)
(declare-fun VV$35$$35$10272 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3778 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867219$35$$35$dj9p () Int)
(declare-fun VV$35$$35$F$35$$35$324 () Int)
(declare-fun ts$35$$35$aiO1 () Int)
(declare-fun VV$35$$35$F$35$$35$88 () Int)
(declare-fun addrLen () Int)
(declare-fun GHC.Real.$36$W$58$$37$ () Int)
(declare-fun lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6391 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j$35$$35$k_$35$$35$1103 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S$35$$35$k_$35$$35$2394 () Int)
(declare-fun VV$35$$35$F$35$$35$401 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3174 () Int)
(declare-fun lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4096 () Int)
(declare-fun GHC.List.splitAt () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6365 () Int)
(declare-fun lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3578 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867308$35$$35$djaQ () Int)
(declare-fun GHC.Types.KindRepFun () Int)
(declare-fun ds_dj46 () Bool)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$5562$35$$35$k_$35$$35$5561 () Int)
(declare-fun VV$35$$35$F$35$$35$243 () Int)
(declare-fun VV$35$$35$F$35$$35$44 () Int)
(declare-fun lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3042 () Int)
(declare-fun VV$35$$35$9642 () Int)
(declare-fun lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$2861 () Int)
(declare-fun lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4075 () Int)
(declare-fun lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4096 () Int)
(declare-fun lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3174 () Int)
(declare-fun papp3 () Int)
(declare-fun GHC.List.scanl1 () Int)
(declare-fun lq_karg$36$ts$35$$35$aiOD$35$$35$k_$35$$35$2202 () Int)
(declare-fun GHC.Real.toInteger () Int)
(declare-fun VV$35$$35$7349 () Int)
(declare-fun lq_tmp$36$x$35$$35$3636 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3875 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3778 () Map)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T$35$$35$k_$35$$35$2202 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3150 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867358$35$$35$djbE$35$$35$k_$35$$35$5765 () Str)
(declare-fun lq_karg$36$VV$35$$35$2739$35$$35$k_$35$$35$2726 () Int)
(declare-fun Data.Foldable.null () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6333 () Int)
(declare-fun VV$35$$35$F$35$$35$251 () Int)
(declare-fun lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6257 () Int)
(declare-fun lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4096 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3586 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867267$35$$35$djab () Int)
(declare-fun VV$35$$35$F$35$$35$74 () Int)
(declare-fun lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6393 () Int)
(declare-fun lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3221 () Int)
(declare-fun VV$35$$35$F$35$$35$215 () Int)
(declare-fun lq_karg$36$ds_dj2p$35$$35$k_$35$$35$2969 () Int)
(declare-fun lq_tmp$36$x$35$$35$4087 () Int)
(declare-fun ds_dj4M () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t$35$$35$k_$35$$35$1729 () Int)
(declare-fun lq_karg$36$ts$35$$35$aiOD$35$$35$k_$35$$35$2377 () Int)
(declare-fun GHC.Classes.$38$$38$ () Int)
(declare-fun GHC.Classes.$124$$124$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$3883 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T$35$$35$k_$35$$35$2377 () Int)
(declare-fun GHC.List.dropWhile () Int)
(declare-fun Language.Haskell.Liquid.Bag.put () Int)
(declare-fun lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3035 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$3883 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3326 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL$35$$35$k_$35$$35$6333 () Int)
(declare-fun lq_tmp$36$x$35$$35$6630 () Int)
(declare-fun VV$35$$35$10873 () Map)
(declare-fun VV$35$$35$F$35$$35$350 () Int)
(declare-fun VV$35$$35$F$35$$35$152 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4075 () Int)
(declare-fun VV$35$$35$7360 () Int)
(declare-fun VV$35$$35$7126 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867273$35$$35$djah$35$$35$k_$35$$35$3326 () Int)
(declare-fun VV$35$$35$7278 () Int)
(declare-fun VV$35$$35$F$35$$35$512 () Int)
(declare-fun VV$35$$35$F$35$$35$314 () Int)
(declare-fun VV$35$$35$F$35$$35$116 () Int)
(declare-fun GHC.Classes.$36$p1Ord () Int)
(declare-fun lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3172 () Int)
(declare-fun VV$35$$35$F$35$$35$482 () Int)
(declare-fun VV$35$$35$F$35$$35$284 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3221 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC () Int)
(declare-fun fix$36$$36$dOrd_aiVe () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6268 () Int)
(declare-fun VV$35$$35$F$35$$35$68 () Int)
(declare-fun VV$35$$35$F$35$$35$71 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3172 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3556 () Int)
(declare-fun VV$35$$35$11132 () Int)
(declare-fun lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3580 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4102 () Int)
(declare-fun lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3033 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD$35$$35$k_$35$$35$5765 () Int)
(declare-fun VV$35$$35$F$35$$35$298 () Int)
(declare-fun VV$35$$35$9633 () Int)
(declare-fun GHC.Enum.C$58$Bounded () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3172 () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3805 () Int)
(declare-fun lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3174 () Int)
(declare-fun lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6393 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4096 () Map)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$3853 () Int)
(declare-fun GHC.List.init () Int)
(declare-fun is$36$GHC.Maybe.Just () Int)
(declare-fun GHC.List.scanr1 () Int)
(declare-fun lq_tmp$36$x$35$$35$3872 () Int)
(declare-fun GHC.Types.True () Bool)
(declare-fun VV$35$$35$10018 () Int)
(declare-fun lq_karg$36$ds_dj2p$35$$35$k_$35$$35$2830 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867210$35$$35$dj9g () Int)
(declare-fun lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6257 () Int)
(declare-fun VV$35$$35$F$35$$35$355 () Int)
(declare-fun VV$35$$35$F$35$$35$157 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3805 () Int)
(declare-fun lq_karg$36$t1$35$$35$aiOV$35$$35$k_$35$$35$4901 () Int)
(declare-fun VV$35$$35$7365 () Int)
(declare-fun GHC.List.break () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o () Int)
(declare-fun VV$35$$35$F$35$$35$380 () Int)
(declare-fun VV$35$$35$F$35$$35$308 () Int)
(declare-fun lq_karg$36$ds_dj4J$35$$35$k_$35$$35$1738 () Int)
(declare-fun VV$35$$35$F$35$$35$35 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$3877 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3326 () Int)
(declare-fun VV$35$$35$F$35$$35$487 () Int)
(declare-fun lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3333 () Int)
(declare-fun Binomial.merge$39$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3333 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867328$35$$35$djba$35$$35$k_$35$$35$4901 () Int)
(declare-fun VV$35$$35$F$35$$35$254 () Int)
(declare-fun lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3578 () Int)
(declare-fun VV$35$$35$F$35$$35$419 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 () Int)
(declare-fun lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6068 () Int)
(declare-fun VV$35$$35$F$35$$35$23 () Int)
(declare-fun GHC.Types.$36$WKindRepVar () Int)
(declare-fun lq_karg$36$VV$35$$35$2725$35$$35$k_$35$$35$2719 () Int)
(declare-fun lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6291 () Int)
(declare-fun VV$35$$35$F$35$$35$491 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U$35$$35$k_$35$$35$2202 () Bool)
(declare-fun t$35$$35$aiOF () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867345$35$$35$djbr () Int)
(declare-fun lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3042 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3578 () Int)
(declare-fun fix$36$$36$dEq_aj0G () Int)
(declare-fun GHC.Stack.Types.EmptyCallStack () Int)
(declare-fun lq_tmp$36$x$35$$35$6539 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$997$35$$35$k_$35$$35$1001 () Int)
(declare-fun ds_dj1J () Int)
(declare-fun lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3586 () Int)
(declare-fun x_Tuple33 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R () Int)
(declare-fun lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4075 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3174 () Int)
(declare-fun lq_karg$36$VV$35$$35$2983$35$$35$k_$35$$35$2984 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867212$35$$35$dj9i$35$$35$k_$35$$35$1001 () Str)
(declare-fun VV$35$$35$10879 () Int)
(declare-fun lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3883 () Int)
(declare-fun VV$35$$35$F$35$$35$158 () Int)
(declare-fun Data.Either.Right () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1$35$$35$k_$35$$35$2377 () Int)
(declare-fun lq_karg$36$VV$35$$35$3173$35$$35$k_$35$$35$3174 () Int)
(declare-fun lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3875 () Int)
(declare-fun VV$35$$35$7236 () Int)
(declare-fun a$35$$35$aiNJ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3877 () Bool)
(declare-fun VV$35$$35$F$35$$35$501 () Int)
(declare-fun VV$35$$35$F$35$$35$105 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q$35$$35$k_$35$$35$2377 () Int)
(declare-fun lq_karg$36$VV$35$$35$2393$35$$35$k_$35$$35$2394 () Int)
(declare-fun lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3150 () Int)
(declare-fun VV$35$$35$F$35$$35$488 () Int)
(declare-fun VV$35$$35$F$35$$35$343 () Int)
(declare-fun VV$35$$35$10248 () Int)
(declare-fun lq_karg$36$ds_dj4M$35$$35$k_$35$$35$1729 () Int)
(declare-fun lq_karg$36$residual$35$$35$aiOG$35$$35$k_$35$$35$2394 () Int)
(declare-fun lq_karg$36$ds_dj8m$35$$35$k_$35$$35$2377 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h$35$$35$k_$35$$35$1003 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867320$35$$35$djb2$35$$35$k_$35$$35$4581 () Int)
(declare-fun lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3580 () Int)
(declare-fun lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3805 () Int)
(declare-fun lq_tmp$36$x$35$$35$2542 () Int)
(declare-fun VV$35$$35$F$35$$35$67 () Int)
(declare-fun lq_karg$36$VV$35$$35$3034$35$$35$k_$35$$35$3033 () Int)
(declare-fun lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3556 () Int)
(declare-fun VV$35$$35$F$35$$35$427 () Bool)
(declare-fun lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3883 () Int)
(declare-fun lq_karg$36$VV$35$$35$2739$35$$35$k_$35$$35$2719 () Int)
(declare-fun lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6333 () Int)
(declare-fun VV$35$$35$9501 () Int)
(declare-fun lq_tmp$36$x$35$$35$1629 () Int)
(declare-fun lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4096 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3262 () Bool)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3033 () Int)
(declare-fun lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3101 () Int)
(declare-fun t$39$$35$$35$aiOq () Int)
(declare-fun cast_as () Int)
(declare-fun ts2$39$$35$$35$aiOZ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4075 () Bool)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X$35$$35$k_$35$$35$2377 () Int)
(declare-fun lq_karg$36$VV$35$$35$2860$35$$35$k_$35$$35$2859 () Int)
(declare-fun GHC.Types.KindRepApp () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3853 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867349$35$$35$djbv$35$$35$k_$35$$35$5553 () Int)
(declare-fun VV$35$$35$F$35$$35$188 () Int)
(declare-fun lq_karg$36$VV$35$$35$6119$35$$35$k_$35$$35$6120 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK$35$$35$k_$35$$35$6291 () Int)
(declare-fun VV$35$$35$F$35$$35$504 () Int)
(declare-fun VV$35$$35$F$35$$35$100 () Int)
(declare-fun ds_dj8n () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6107 () Int)
(declare-fun GHC.List.head () Int)
(declare-fun GHC.Integer.Type.S$35$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3586 () Bool)
(declare-fun lq_karg$36$ds_dj19$35$$35$k_$35$$35$5765 () Int)
(declare-fun VV$35$$35$F$35$$35$346 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4102 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$3884$35$$35$k_$35$$35$3883 () Int)
(declare-fun lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3212 () Int)
(declare-fun VV$35$$35$F$35$$35$458 () Int)
(declare-fun ts1$35$$35$aiOS () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4102 () Int)
(declare-fun VV$35$$35$11020 () Int)
(declare-fun VV$35$$35$F$35$$35$95 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4102 () Int)
(declare-fun VV$35$$35$F$35$$35$463 () Int)
(declare-fun new$35$$35$aiOi () Int)
(declare-fun cast_as_int () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3262 () Int)
(declare-fun VV$35$$35$F$35$$35$494 () Int)
(declare-fun VV$35$$35$F$35$$35$26 () Int)
(declare-fun VV$35$$35$11507 () Bool)
(declare-fun VV$35$$35$11301 () Int)
(declare-fun GHC.Num.$43$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3324 () Int)
(declare-fun VV$35$$35$10909 () Int)
(declare-fun VV$35$$35$F$35$$35$129 () Int)
(declare-fun VV$35$$35$F$35$$35$376 () Int)
(declare-fun Binomial.reverseHeapListAux () Int)
(declare-fun lq_tmp$36$x$35$$35$1718 () Map)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3805 () Map)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3262 () Int)
(declare-fun lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3112 () Int)
(declare-fun lq_karg$36$ds_dj1J$35$$35$k_$35$$35$2830 () Int)
(declare-fun lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3324 () Int)
(declare-fun VV$35$$35$F$35$$35$471 () Bool)
(declare-fun VV$35$$35$F$35$$35$87 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3172 () Bool)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3778 () Map)
(declare-fun lq_anf$36$$35$$35$7205759403792867280$35$$35$djao () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2 () Int)
(declare-fun ds_dj8u () Int)
(declare-fun VV$35$$35$11111 () Int)
(declare-fun VV$35$$35$9681 () Int)
(declare-fun VV$35$$35$9483 () Int)
(declare-fun VV$35$$35$10303 () Int)
(declare-fun VV$35$$35$F$35$$35$435 () Int)
(declare-fun VV$35$$35$F$35$$35$277 () Int)
(declare-fun lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4102 () Int)
(declare-fun ds_dj1t () Int)
(declare-fun lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3212 () Int)
(declare-fun lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4075 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3805 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867274$35$$35$djai$35$$35$k_$35$$35$3324 () Int)
(declare-fun lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6365 () Int)
(declare-fun lq_karg$36$ds_dj1J$35$$35$k_$35$$35$2740 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t$35$$35$k_$35$$35$1550 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867209$35$$35$dj9f () Int)
(declare-fun len () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3877 () Bool)
(declare-fun lq_karg$36$ds_dj2p$35$$35$k_$35$$35$2828 () Int)
(declare-fun lq_karg$36$ds_dj4K$35$$35$k_$35$$35$1738 () Int)
(declare-fun Binomial.empty () Int)
(declare-fun VV$35$$35$F$35$$35$332 () Int)
(declare-fun VV$35$$35$10981 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3580 () Int)
(declare-fun ts1$39$$35$$35$aiOW () Int)
(declare-fun VV$35$$35$10894 () Map)
(declare-fun lq_anf$36$$35$$35$7205759403792867278$35$$35$djam () Int)
(declare-fun VV$35$$35$F$35$$35$160 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867320$35$$35$djb2 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867265$35$$35$dja9$35$$35$k_$35$$35$2717 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792867305$35$$35$djaN () Int)
(declare-fun t$35$$35$aiOu () Int)
(declare-fun ds_dj19 () Int)
(declare-fun lq_karg$36$ds_dj7T$35$$35$k_$35$$35$2394 () Int)
(declare-fun lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6393 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ () Map)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6365 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3033 () Int)
(declare-fun lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4096 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3578 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867270$35$$35$djae () Bool)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3212 () Int)
(declare-fun VV$35$$35$11590 () Int)
(declare-fun VV$35$$35$11194 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867265$35$$35$dja9 () Str)
(declare-fun ds_dj44 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4102 () Int)
(declare-fun lit$36$Tree () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3333 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z () Int)
(declare-fun ds_dj6F () Int)
(declare-fun VV$35$$35$F$35$$35$241 () Int)
(declare-fun VV$35$$35$F$35$$35$46 () Int)
(declare-fun GHC.Types.LT () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4096 () Int)
(declare-fun VV$35$$35$F$35$$35$447 () Map)
(declare-fun lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3033 () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun papp1 () Int)
(declare-fun VV$35$$35$11361 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3805 () Bool)
(declare-fun lq_karg$36$ts$35$$35$aiOt$35$$35$k_$35$$35$4589 () Int)
(declare-fun lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3042 () Int)
(declare-fun VV$35$$35$10533 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3877 () Int)
(declare-fun lq_tmp$36$x$35$$35$2118 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867321$35$$35$djb3 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867233$35$$35$dj9D$35$$35$k_$35$$35$1729 () Int)
(declare-fun lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3778 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867325$35$$35$djb7 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM$35$$35$k_$35$$35$6365 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867324$35$$35$djb6 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867358$35$$35$djbE () Str)
(declare-fun lq_karg$36$ds_dj2p$35$$35$k_$35$$35$2861 () Int)
(declare-fun sz1$35$$35$aiOc () Int)
(declare-fun lq_tmp$36$x$35$$35$6400 () Int)
(declare-fun VV$35$$35$F$35$$35$520 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867272$35$$35$djag () Int)
(declare-fun lq_karg$36$ds_dj4J$35$$35$k_$35$$35$1550 () Int)
(declare-fun lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3556 () Int)
(declare-fun lq_karg$36$ds_dj30$35$$35$k_$35$$35$1252 () Int)
(declare-fun ts1$35$$35$aiOb () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867313$35$$35$djaV () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3326 () Int)
(declare-fun GHC.List.drop () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867268$35$$35$djac () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3286 () Int)
(declare-fun lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3877 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4075 () Int)
(declare-fun lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3578 () Int)
(declare-fun ts$35$$35$aiOt () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3326 () Bool)
(declare-fun ds_dj43 () Int)
(declare-fun lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3580 () Int)
(declare-fun VV$35$$35$10381 () Int)
(declare-fun t1$35$$35$aiOV () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3172 () Int)
(declare-fun lq_karg$36$VV$35$$35$3285$35$$35$k_$35$$35$3286 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867206$35$$35$dj9c () Int)
(declare-fun lq_karg$36$VV$35$$35$1251$35$$35$k_$35$$35$1252 () Int)
(declare-fun lq_karg$36$VV$35$$35$3325$35$$35$k_$35$$35$3326 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$2969 () Int)
(declare-fun lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3101 () Int)
(declare-fun lq_karg$36$VV$35$$35$3261$35$$35$k_$35$$35$3262 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 () Int)
(declare-fun lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6240 () Int)
(declare-fun lq_karg$36$VV$35$$35$3211$35$$35$k_$35$$35$3212 () Int)
(declare-fun lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3799 () Int)
(declare-fun lq_karg$36$VV$35$$35$6172$35$$35$k_$35$$35$6171 () Int)
(declare-fun papp6 () Int)
(declare-fun lq_karg$36$VV$35$$35$4095$35$$35$k_$35$$35$4096 () Int)
(declare-fun GHC.Real.mod () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$2984 () Int)
(declare-fun lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3877 () Int)
(declare-fun lq_karg$36$ts1$39$$35$$35$aiOW$35$$35$k_$35$$35$4901 () Int)
(declare-fun lq_karg$36$ds_dj1J$35$$35$k_$35$$35$2717 () Int)
(declare-fun Binomial.deleteMin () Int)
(declare-fun Language.Haskell.Liquid.Bag.empty () Map)
(declare-fun lq_anf$36$$35$$35$7205759403792867311$35$$35$djaT () Bool)
(declare-fun VV$35$$35$F$35$$35$338 () Int)
(declare-fun VV$35$$35$7399 () Int)
(declare-fun lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3853 () Int)
(declare-fun is$36$GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3212 () Int)
(declare-fun VV$35$$35$7311 () Int)
(declare-fun lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3805 () Int)
(declare-fun lq_karg$36$VV$35$$35$6392$35$$35$k_$35$$35$6391 () Int)
(declare-fun GHC.Classes.C$58$IP () Int)
(declare-fun VV$35$$35$11218 () Int)
(declare-fun lq_karg$36$VV$35$$35$3876$35$$35$k_$35$$35$3875 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK$35$$35$k_$35$$35$6391 () Int)
(declare-fun lq_karg$36$VV$35$$35$4582$35$$35$k_$35$$35$4581 () Int)
(declare-fun lit$36$$47$home$47$jamie$47$Documents$47$Master$47$MasterThesis$47$master$45$thesis$45$project$47$lh$45$thesis$47$src$47$Binomial.hs$58$78$58$1$45$31$124$function$32$rankOfTailDecreases () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792867204$35$$35$dj9a () Int)
(declare-fun Data.Either.Left () Int)
(declare-fun VV$35$$35$11047 () Int)
(declare-fun lq_karg$36$VV$35$$35$2201$35$$35$k_$35$$35$2202 () Int)
(declare-fun VV$35$$35$F$35$$35$167 () Int)
(declare-fun lq_karg$36$VV$35$$35$3041$35$$35$k_$35$$35$3042 () Int)
(declare-fun lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3580 () Int)
(declare-fun lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3805 () Int)
(declare-fun lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3035 () Int)
(declare-fun lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3578 () Int)
(declare-fun VV$35$$35$F$35$$35$498 () Str)
(declare-fun VV$35$$35$9734 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3174 () Bool)
(declare-fun lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3172 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3799 () Int)
(declare-fun lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive () Str)
(declare-fun fix$36$$36$dOrd_aiUx () Int)
(declare-fun x$35$$35$aiOs () Int)
(declare-fun lit$36$$39$Heap () Str)
(declare-fun lq_karg$36$t$35$$35$aiNT$35$$35$k_$35$$35$1738 () Int)
(declare-fun VV$35$$35$10447 () Int)
(declare-fun VV$35$$35$11475 () Int)
(declare-fun lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3805 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P$35$$35$k_$35$$35$2202 () Int)
(declare-fun ds_dj3Q () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC$35$$35$k_$35$$35$5765 () Int)
(declare-fun lq_karg$36$ds_dj4L$35$$35$k_$35$$35$1738 () Int)
(declare-fun lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4102 () Int)
(declare-fun GHC.List.zip () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj () Int)
(declare-fun liquid_internal_this () Int)
(declare-fun lq_karg$36$ds_dj8o$35$$35$k_$35$$35$2202 () Int)
(declare-fun lq_karg$36$ds_dj6s$35$$35$k_$35$$35$4589 () Int)
(declare-fun GHC.Real.fromRational () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867319$35$$35$djb1$35$$35$k_$35$$35$4589 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0$35$$35$k_$35$$35$4589 () Int)
(declare-fun VV$35$$35$F$35$$35$353 () Int)
(declare-fun VV$35$$35$F$35$$35$151 () Int)
(declare-fun ds_dj2X () Int)
(declare-fun lq_karg$36$VV$35$$35$6179$35$$35$k_$35$$35$6180 () Int)
(declare-fun GHC.Classes.$62$ () Int)
(declare-fun lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3877 () Int)
(declare-fun GHC.Types.KindRepTyConApp () Int)
(declare-fun GHC.Integer.Type.Jp$35$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867265$35$$35$dja9$35$$35$k_$35$$35$2740 () Str)
(declare-fun VV$35$$35$F$35$$35$511 () Int)
(declare-fun VV$35$$35$F$35$$35$317 () Int)
(declare-fun VV$35$$35$F$35$$35$33 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867355$35$$35$djbB () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$3875 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$2830 () Int)
(declare-fun VV$35$$35$F$35$$35$148 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R$35$$35$k_$35$$35$2202 () Int)
(declare-fun GHC.Tuple.$40$$41$ () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Maybe.Just$35$$35$1 () Int)
(declare-fun GHC.Types.KindRepVar () Int)
(declare-fun VV$35$$35$F$35$$35$252 () Int)
(declare-fun lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3324 () Int)
(declare-fun lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3877 () Int)
(declare-fun GHC.Types.I$35$ () Int)
(declare-fun lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3805 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$2726 () Int)
(declare-fun lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3875 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4096 () Int)
(declare-fun VV$35$$35$11372 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3174 () Int)
(declare-fun lq_karg$36$VV$35$$35$3579$35$$35$k_$35$$35$3580 () Int)
(declare-fun VV$35$$35$F$35$$35$99 () Int)
(declare-fun lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3586 () Int)
(declare-fun VV$35$$35$F$35$$35$216 () Int)
(declare-fun VV$35$$35$10455 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867346$35$$35$djbs () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t$35$$35$k_$35$$35$1738 () Int)
(declare-fun GHC.Types.KindRepTypeLitD () Int)
(declare-fun lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6268 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P$35$$35$k_$35$$35$2377 () Int)
(declare-fun lq_karg$36$lq_tmp$36$x$35$$35$4590$35$$35$k_$35$$35$4589 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3778 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867269$35$$35$djad () Bool)
(declare-fun x_Tuple31 () Int)
(declare-fun ts2$35$$35$aiOg () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867344$35$$35$djbq () Int)
(declare-fun lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3853 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867212$35$$35$dj9i$35$$35$k_$35$$35$1003 () Str)
(declare-fun lq_karg$36$ds_dj8o$35$$35$k_$35$$35$2377 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4102 () Bool)
(declare-fun lq_karg$36$ts1$35$$35$aiOS$35$$35$k_$35$$35$4901 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867227$35$$35$dj9x$35$$35$k_$35$$35$1729 () Int)
(declare-fun is$36$GHC.Types.$91$$93$ () Int)
(declare-fun lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3042 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$2969 () Int)
(declare-fun lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3877 () Int)
(declare-fun lq_tmp$36$x$35$$35$1471 () Int)
(declare-fun lq_karg$36$ds_dj4K$35$$35$k_$35$$35$1550 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3883 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3875 () Bool)
(declare-fun VV$35$$35$F$35$$35$503 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867314$35$$35$djaW () Bool)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867272$35$$35$djag$35$$35$k_$35$$35$3221 () Int)
(declare-fun VV$35$$35$F$35$$35$38 () Int)
(declare-fun VV$35$$35$10253 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R$35$$35$k_$35$$35$2377 () Int)
(declare-fun VV$35$$35$F$35$$35$259 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867286$35$$35$djau () Int)
(declare-fun lq_karg$36$ds_dj3u$35$$35$k_$35$$35$1229 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4075 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h$35$$35$k_$35$$35$1001 () Int)
(declare-fun lit$36$Binomial () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3112 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867320$35$$35$djb2$35$$35$k_$35$$35$4583 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3221 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867360$35$$35$djbG () Int)
(declare-fun VV$35$$35$F$35$$35$65 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867310$35$$35$djaS () Bool)
(declare-fun VV$35$$35$F$35$$35$464 () Int)
(declare-fun VV$35$$35$F$35$$35$92 () Int)
(declare-fun lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3212 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3778 () Int)
(declare-fun lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3853 () Int)
(declare-fun VV$35$$35$9579 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3221 () Bool)
(declare-fun GHC.Real.quot () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867319$35$$35$djb1 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3212 () Int)
(declare-fun VV$35$$35$F$35$$35$493 () Int)
(declare-fun VV$35$$35$F$35$$35$295 () Int)
(declare-fun lq_karg$36$ds_dj1z$35$$35$k_$35$$35$2654 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq () Int)
(declare-fun Language.Haskell.Liquid.Bag.union () Int)
(declare-fun VV$35$$35$F$35$$35$420 () Int)
(declare-fun lq_karg$36$VV$35$$35$2867$35$$35$k_$35$$35$2859 () Int)
(declare-fun lq_karg$36$ds_dj4J$35$$35$k_$35$$35$1729 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3174 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O$35$$35$k_$35$$35$2202 () Int)
(declare-fun VV$35$$35$10551 () Int)
(declare-fun Data.Tuple.fst () Int)
(declare-fun VV$35$$35$10010 () Int)
(declare-fun lq_karg$36$x$35$$35$aiOm$35$$35$k_$35$$35$5561 () Int)
(declare-fun lq_karg$36$ds_dj1U$35$$35$k_$35$$35$2984 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867214$35$$35$dj9k () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$2868 () Int)
(declare-fun lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3101 () Int)
(declare-fun Binomial.treeListSize () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867348$35$$35$djbu$35$$35$k_$35$$35$5553 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG () Int)
(declare-fun lq_karg$36$ds_dj8q$35$$35$k_$35$$35$2202 () Int)
(declare-fun VV$35$$35$F$35$$35$506 () Bool)
(declare-fun VV$35$$35$F$35$$35$300 () Int)
(declare-fun VV$35$$35$7383 () Int)
(declare-fun VV$35$$35$F$35$$35$319 () Int)
(declare-fun lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3556 () Int)
(declare-fun lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6268 () Int)
(declare-fun lq_karg$36$ds_dj30$35$$35$k_$35$$35$1229 () Int)
(declare-fun VV$35$$35$7330 () Int)
(declare-fun VV$35$$35$F$35$$35$289 () Int)
(declare-fun VV$35$$35$F$35$$35$344 () Int)
(declare-fun VV$35$$35$F$35$$35$146 () Int)
(declare-fun lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6365 () Int)
(declare-fun Binomial.unheap () Int)
(declare-fun lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4102 () Int)
(declare-fun GHC.Types.$36$tcInt () Int)
(declare-fun lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3556 () Int)
(declare-fun ts1$35$$35$aiOQ () Int)
(declare-fun VV$35$$35$10212 () Int)
(declare-fun VV$35$$35$F$35$$35$461 () Int)
(declare-fun Data.Tuple.snd () Int)
(declare-fun VV$35$$35$F$35$$35$218 () Int)
(declare-fun lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3150 () Int)
(declare-fun h$35$$35$aiOM () Int)
(declare-fun lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4075 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3214 () Int)
(declare-fun lit$36$$47$home$47$jamie$47$Documents$47$Master$47$MasterThesis$47$master$45$thesis$45$project$47$lh$45$thesis$47$src$47$Binomial.hs$58$$40$225$44$1$41$$45$$40$230$44$63$41$$124$function$32$merge$39$ () Str)
(declare-fun VV$35$$35$F$35$$35$496 () Int)
(declare-fun VV$35$$35$F$35$$35$290 () Int)
(declare-fun VV$35$$35$F$35$$35$24 () Int)
(declare-fun lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6180 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$2984 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3150 () Int)
(declare-fun lq_karg$36$r$35$$35$aiO5$35$$35$k_$35$$35$2654 () Int)
(declare-fun GHC.Types.EQ () Int)
(declare-fun is$36$Binomial.Heap () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$2828 () Int)
(declare-fun lq_karg$36$VV$35$$35$2718$35$$35$k_$35$$35$2717 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3101 () Int)
(declare-fun VV$35$$35$9584 () Int)
(declare-fun acc$35$$35$aiOI () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$3883 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867228$35$$35$dj9y$35$$35$k_$35$$35$1550 () Int)
(declare-fun VV$35$$35$F$35$$35$54 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867243$35$$35$dj9N () Int)
(declare-fun GHC.Real.$58$$37$ () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$3 () Int)
(declare-fun VV$35$$35$F$35$$35$235 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3174 () Bool)
(declare-fun lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3883 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3556 () Int)
(declare-fun lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3150 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3150 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u$35$$35$k_$35$$35$1550 () Int)
(declare-fun lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3284 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9$35$$35$k_$35$$35$4901 () Int)
(declare-fun GHC.Integer.Type.$36$WJp$35$ () Int)
(declare-fun lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6240 () Int)
(declare-fun lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3214 () Int)
(declare-fun lq_karg$36$VV$35$$35$3332$35$$35$k_$35$$35$3324 () Int)
(declare-fun VV$35$$35$10196 () Int)
(declare-fun lq_karg$36$ds_dj4M$35$$35$k_$35$$35$1738 () Int)
(declare-fun fst () Int)
(declare-fun VV$35$$35$10439 () Int)
(declare-fun lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$2868 () Int)
(declare-fun VV$35$$35$11456 () Int)
(declare-fun GHC.List.takeWhile () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867349$35$$35$djbv () Int)
(declare-fun x2$35$$35$aiOe () Int)
(declare-fun lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3286 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3286 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867341$35$$35$djbn () Int)
(declare-fun lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4075 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8$35$$35$k_$35$$35$4901 () Int)
(declare-fun lq_karg$36$VV$35$$35$6267$35$$35$k_$35$$35$6268 () Int)
(declare-fun VV$35$$35$F$35$$35$334 () Int)
(declare-fun lq_karg$36$VV$35$$35$6067$35$$35$k_$35$$35$6068 () Int)
(declare-fun GHC.Num.negate () Int)
(declare-fun lq_karg$36$ds_dj8n$35$$35$k_$35$$35$2202 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3586 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867328$35$$35$djba () Int)
(declare-fun GHC.Num.$45$ () Int)
(declare-fun GHC.Real.rem () Int)
(declare-fun VV$35$$35$F$35$$35$369 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867226$35$$35$dj9w$35$$35$k_$35$$35$1550 () Int)
(declare-fun lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6171 () Int)
(declare-fun lq_karg$36$ds_dj4a$35$$35$k_$35$$35$1550 () Int)
(declare-fun VV$35$$35$F$35$$35$370 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa () Int)
(declare-fun lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3853 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3805 () Int)
(declare-fun lq_tmp$36$x$35$$35$2284 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G$35$$35$k_$35$$35$1738 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867333$35$$35$djbf () Bool)
(declare-fun VV$35$$35$11310 () Int)
(declare-fun VV$35$$35$10506 () Int)
(declare-fun VV$35$$35$10102 () Int)
(declare-fun lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$2982 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3284 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4102 () Int)
(declare-fun VV$35$$35$F$35$$35$436 () Int)
(declare-fun VV$35$$35$F$35$$35$274 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3586 () Int)
(declare-fun VV$35$$35$9729 () Int)
(declare-fun lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4096 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3805 () Map)
(declare-fun lq_anf$36$$35$$35$7205759403792867233$35$$35$dj9D () Int)
(declare-fun fix$36$$36$dOrd_aj02 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3805 () Int)
(declare-fun GHC.Classes.max () Int)
(declare-fun fix$36$$36$dOrd_aiUL () Int)
(declare-fun lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6171 () Int)
(declare-fun VV$35$$35$9510 () Int)
(declare-fun lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3042 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7$35$$35$k_$35$$35$2654 () Int)
(declare-fun Binomial.null () Int)
(declare-fun VV$35$$35$F$35$$35$48 () Int)
(declare-fun lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3212 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3212 () Int)
(declare-fun VV$35$$35$11648 () Bool)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E$35$$35$k_$35$$35$1738 () Int)
(declare-fun VV$35$$35$10542 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3284 () Bool)
(declare-fun x$35$$35$aiNN () Int)
(declare-fun lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6120 () Int)
(declare-fun GHC.List.scanr () Int)
(declare-fun GHC.Num.$36$fNumInt () Int)
(declare-fun GHC.Real.recip () Int)
(declare-fun lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6391 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3101 () Int)
(declare-fun lit$36$$39$Node () Str)
(declare-fun VV$35$$35$F$35$$35$177 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1$35$$35$k_$35$$35$2394 () Int)
(declare-fun lq_karg$36$VV$35$$35$6179$35$$35$k_$35$$35$6173 () Int)
(declare-fun lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3112 () Int)
(declare-fun lq_karg$36$ds_dj8p$35$$35$k_$35$$35$2377 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867331$35$$35$djbd () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q$35$$35$k_$35$$35$2394 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3556 () Int)
(declare-fun autolen () Int)
(declare-fun ds_dj7A () Int)
(declare-fun lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3799 () Int)
(declare-fun VV$35$$35$F$35$$35$375 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3805 () Bool)
(declare-fun lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3221 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf$35$$35$k_$35$$35$3172 () Int)
(declare-fun lq_karg$36$ts$35$$35$aiNR$35$$35$k_$35$$35$1550 () Int)
(declare-fun lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3877 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867230$35$$35$dj9A$35$$35$k_$35$$35$1738 () Bool)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$3853 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867232$35$$35$dj9C$35$$35$k_$35$$35$1738 () Int)
(declare-fun lq_karg$36$ds_dj8m$35$$35$k_$35$$35$2394 () Int)
(declare-fun GHC.List.replicate () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3326 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3042 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3805 () Int)
(declare-fun GHC.Base.. () Int)
(declare-fun lq_karg$36$t$35$$35$aiNY$35$$35$k_$35$$35$1252 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867238$35$$35$dj9I$35$$35$k_$35$$35$1738 () Map)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867265$35$$35$dja9$35$$35$k_$35$$35$2719 () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3284 () Int)
(declare-fun VV$35$$35$9689 () Int)
(declare-fun lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3875 () Int)
(declare-fun GHC.Integer.Type.$36$WJn$35$ () Int)
(declare-fun GHC.List.take () Int)
(declare-fun lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3805 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4075 () Map)
(declare-fun lq_karg$36$VV$35$$35$3220$35$$35$k_$35$$35$3221 () Int)
(declare-fun lq_karg$36$VV$35$$35$3332$35$$35$k_$35$$35$3333 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj$35$$35$k_$35$$35$2868 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3324 () Bool)
(declare-fun lq_karg$36$VV$35$$35$3285$35$$35$k_$35$$35$3284 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3035 () Int)
(declare-fun ds_dj58 () Int)
(declare-fun lq_karg$36$VV$35$$35$5764$35$$35$k_$35$$35$5765 () Int)
(declare-fun lq_karg$36$VV$35$$35$6170$35$$35$k_$35$$35$6171 () Int)
(declare-fun lq_karg$36$VV$35$$35$3325$35$$35$k_$35$$35$3324 () Int)
(declare-fun VV$35$$35$F$35$$35$244 () Int)
(declare-fun VV$35$$35$F$35$$35$43 () Int)
(declare-fun lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4075 () Int)
(declare-fun lq_karg$36$VV$35$$35$2829$35$$35$k_$35$$35$2828 () Int)
(declare-fun lq_karg$36$VV$35$$35$2968$35$$35$k_$35$$35$2969 () Int)
(declare-fun lq_karg$36$VV$35$$35$2376$35$$35$k_$35$$35$2377 () Int)
(declare-fun lq_karg$36$VV$35$$35$6172$35$$35$k_$35$$35$6173 () Int)
(declare-fun lq_karg$36$VV$35$$35$4074$35$$35$k_$35$$35$4075 () Int)
(declare-fun lq_karg$36$VV$35$$35$6256$35$$35$k_$35$$35$6257 () Int)
(declare-fun lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3580 () Int)
(declare-fun papp4 () Int)
(declare-fun lq_tmp$36$x$35$$35$956 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3805 () Bool)
(declare-fun lq_karg$36$VV$35$$35$2858$35$$35$k_$35$$35$2859 () Int)
(declare-fun lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3875 () Int)
(declare-fun GHC.Types.$36$WKindRepTYPE () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3150 () Int)
(declare-fun lq_karg$36$VV$35$$35$1000$35$$35$k_$35$$35$1001 () Int)
(declare-fun lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3778 () Int)
(declare-fun lq_karg$36$VV$35$$35$4580$35$$35$k_$35$$35$4581 () Int)
(declare-fun lq_karg$36$VV$35$$35$1102$35$$35$k_$35$$35$1103 () Int)
(declare-fun lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6257 () Int)
(declare-fun lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3778 () Int)
(declare-fun lit$36$$47$home$47$jamie$47$Documents$47$Master$47$MasterThesis$47$master$45$thesis$45$project$47$lh$45$thesis$47$src$47$Binomial.hs$58$$40$175$44$1$41$$45$$40$180$44$36$41$$124$function$32$deleteMin$39$ () Str)
(declare-fun lq_karg$36$VV$35$$35$1728$35$$35$k_$35$$35$1729 () Map)
(declare-fun lq_karg$36$VV$35$$35$3213$35$$35$k_$35$$35$3212 () Int)
(declare-fun VV$35$$35$7199 () Int)
(declare-fun lq_karg$36$VV$35$$35$5560$35$$35$k_$35$$35$5561 () Int)
(declare-fun lq_karg$36$VV$35$$35$5552$35$$35$k_$35$$35$5553 () Int)
(declare-fun lq_karg$36$VV$35$$35$6332$35$$35$k_$35$$35$6333 () Int)
(declare-fun Language.Haskell.Liquid.Bag.bagSize () Int)
(declare-fun lq_karg$36$VV$35$$35$6392$35$$35$k_$35$$35$6393 () Int)
(declare-fun lq_karg$36$VV$35$$35$6364$35$$35$k_$35$$35$6365 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$2859 () Int)
(declare-fun lq_karg$36$VV$35$$35$3100$35$$35$k_$35$$35$3101 () Int)
(declare-fun lq_karg$36$VV$35$$35$2716$35$$35$k_$35$$35$2717 () Int)
(declare-fun lq_karg$36$VV$35$$35$6390$35$$35$k_$35$$35$6391 () Int)
(declare-fun lq_karg$36$VV$35$$35$3804$35$$35$k_$35$$35$3805 () Int)
(declare-fun lq_karg$36$VV$35$$35$3876$35$$35$k_$35$$35$3877 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK$35$$35$k_$35$$35$6393 () Int)
(declare-fun lq_karg$36$VV$35$$35$4582$35$$35$k_$35$$35$4583 () Int)
(declare-fun lq_karg$36$VV$35$$35$3874$35$$35$k_$35$$35$3875 () Int)
(declare-fun lq_karg$36$ds_dj8p$35$$35$k_$35$$35$2202 () Int)
(declare-fun lq_karg$36$VV$35$$35$6106$35$$35$k_$35$$35$6107 () Int)
(declare-fun GHC.Stack.Types.PushCallStack () Int)
(declare-fun lq_karg$36$VV$35$$35$1228$35$$35$k_$35$$35$1229 () Int)
(declare-fun lq_karg$36$VV$35$$35$2718$35$$35$k_$35$$35$2719 () Int)
(declare-fun lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3174 () Int)
(declare-fun lq_karg$36$VV$35$$35$5554$35$$35$k_$35$$35$5555 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3853 () Bool)
(declare-fun lq_karg$36$VV$35$$35$3852$35$$35$k_$35$$35$3853 () Int)
(declare-fun Binomial.listElts () Int)
(declare-fun ts$35$$35$aiO6 () Int)
(declare-fun lq_karg$36$VV$35$$35$2860$35$$35$k_$35$$35$2861 () Int)
(declare-fun lq_karg$36$VV$35$$35$1002$35$$35$k_$35$$35$1003 () Int)
(declare-fun VV$35$$35$F$35$$35$479 () Map)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3324 () Int)
(declare-fun VV$35$$35$F$35$$35$390 () Int)
(declare-fun VV$35$$35$F$35$$35$192 () Int)
(declare-fun lq_karg$36$VV$35$$35$3579$35$$35$k_$35$$35$3578 () Int)
(declare-fun lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3101 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867205$35$$35$dj9b () Int)
(declare-fun lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3778 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4096 () Map)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867212$35$$35$dj9i$35$$35$k_$35$$35$996 () Str)
(declare-fun t$35$$35$aiNT () Int)
(declare-fun sz2$35$$35$aiOh () Int)
(declare-fun lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3799 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4075 () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792867202$35$$35$dj98 () Int)
(declare-fun lq_tmp$36$x$35$$35$5593 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3042 () Int)
(declare-fun GHC.Real.quotRem () Int)
(declare-fun GHC.Classes.$60$$61$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC () Int)
(declare-fun VV$35$$35$F$35$$35$351 () Int)
(declare-fun VV$35$$35$F$35$$35$153 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3586 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q$35$$35$k_$35$$35$2202 () Int)
(declare-fun GHC.Num.fromInteger () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U$35$$35$k_$35$$35$2377 () Bool)
(declare-fun GHC.Types.KindRepTYPE () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867203$35$$35$dj99 () Int)
(declare-fun GHC.Classes.$60$ () Int)
(declare-fun lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3172 () Int)
(declare-fun lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3875 () Int)
(declare-fun VV$35$$35$9820 () Int)
(declare-fun VV$35$$35$10207 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4102 () Int)
(declare-fun VV$35$$35$F$35$$35$315 () Int)
(declare-fun VV$35$$35$F$35$$35$117 () Int)
(declare-fun lq_karg$36$ds_dj8m$35$$35$k_$35$$35$2202 () Int)
(declare-fun lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3853 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W$35$$35$k_$35$$35$2377 () Int)
(declare-fun ts$35$$35$aiOk () Int)
(declare-fun VV$35$$35$F$35$$35$483 () Int)
(declare-fun VV$35$$35$F$35$$35$31 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$3877 () Int)
(declare-fun lq_karg$36$ds_dj1J$35$$35$k_$35$$35$2969 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3033 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3221 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3212 () Bool)
(declare-fun VV$35$$35$F$35$$35$250 () Int)
(declare-fun lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3326 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867354$35$$35$djbA () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA () Bool)
(declare-fun lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3875 () Int)
(declare-fun VV$35$$35$F$35$$35$456 () Int)
(declare-fun lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3580 () Int)
(declare-fun lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3101 () Int)
(declare-fun GHC.List.filter () Int)
(declare-fun lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3877 () Int)
(declare-fun ts$35$$35$aiNR () Int)
(declare-fun lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6180 () Int)
(declare-fun lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3799 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867338$35$$35$djbk () Int)
(declare-fun VV$35$$35$F$35$$35$75 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3101 () Int)
(declare-fun lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3035 () Int)
(declare-fun lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4096 () Int)
(declare-fun x_Tuple21 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3586 () Bool)
(declare-fun Binomial.subtrees () Int)
(declare-fun VV$35$$35$F$35$$35$214 () Int)
(declare-fun lq_tmp$36$x$35$$35$3933 () Int)
(declare-fun VV$35$$35$F$35$$35$28 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3805 () Int)
(declare-fun ts$35$$35$aiOK () Int)
(declare-fun ds_dj4L () Int)
(declare-fun Data.Map.Internal.Bin () Int)
(declare-fun lq_karg$36$VV$35$$35$2739$35$$35$k_$35$$35$2717 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3586 () Int)
(declare-fun lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3033 () Int)
(declare-fun lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4075 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3805 () Map)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK$35$$35$k_$35$$35$6333 () Int)
(declare-fun GHC.List.repeat () Int)
(declare-fun VV$35$$35$7322 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj$35$$35$k_$35$$35$2859 () Int)
(declare-fun head () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867349$35$$35$djbv$35$$35$k_$35$$35$5561 () Int)
(declare-fun VV$35$$35$F$35$$35$356 () Int)
(declare-fun bagSize () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3805 () Int)
(declare-fun VV$35$$35$11276 () Int)
(declare-fun VV$35$$35$F$35$$35$383 () Int)
(declare-fun lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3333 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$2969 () Int)
(declare-fun lq_tmp$36$x$35$$35$1062 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL () Int)
(declare-fun GHC.Maybe.Nothing () Int)
(declare-fun VV$35$$35$F$35$$35$514 () Int)
(declare-fun ds_dj3t () Int)
(declare-fun ts$39$$35$$35$aiUV () Int)
(declare-fun lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3174 () Int)
(declare-fun lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3799 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867361$35$$35$djbH () Int)
(declare-fun VV$35$$35$F$35$$35$282 () Int)
(declare-fun VV$35$$35$F$35$$35$36 () Int)
(declare-fun lq_karg$36$ts$35$$35$aiO6$35$$35$k_$35$$35$2654 () Int)
(declare-fun VV$35$$35$F$35$$35$484 () Int)
(declare-fun VV$35$$35$7407 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6171 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S$35$$35$k_$35$$35$2377 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867226$35$$35$dj9w$35$$35$k_$35$$35$1729 () Int)
(declare-fun VV$35$$35$F$35$$35$257 () Int)
(declare-fun lq_karg$36$ds_dj4a$35$$35$k_$35$$35$1729 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3578 () Bool)
(declare-fun Binomial.treeListElts () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3284 () Bool)
(declare-fun lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3556 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3580 () Int)
(declare-fun VV$35$$35$F$35$$35$72 () Int)
(declare-fun VV$35$$35$10219 () Int)
(declare-fun VV$35$$35$11029 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867228$35$$35$dj9y$35$$35$k_$35$$35$1729 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ () Int)
(declare-fun VV$35$$35$F$35$$35$415 () Int)
(declare-fun VV$35$$35$F$35$$35$213 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3262 () Int)
(declare-fun lq_karg$36$ds_dj30$35$$35$k_$35$$35$1103 () Int)
(declare-fun lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4075 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z$35$$35$k_$35$$35$2394 () Int)
(declare-fun VV$35$$35$8873 () Int)
(declare-fun ds_dj4K () Int)
(declare-fun t$35$$35$aiOJ () Int)
(declare-fun lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6291 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u$35$$35$k_$35$$35$1729 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m$35$$35$k_$35$$35$1252 () Int)
(declare-fun lq_karg$36$x$35$$35$aiOs$35$$35$k_$35$$35$4583 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4096 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867217$35$$35$dj9n () Int)
(declare-fun lq_karg$36$ts$35$$35$aiNR$35$$35$k_$35$$35$1738 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4096 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3877 () Int)
(declare-fun lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3875 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867348$35$$35$djbu$35$$35$k_$35$$35$5555 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3578 () Int)
(declare-fun lq_karg$36$ds_dj1J$35$$35$k_$35$$35$2859 () Int)
(declare-fun VV$35$$35$F$35$$35$500 () Int)
(declare-fun VV$35$$35$F$35$$35$104 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf () Int)
(declare-fun VV$35$$35$F$35$$35$519 () Int)
(declare-fun ds_dj3y () Int)
(declare-fun lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3326 () Int)
(declare-fun lq_karg$36$ds_dj8q$35$$35$k_$35$$35$2394 () Int)
(declare-fun lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3883 () Int)
(declare-fun r2$35$$35$aiOf () Int)
(declare-fun VV$35$$35$F$35$$35$489 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2$35$$35$k_$35$$35$2394 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI () Map)
(declare-fun lq_karg$36$t$35$$35$aiNT$35$$35$k_$35$$35$1729 () Int)
(declare-fun ts$35$$35$aiNX () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3112 () Int)
(declare-fun VV$35$$35$F$35$$35$66 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3333 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6291 () Int)
(declare-fun sz$35$$35$aiO7 () Int)
(declare-fun VV$35$$35$F$35$$35$91 () Int)
(declare-fun Language.Haskell.Liquid.Bag.thm_size () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO () Int)
(declare-fun VV$35$$35$F$35$$35$467 () Int)
(declare-fun ds_dj2p () Int)
(declare-fun VV$35$$35$F$35$$35$418 () Int)
(declare-fun Language.Haskell.Liquid.Bag.thm_emp () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3212 () Int)
(declare-fun VV$35$$35$F$35$$35$490 () Int)
(declare-fun VV$35$$35$F$35$$35$296 () Int)
(declare-fun lq_karg$36$VV$35$$35$2867$35$$35$k_$35$$35$2861 () Int)
(declare-fun lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3324 () Int)
(declare-fun GHC.Base.map () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3324 () Int)
(declare-fun VV$35$$35$F$35$$35$423 () Int)
(declare-fun VV$35$$35$F$35$$35$261 () Bool)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$2982 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867279$35$$35$djan () Int)
(declare-fun lq_karg$36$ds_dj3v$35$$35$k_$35$$35$1229 () Int)
(declare-fun lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6171 () Int)
(declare-fun lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4102 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK () Map)
(declare-fun lq_karg$36$VV$35$$35$6239$35$$35$k_$35$$35$6240 () Int)
(declare-fun VV$35$$35$9660 () Int)
(declare-fun lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3112 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3286 () Int)
(declare-fun lq_karg$36$VV$35$$35$2739$35$$35$k_$35$$35$2740 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867230$35$$35$dj9A$35$$35$k_$35$$35$1550 () Bool)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3172 () Int)
(declare-fun lq_karg$36$ds_dj4L$35$$35$k_$35$$35$1729 () Int)
(declare-fun VV$35$$35$10755 () Int)
(declare-fun x_Tuple32 () Int)
(declare-fun lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3262 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z$35$$35$k_$35$$35$2377 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM () Bool)
(declare-fun lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6240 () Int)
(declare-fun lq_karg$36$ds_dj6s$35$$35$k_$35$$35$4581 () Int)
(declare-fun fix$36$$36$dOrd_aiXe () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3799 () Bool)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867319$35$$35$djb1$35$$35$k_$35$$35$4581 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4096 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0$35$$35$k_$35$$35$4581 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O$35$$35$k_$35$$35$2394 () Int)
(declare-fun VV$35$$35$7284 () Int)
(declare-fun lq_karg$36$ds_dj1U$35$$35$k_$35$$35$2982 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867273$35$$35$djah$35$$35$k_$35$$35$3286 () Int)
(declare-fun VV$35$$35$F$35$$35$159 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3212 () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792867342$35$$35$djbo () Int)
(declare-fun ds_dj8q () Int)
(declare-fun VV$35$$35$9568 () Int)
(declare-fun lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3286 () Int)
(declare-fun VV$35$$35$F$35$$35$431 () Int)
(declare-fun VV$35$$35$F$35$$35$273 () Int)
(declare-fun ts$35$$35$aiOz () Int)
(declare-fun lq_karg$36$residual$35$$35$aiNU$35$$35$k_$35$$35$1729 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867329$35$$35$djbb () Str)
(declare-fun lq_karg$36$VV$35$$35$3332$35$$35$k_$35$$35$3326 () Int)
(declare-fun VV$35$$35$7418 () Int)
(declare-fun lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3556 () Int)
(declare-fun GHC.Err.error () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 () Int)
(declare-fun VV$35$$35$11353 () Int)
(declare-fun lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4102 () Int)
(declare-fun lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3214 () Int)
(declare-fun VV$35$$35$10747 () Int)
(declare-fun lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3284 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3284 () Int)
(declare-fun GHC.Classes.compare () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867340$35$$35$djbm () Int)
(declare-fun lq_karg$36$ds_dj1J$35$$35$k_$35$$35$2719 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867229$35$$35$dj9z$35$$35$k_$35$$35$1550 () Int)
(declare-fun fix$36$$36$dOrd_aiYG () Int)
(declare-fun lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3883 () Int)
(declare-fun lq_karg$36$ds_dj2p$35$$35$k_$35$$35$2868 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j$35$$35$k_$35$$35$1229 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867272$35$$35$djag$35$$35$k_$35$$35$3212 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867348$35$$35$djbu () Int)
(declare-fun VV$35$$35$10224 () Int)
(declare-fun VV$35$$35$11014 () Map)
(declare-fun lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6173 () Int)
(declare-fun VV$35$$35$F$35$$35$372 () Str)
(declare-fun VV$35$$35$F$35$$35$134 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l$35$$35$k_$35$$35$1229 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6180 () Int)
(declare-fun t1$35$$35$aiO8 () Int)
(declare-fun lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3150 () Int)
(declare-fun lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3556 () Int)
(declare-fun lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3883 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3212 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867227$35$$35$dj9x$35$$35$k_$35$$35$1738 () Int)
(declare-fun t$39$$35$$35$aiUT () Int)
(declare-fun ds_dj0Y () Int)
(declare-fun lq_tmp$36$x$35$$35$2652 () Int)
(declare-fun lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3262 () Int)
(declare-fun lq_karg$36$VV$35$$35$3041$35$$35$k_$35$$35$3033 () Int)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$1 () Int)
(declare-fun VV$35$$35$F$35$$35$475 () Int)
(declare-fun VV$35$$35$F$35$$35$237 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3286 () Int)
(declare-fun VV$35$$35$F$35$$35$434 () Int)
(declare-fun VV$35$$35$F$35$$35$276 () Int)
(declare-fun VV$35$$35$10188 () Int)
(declare-fun GHC.Types.$36$tc$91$$93$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj$35$$35$k_$35$$35$2861 () Int)
(declare-fun lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4102 () Int)
(declare-fun lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6173 () Int)
(declare-fun VV$35$$35$9710 () Int)
(declare-fun lq_karg$36$ds_dj8o$35$$35$k_$35$$35$2394 () Int)
(declare-fun lq_karg$36$ds_dj2p$35$$35$k_$35$$35$2982 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3150 () Bool)
(declare-fun lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3586 () Int)
(declare-fun lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3112 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3286 () Bool)
(declare-fun VV$35$$35$7932 () Int)
(declare-fun x$35$$35$aiNL () Int)
(declare-fun lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6122 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$2984 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4102 () Map)
(declare-fun lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3805 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3580 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3799 () Bool)
(declare-fun lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6393 () Int)
(declare-fun VV$35$$35$9925 () Int)
(declare-fun lq_karg$36$VV$35$$35$6179$35$$35$k_$35$$35$6171 () Int)
(declare-fun lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3853 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3799 () Int)
(declare-fun Binomial.treeAtLeastRoot () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3799 () Int)
(declare-fun VV$35$$35$7303 () Int)
(declare-fun GHC.Num.$42$ () Int)
(declare-fun VV$35$$35$F$35$$35$128 () Int)
(declare-fun VV$35$$35$F$35$$35$377 () Int)
(declare-fun ds_dj1U () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9 () Int)
(declare-fun lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3853 () Int)
(declare-fun ds_dj5Q () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8 () Int)
(declare-fun lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3875 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867235$35$$35$dj9F$35$$35$k_$35$$35$1738 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3799 () Map)
(declare-fun GHC.Types.False () Bool)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867239$35$$35$dj9J$35$$35$k_$35$$35$1738 () Map)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4096 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3799 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3324 () Int)
(declare-fun lq_karg$36$ds_dj1J$35$$35$k_$35$$35$2828 () Int)
(declare-fun lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3586 () Int)
(declare-fun VV$35$$35$F$35$$35$53 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867332$35$$35$djbe () Bool)
(declare-fun VV$35$$35$F$35$$35$86 () Int)
(declare-fun VV$35$$35$11080 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R$35$$35$k_$35$$35$2394 () Int)
(declare-fun lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3212 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3150 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P$35$$35$k_$35$$35$2394 () Int)
(declare-fun lq_karg$36$x$35$$35$aiNN$35$$35$k_$35$$35$1738 () Int)
(declare-fun VV$35$$35$F$35$$35$45 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867283$35$$35$djar () Int)
(declare-fun lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3324 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867225$35$$35$dj9v () Map)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM$35$$35$k_$35$$35$6391 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867274$35$$35$djai$35$$35$k_$35$$35$3333 () Int)
(declare-fun lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3333 () Int)
(declare-fun VV$35$$35$F$35$$35$444 () Map)
(declare-fun lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3262 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3883 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867287$35$$35$djav () Int)
(declare-fun papp2 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3778 () Int)
(declare-fun lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3853 () Int)
(declare-fun lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3586 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0$35$$35$k_$35$$35$2377 () Int)
(declare-fun lq_tmp$36$x$35$$35$6791 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3778 () Int)
(declare-fun Binomial.rank () Int)
(declare-fun lq_karg$36$VV$35$$35$3323$35$$35$k_$35$$35$3324 () Int)
(declare-fun lq_karg$36$ds_dj2p$35$$35$k_$35$$35$2859 () Int)
(declare-fun lq_tmp$36$x$35$$35$6447 () Int)
(declare-fun GHC.Classes.$47$$61$ () Int)
(declare-fun lq_tmp$36$x$35$$35$4621 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL$35$$35$k_$35$$35$6393 () Int)
(declare-fun lq_karg$36$VV$35$$35$3213$35$$35$k_$35$$35$3214 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3778 () Map)
(declare-fun lq_anf$36$$35$$35$7205759403792867229$35$$35$dj9z () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3778 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3112 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867281$35$$35$djap () Bool)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN$35$$35$k_$35$$35$6393 () Int)
(declare-fun lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3326 () Int)
(declare-fun lq_karg$36$VV$35$$35$3283$35$$35$k_$35$$35$3284 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3333 () Int)
(declare-fun GHC.List.cycle () Int)
(declare-fun Binomial.elts () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6391 () Int)
(declare-fun VV$35$$35$F$35$$35$523 () Int)
(declare-fun VV$35$$35$F$35$$35$361 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867285$35$$35$djat () Int)
(declare-fun VV$35$$35$F$35$$35$378 () Int)
(declare-fun lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3578 () Int)
(declare-fun lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3172 () Int)
(declare-fun VV$35$$35$F$35$$35$163 () Int)
(declare-fun lq_karg$36$VV$35$$35$5554$35$$35$k_$35$$35$5553 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867289$35$$35$djax () Map)
(declare-fun GHC.Types.GT () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3556 () Bool)
(declare-fun VV$35$$35$F$35$$35$89 () Int)
(declare-fun lq_karg$36$ds_dj6F$35$$35$k_$35$$35$4901 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6393 () Int)
(declare-fun VV$35$$35$F$35$$35$396 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6120 () Int)
(declare-fun lq_karg$36$VV$35$$35$2653$35$$35$k_$35$$35$2654 () Int)
(declare-fun lq_karg$36$ds_dj8p$35$$35$k_$35$$35$2394 () Int)
(declare-fun VV$35$$35$10237 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792867221$35$$35$dj9r () Int)
(declare-fun VV$35$$35$F$35$$35$279 () Int)
(declare-fun fix$36$$36$dOrd_aiYm () Int)
(declare-fun Data.Map.Internal.$36$fEqMap () Int)
(declare-fun lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6333 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf$35$$35$k_$35$$35$3221 () Int)
(declare-fun ds_dj1z () Int)
(declare-fun lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3286 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3033 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3778 () Bool)
(declare-fun apply$35$$35$21 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$4 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$19 (Int Map) (_ BitVec 32))
(declare-fun apply$35$$35$24 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$22 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$11 (Int Str) Bool)
(declare-fun apply$35$$35$5 (Int Bool) Int)
(declare-fun apply$35$$35$17 (Int Map) Str)
(declare-fun apply$35$$35$23 (Int (_ BitVec 32)) Map)
(declare-fun apply$35$$35$12 (Int Str) Str)
(declare-fun apply$35$$35$14 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$8 (Int Bool) Map)
(declare-fun apply$35$$35$16 (Int Map) Bool)
(declare-fun apply$35$$35$20 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$10 (Int Str) Int)
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$3 (Int Int) Map)
(declare-fun apply$35$$35$7 (Int Bool) Str)
(declare-fun apply$35$$35$9 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$13 (Int Str) Map)
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$6 (Int Bool) Bool)
(declare-fun apply$35$$35$18 (Int Map) Map)
(declare-fun apply$35$$35$15 (Int Map) Int)
(declare-fun coerce$35$$35$21 ((_ BitVec 32)) Bool)
(declare-fun coerce$35$$35$1 (Int) Bool)
(declare-fun coerce$35$$35$4 (Int) (_ BitVec 32))
(declare-fun coerce$35$$35$19 (Map) (_ BitVec 32))
(declare-fun coerce$35$$35$24 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun coerce$35$$35$22 ((_ BitVec 32)) Str)
(declare-fun coerce$35$$35$11 (Str) Bool)
(declare-fun coerce$35$$35$5 (Bool) Int)
(declare-fun coerce$35$$35$17 (Map) Str)
(declare-fun coerce$35$$35$23 ((_ BitVec 32)) Map)
(declare-fun coerce$35$$35$12 (Str) Str)
(declare-fun coerce$35$$35$14 (Str) (_ BitVec 32))
(declare-fun coerce$35$$35$8 (Bool) Map)
(declare-fun coerce$35$$35$16 (Map) Bool)
(declare-fun coerce$35$$35$20 ((_ BitVec 32)) Int)
(declare-fun coerce$35$$35$10 (Str) Int)
(declare-fun coerce$35$$35$0 (Int) Int)
(declare-fun coerce$35$$35$3 (Int) Map)
(declare-fun coerce$35$$35$7 (Bool) Str)
(declare-fun coerce$35$$35$9 (Bool) (_ BitVec 32))
(declare-fun coerce$35$$35$13 (Str) Map)
(declare-fun coerce$35$$35$2 (Int) Str)
(declare-fun coerce$35$$35$6 (Bool) Bool)
(declare-fun coerce$35$$35$18 (Map) Map)
(declare-fun coerce$35$$35$15 (Map) Int)
(declare-fun smt_lambda$35$$35$21 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$4 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$19 (Map (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$24 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$22 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$11 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$5 (Bool Int) Int)
(declare-fun smt_lambda$35$$35$17 (Map Str) Int)
(declare-fun smt_lambda$35$$35$23 ((_ BitVec 32) Map) Int)
(declare-fun smt_lambda$35$$35$12 (Str Str) Int)
(declare-fun smt_lambda$35$$35$14 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$8 (Bool Map) Int)
(declare-fun smt_lambda$35$$35$16 (Map Bool) Int)
(declare-fun smt_lambda$35$$35$20 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$10 (Str Int) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$3 (Int Map) Int)
(declare-fun smt_lambda$35$$35$7 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$9 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$13 (Str Map) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$6 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$18 (Map Map) Int)
(declare-fun smt_lambda$35$$35$15 (Map Int) Int)
(declare-fun lam_arg$35$$35$1$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$1$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$10 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$10 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$10 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$10 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$10 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$10 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$10 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$1$35$$35$15 () Map)
(declare-fun lam_arg$35$$35$2$35$$35$15 () Map)
(declare-fun lam_arg$35$$35$3$35$$35$15 () Map)
(declare-fun lam_arg$35$$35$4$35$$35$15 () Map)
(declare-fun lam_arg$35$$35$5$35$$35$15 () Map)
(declare-fun lam_arg$35$$35$6$35$$35$15 () Map)
(declare-fun lam_arg$35$$35$7$35$$35$15 () Map)


(assert (distinct lit$36$$47$home$47$jamie$47$Documents$47$Master$47$MasterThesis$47$master$45$thesis$45$project$47$lh$45$thesis$47$src$47$Binomial.hs$58$$40$175$44$1$41$$45$$40$180$44$36$41$$124$function$32$deleteMin$39$ lit$36$$39$Node lit$36$$47$home$47$jamie$47$Documents$47$Master$47$MasterThesis$47$master$45$thesis$45$project$47$lh$45$thesis$47$src$47$Binomial.hs$58$$40$225$44$1$41$$45$$40$230$44$63$41$$124$function$32$merge$39$ lit$36$Binomial lit$36$$39$Heap lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive lit$36$$47$home$47$jamie$47$Documents$47$Master$47$MasterThesis$47$master$45$thesis$45$project$47$lh$45$thesis$47$src$47$Binomial.hs$58$78$58$1$45$31$124$function$32$rankOfTailDecreases lit$36$Tree lit$36$main lit$36$$47$home$47$jamie$47$Documents$47$Master$47$MasterThesis$47$master$45$thesis$45$project$47$lh$45$thesis$47$src$47$Binomial.hs$58$$40$83$44$1$41$$45$$40$84$44$77$41$$124$function$32$rankOfFirstTree lit$36$Heap lit$36$$47$home$47$jamie$47$Documents$47$Master$47$MasterThesis$47$master$45$thesis$45$project$47$lh$45$thesis$47$src$47$Binomial.hs$58$185$58$1$45$35$124$function$32$unheapNonempty))
(assert (distinct GHC.Types.GT GHC.Types.EQ GHC.Types.LT))
(assert (distinct GHC.Types.False GHC.Types.True))
(assert (= (strLen lit$36$$47$home$47$jamie$47$Documents$47$Master$47$MasterThesis$47$master$45$thesis$45$project$47$lh$45$thesis$47$src$47$Binomial.hs$58$185$58$1$45$35$124$function$32$unheapNonempty) 122))
(assert (= (strLen lit$36$Heap) 4))
(assert (= (strLen lit$36$$47$home$47$jamie$47$Documents$47$Master$47$MasterThesis$47$master$45$thesis$45$project$47$lh$45$thesis$47$src$47$Binomial.hs$58$$40$83$44$1$41$$45$$40$84$44$77$41$$124$function$32$rankOfFirstTree) 129))
(assert (= (strLen lit$36$main) 4))
(assert (= (strLen lit$36$Tree) 4))
(assert (= (strLen lit$36$$47$home$47$jamie$47$Documents$47$Master$47$MasterThesis$47$master$45$thesis$45$project$47$lh$45$thesis$47$src$47$Binomial.hs$58$78$58$1$45$31$124$function$32$rankOfTailDecreases) 126))
(assert (= (strLen lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive) 36))
(assert (= (strLen lit$36$$39$Heap) 5))
(assert (= (strLen lit$36$Binomial) 8))
(assert (= (strLen lit$36$$47$home$47$jamie$47$Documents$47$Master$47$MasterThesis$47$master$45$thesis$45$project$47$lh$45$thesis$47$src$47$Binomial.hs$58$$40$225$44$1$41$$45$$40$230$44$63$41$$124$function$32$merge$39$) 122))
(assert (= (strLen lit$36$$39$Node) 5))
(assert (= (strLen lit$36$$47$home$47$jamie$47$Documents$47$Master$47$MasterThesis$47$master$45$thesis$45$project$47$lh$45$thesis$47$src$47$Binomial.hs$58$$40$175$44$1$41$$45$$40$180$44$36$41$$124$function$32$deleteMin$39$) 126))
(push 1)
(define-fun b$36$$35$$35$160 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867203$35$$35$dj99) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867203$35$$35$dj99)) (= lq_anf$36$$35$$35$7205759403792867203$35$$35$dj99 (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792867203$35$$35$dj99 ds_dj3y) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867203$35$$35$dj99) (smt_map_def 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867203$35$$35$dj99) (smt_map_def 0)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867203$35$$35$dj99) 0) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867203$35$$35$dj99) (smt_map_def 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867203$35$$35$dj99) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867203$35$$35$dj99) 0)))
(define-fun b$36$$35$$35$192 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) 0)) (= lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j ds_dj30) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) 1) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j))))
(define-fun b$36$$35$$35$224 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Node Int) lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t) (= lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t ds_dj4a) (= lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x$35$$35$aiNN) ds_dj4J) ds_dj4K) ds_dj4L)) (= (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t) ds_dj4J) (= (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t) x$35$$35$aiNN) (= (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t) ds_dj4K) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) ds_dj4K) (smt_map_sto (smt_map_def 0) x$35$$35$aiNN (+ 1 (smt_map_sel (smt_map_def 0) x$35$$35$aiNN))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ds_dj4K)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x$35$$35$aiNN) (- ds_dj4J 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_dj4K)) (- ds_dj4L (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ds_dj4K)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t) ds_dj4J) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t)) (= (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t) ds_dj4L) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t) x$35$$35$aiNN) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t) ds_dj4J) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t) ds_dj4K) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t) ds_dj4L) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t) 0)))
(define-fun b$36$$35$$35$288 () Bool (= lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R))
(define-fun b$36$$35$$35$320 () Bool (and (= sz$35$$35$aiO7 (+ 1 (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiO6))) (>= sz$35$$35$aiO7 1)))
(define-fun b$36$$35$$35$352 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV) 0) (= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV) 0) (>= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV) 0) (<= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV))))
(define-fun b$36$$35$$35$384 () Bool (and (= lq_anf$36$$35$$35$7205759403792867279$35$$35$djan t2$35$$35$aiOd) (= (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (apply$35$$35$0 (as Binomial.rank Int) t1$35$$35$aiO8)) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) 0)))
(define-fun b$36$$35$$35$416 () Bool (= lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH (+ sz1$35$$35$aiOc sz2$35$$35$aiOh)))
(define-fun b$36$$35$$35$448 () Bool (and (= lq_anf$36$$35$$35$7205759403792867315$35$$35$djaX (> lq_anf$36$$35$$35$7205759403792867312$35$$35$djaU lq_anf$36$$35$$35$7205759403792867313$35$$35$djaV)) (= lq_anf$36$$35$$35$7205759403792867315$35$$35$djaX lq_anf$36$$35$$35$7205759403792867314$35$$35$djaW)))
(define-fun b$36$$35$$35$480 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) 0)) (= lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8 ds_dj6F) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8))))
(define-fun b$36$$35$$35$512 () Bool (and (not lq_anf$36$$35$$35$7205759403792867337$35$$35$djbj) (= lq_anf$36$$35$$35$7205759403792867337$35$$35$djbj (< lq_anf$36$$35$$35$7205759403792867334$35$$35$djbg lq_anf$36$$35$$35$7205759403792867335$35$$35$djbh)) (= lq_anf$36$$35$$35$7205759403792867337$35$$35$djbj lq_anf$36$$35$$35$7205759403792867336$35$$35$djbi)))
(define-fun b$36$$35$$35$544 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867350$35$$35$djbw) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867350$35$$35$djbw)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867350$35$$35$djbw) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867350$35$$35$djbw) 0)) (= lq_anf$36$$35$$35$7205759403792867350$35$$35$djbw (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867350$35$$35$djbw) (smt_map_def 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867350$35$$35$djbw) (smt_map_def 0)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867350$35$$35$djbw) 0) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867350$35$$35$djbw) (smt_map_def 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867350$35$$35$djbw) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867350$35$$35$djbw) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867350$35$$35$djbw) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867350$35$$35$djbw) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867350$35$$35$djbw))))
(define-fun b$36$$35$$35$576 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) 0)) (= lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF ds_dj0Y) (= lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) t$35$$35$aiOJ) ts$35$$35$aiOK)) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) (smt_map_cup (smt_map_sto (smt_map_def 0) t$35$$35$aiOJ (+ 1 (smt_map_sel (smt_map_def 0) t$35$$35$aiOJ))) (apply$35$$35$3 (as Binomial.listElts Int) ts$35$$35$aiOK))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOJ) (apply$35$$35$3 (as Binomial.treeListElts Int) ts$35$$35$aiOK))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOJ) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOK))) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) (smt_map_sto (apply$35$$35$3 (as fromList Int) ts$35$$35$aiOK) t$35$$35$aiOJ (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ts$35$$35$aiOK) t$35$$35$aiOJ)))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) t$35$$35$aiOJ) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) (+ 1 (apply$35$$35$0 (as len Int) ts$35$$35$aiOK))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) t$35$$35$aiOJ) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) ts$35$$35$aiOK) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) ts$35$$35$aiOK) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF))))
(define-fun b$36$$35$$35$768 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$7292) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7292)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7292) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7292)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7292))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7292) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$7292)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7292) 0)))
(define-fun b$36$$35$$35$1792 () Bool (and (= VV$35$$35$F$35$$35$288 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= VV$35$$35$F$35$$35$288 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$288) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$288)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$288) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$288)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$288))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$288) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$288)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$288) 0)))
(define-fun b$36$$35$$35$1824 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Heap Int) VV$35$$35$F$35$$35$100) (= VV$35$$35$F$35$$35$100 (apply$35$$35$0 (as Binomial.Heap Int) lq_anf$36$$35$$35$7205759403792867346$35$$35$djbs)) (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$F$35$$35$100) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867346$35$$35$djbs)) (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$F$35$$35$100) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$100))) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$100) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867346$35$$35$djbs)) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$100) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$100))) (= (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$100) lq_anf$36$$35$$35$7205759403792867346$35$$35$djbs) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Heap$35$$35$1 Int) VV$35$$35$F$35$$35$100) lq_anf$36$$35$$35$7205759403792867346$35$$35$djbs) (>= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$100) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$100)) (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$100))))
(define-fun b$36$$35$$35$1952 () Bool (= VV$35$$35$F$35$$35$437 (apply$35$$35$3 (as Binomial.treeListElts Int) ts$35$$35$aiO1)))
(define-fun b$36$$35$$35$1984 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$377) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$377) 0)) (= VV$35$$35$F$35$$35$377 ts$35$$35$aiO6) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$377) r$35$$35$aiO5) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$377) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$377) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$377) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$377))))
(define-fun b$36$$35$$35$2016 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$381) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$381)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$381) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$381)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$381))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$381) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$381)) (> (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$2652) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$381)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$381) 0)))
(define-fun b$36$$35$$35$97 () Bool (not GHC.Types.False))
(define-fun b$36$$35$$35$161 () Bool (= lq_anf$36$$35$$35$7205759403792867204$35$$35$dj9a 0))
(define-fun b$36$$35$$35$193 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) 0)) (= lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j ds_dj30) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) (smt_map_def 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) (smt_map_def 0)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) 0) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) (smt_map_def 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) 1) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j))))
(define-fun b$36$$35$$35$225 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) 0)) (= lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u ds_dj4K) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) ds_dj4J) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u))))
(define-fun b$36$$35$$35$289 () Bool (= lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T (- ds_dj8n lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S)))
(define-fun b$36$$35$$35$321 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Node Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7) (= lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7 ds_dj1z) (= lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x$35$$35$aiO4) r$35$$35$aiO5) ts$35$$35$aiO6) sz$35$$35$aiO7)) (= (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7) r$35$$35$aiO5) (= (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7) x$35$$35$aiO4) (= (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7) ts$35$$35$aiO6) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) ts$35$$35$aiO6) (smt_map_sto (smt_map_def 0) x$35$$35$aiO4 (+ 1 (smt_map_sel (smt_map_def 0) x$35$$35$aiO4))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ts$35$$35$aiO6)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x$35$$35$aiO4) (- r$35$$35$aiO5 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ts$35$$35$aiO6)) (- sz$35$$35$aiO7 (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ts$35$$35$aiO6)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7) r$35$$35$aiO5) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7)) (= (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7) sz$35$$35$aiO7) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7) x$35$$35$aiO4) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7) r$35$$35$aiO5) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7) ts$35$$35$aiO6) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7) sz$35$$35$aiO7) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7) 0)))
(define-fun b$36$$35$$35$353 () Bool (and (apply$35$$35$1 (as is$36$GHC.Tuple.$40$$44$$41$ Int) ds_dj1U) (= ds_dj1U (apply$35$$35$0 (apply$35$$35$0 (as GHC.Tuple.$40$$44$$41$ Int) t$39$$35$$35$aiUT) ts$39$$35$$35$aiUV)) (= (apply$35$$35$0 (as fst Int) ds_dj1U) t$39$$35$$35$aiUT) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) ds_dj1U) t$39$$35$$35$aiUT) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) ds_dj1U) ts$39$$35$$35$aiUV) (= (apply$35$$35$0 (as snd Int) ds_dj1U) ts$39$$35$$35$aiUV) (= (apply$35$$35$0 (as x_Tuple21 Int) ds_dj1U) t$39$$35$$35$aiUT) (= (apply$35$$35$0 (as x_Tuple22 Int) ds_dj1U) ts$39$$35$$35$aiUV) (= (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as fst Int) ds_dj1U)) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as snd Int) ds_dj1U))) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj2p)) (= (+ (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as fst Int) ds_dj1U)) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as snd Int) ds_dj1U))) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj2p))))
(define-fun b$36$$35$$35$417 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Node Int) new$35$$35$aiOi) (= new$35$$35$aiOi (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x1$35$$35$aiO9) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH)) (= (apply$35$$35$0 (as Binomial.rank Int) new$35$$35$aiOi) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= (apply$35$$35$0 (as Binomial.root Int) new$35$$35$aiOi) x1$35$$35$aiO9) (= (apply$35$$35$0 (as Binomial.subtrees Int) new$35$$35$aiOi) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= (apply$35$$35$3 (as Binomial.treeElts Int) new$35$$35$aiOi) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) new$35$$35$aiOi)) (apply$35$$35$0 (as Binomial.root Int) new$35$$35$aiOi) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) new$35$$35$aiOi)) (apply$35$$35$0 (as Binomial.root Int) new$35$$35$aiOi))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) new$35$$35$aiOi) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (smt_map_sto (smt_map_def 0) x1$35$$35$aiO9 (+ 1 (smt_map_sel (smt_map_def 0) x1$35$$35$aiO9))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x1$35$$35$aiO9) (- lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG)) (- lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) new$35$$35$aiOi) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= (apply$35$$35$0 (as Binomial.treeRank Int) new$35$$35$aiOi) (apply$35$$35$0 (as Binomial.rank Int) new$35$$35$aiOi)) (= (apply$35$$35$0 (as Binomial.treeSize Int) new$35$$35$aiOi) lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) new$35$$35$aiOi) x1$35$$35$aiO9) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) new$35$$35$aiOi) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) new$35$$35$aiOi) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) new$35$$35$aiOi) lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (>= (apply$35$$35$0 (as Binomial.treeRank Int) new$35$$35$aiOi) 0)))
(define-fun b$36$$35$$35$449 () Bool (and (= lq_anf$36$$35$$35$7205759403792867315$35$$35$djaX (> lq_anf$36$$35$$35$7205759403792867312$35$$35$djaU lq_anf$36$$35$$35$7205759403792867313$35$$35$djaV)) (= lq_anf$36$$35$$35$7205759403792867315$35$$35$djaX lq_anf$36$$35$$35$7205759403792867314$35$$35$djaW)))
(define-fun b$36$$35$$35$481 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) 0)) (= lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8 (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8 ds_dj6F) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) (smt_map_def 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) (smt_map_def 0)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) 0) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) (smt_map_def 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8))))
(define-fun b$36$$35$$35$513 () Bool (and (= (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867338$35$$35$djbk) (+ (apply$35$$35$0 (as Binomial.rank Int) t1$35$$35$aiOV) 1)) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867338$35$$35$djbk) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t1$35$$35$aiOV) (apply$35$$35$3 (as Binomial.treeElts Int) t2$35$$35$aiOY))) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867338$35$$35$djbk) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867338$35$$35$djbk)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867338$35$$35$djbk) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867338$35$$35$djbk)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867338$35$$35$djbk))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867338$35$$35$djbk) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867338$35$$35$djbk)) (= (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867338$35$$35$djbk) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t1$35$$35$aiOV) (apply$35$$35$0 (as Binomial.treeSize Int) t2$35$$35$aiOY))) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867338$35$$35$djbk) 0)))
(define-fun b$36$$35$$35$545 () Bool (= lq_anf$36$$35$$35$7205759403792867351$35$$35$djbx 1))
(define-fun b$36$$35$$35$1793 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$320) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$320)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$320) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) 0)) (= VV$35$$35$F$35$$35$320 lq_anf$36$$35$$35$7205759403792867272$35$$35$djag) (= VV$35$$35$F$35$$35$320 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) ts$39$$35$$35$aiUV)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$320) (smt_map_cup (smt_map_sto (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf (+ 1 (smt_map_sel (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf))) (apply$35$$35$3 (as Binomial.listElts Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$320) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (apply$35$$35$3 (as Binomial.treeListElts Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$320) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$320) (smt_map_sto (apply$35$$35$3 (as fromList Int) ts$39$$35$$35$aiUV) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ts$39$$35$$35$aiUV) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf)))) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$320) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (+ 1 (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$320) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$320) ts$39$$35$$35$aiUV) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$320) ts$39$$35$$35$aiUV) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$320) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$320))))
(define-fun b$36$$35$$35$1825 () Bool (and (= VV$35$$35$F$35$$35$164 lq_anf$36$$35$$35$7205759403792867320$35$$35$djb2) (= VV$35$$35$F$35$$35$164 lq_anf$36$$35$$35$7205759403792867319$35$$35$djb1)))
(define-fun b$36$$35$$35$1921 () Bool (and (= VV$35$$35$F$35$$35$274 lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= VV$35$$35$F$35$$35$274 (+ sz1$35$$35$aiOc sz2$35$$35$aiOh))))
(define-fun b$36$$35$$35$1953 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$501) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$501)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$501) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$501)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$501))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$501) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$501)) (> (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$956) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$501)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$501) 0)))
(define-fun b$36$$35$$35$1985 () Bool (and (= VV$35$$35$F$35$$35$505 lit$36$$47$home$47$jamie$47$Documents$47$Master$47$MasterThesis$47$master$45$thesis$45$project$47$lh$45$thesis$47$src$47$Binomial.hs$58$78$58$1$45$31$124$function$32$rankOfTailDecreases) (= VV$35$$35$F$35$$35$505 lq_anf$36$$35$$35$7205759403792867212$35$$35$dj9i)))
(define-fun b$36$$35$$35$162 () Bool (and (= lq_anf$36$$35$$35$7205759403792867203$35$$35$dj99 ds_dj3y) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867203$35$$35$dj99) 0)))
(define-fun b$36$$35$$35$194 () Bool (= lq_anf$36$$35$$35$7205759403792867214$35$$35$dj9k lit$36$$47$home$47$jamie$47$Documents$47$Master$47$MasterThesis$47$master$45$thesis$45$project$47$lh$45$thesis$47$src$47$Binomial.hs$58$$40$83$44$1$41$$45$$40$84$44$77$41$$124$function$32$rankOfFirstTree))
(define-fun b$36$$35$$35$226 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) 0)) (= lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u ds_dj4K) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) ds_dj4J) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u))))
(define-fun b$36$$35$$35$290 () Bool (= lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U (= lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T)))
(define-fun b$36$$35$$35$1314 () Bool (and (= VV$35$$35$10207 lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= VV$35$$35$10207 t$35$$35$aiOu) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10207) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10207)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10207) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10207)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10207))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10207) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10207)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10207) 0)))
(define-fun b$36$$35$$35$386 () Bool (>= r2$35$$35$aiOf 0))
(define-fun b$36$$35$$35$418 () Bool (and (= lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI (apply$35$$35$3 (as Binomial.treeElts Int) new$35$$35$aiOi)) (= lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) new$35$$35$aiOi)) (apply$35$$35$0 (as Binomial.root Int) new$35$$35$aiOi) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) new$35$$35$aiOi)) (apply$35$$35$0 (as Binomial.root Int) new$35$$35$aiOi)))))))
(define-fun b$36$$35$$35$450 () Bool (and (not lq_anf$36$$35$$35$7205759403792867315$35$$35$djaX) (= lq_anf$36$$35$$35$7205759403792867315$35$$35$djaX (> lq_anf$36$$35$$35$7205759403792867312$35$$35$djaU lq_anf$36$$35$$35$7205759403792867313$35$$35$djaV)) (= lq_anf$36$$35$$35$7205759403792867315$35$$35$djaX lq_anf$36$$35$$35$7205759403792867314$35$$35$djaW)))
(define-fun b$36$$35$$35$482 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) 0)) (= lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8 ds_dj6F) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8))))
(define-fun b$36$$35$$35$514 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867339$35$$35$djbl) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867339$35$$35$djbl) 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867339$35$$35$djbl) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) ts1$39$$35$$35$aiOW) (apply$35$$35$3 (as Binomial.treeListElts Int) ts2$39$$35$$35$aiOZ))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867339$35$$35$djbl) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$39$$35$$35$aiOW) (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$39$$35$$35$aiOZ))) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867339$35$$35$djbl) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867339$35$$35$djbl) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867339$35$$35$djbl) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867339$35$$35$djbl))))
(define-fun b$36$$35$$35$546 () Bool (= lq_anf$36$$35$$35$7205759403792867352$35$$35$djby lq_anf$36$$35$$35$7205759403792867351$35$$35$djbx))
(define-fun b$36$$35$$35$578 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867360$35$$35$djbG) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867360$35$$35$djbG)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867360$35$$35$djbG) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867360$35$$35$djbG) 0)) (= lq_anf$36$$35$$35$7205759403792867360$35$$35$djbG (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) t$35$$35$aiOJ) acc$35$$35$aiOI)) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867360$35$$35$djbG) (smt_map_cup (smt_map_sto (smt_map_def 0) t$35$$35$aiOJ (+ 1 (smt_map_sel (smt_map_def 0) t$35$$35$aiOJ))) (apply$35$$35$3 (as Binomial.listElts Int) acc$35$$35$aiOI))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867360$35$$35$djbG) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOJ) (apply$35$$35$3 (as Binomial.treeListElts Int) acc$35$$35$aiOI))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867360$35$$35$djbG) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOJ) (apply$35$$35$0 (as Binomial.treeListSize Int) acc$35$$35$aiOI))) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867360$35$$35$djbG) (smt_map_sto (apply$35$$35$3 (as fromList Int) acc$35$$35$aiOI) t$35$$35$aiOJ (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) acc$35$$35$aiOI) t$35$$35$aiOJ)))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792867360$35$$35$djbG) t$35$$35$aiOJ) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867360$35$$35$djbG) (+ 1 (apply$35$$35$0 (as len Int) acc$35$$35$aiOI))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867360$35$$35$djbG) t$35$$35$aiOJ) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867360$35$$35$djbG) acc$35$$35$aiOI) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792867360$35$$35$djbG) acc$35$$35$aiOI) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867360$35$$35$djbG) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867360$35$$35$djbG) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867360$35$$35$djbG) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867360$35$$35$djbG))))
(define-fun b$36$$35$$35$1794 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$352) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$352) 0)) (= VV$35$$35$F$35$$35$352 ds_dj2p) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$352) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$352) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$352) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$352))))
(define-fun b$36$$35$$35$1858 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$104) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$104)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$104) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$104) 0)) (= VV$35$$35$F$35$$35$104 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) t1$35$$35$aiOV) lq_anf$36$$35$$35$7205759403792867341$35$$35$djbn)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$104) (smt_map_cup (smt_map_sto (smt_map_def 0) t1$35$$35$aiOV (+ 1 (smt_map_sel (smt_map_def 0) t1$35$$35$aiOV))) (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867341$35$$35$djbn))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$104) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t1$35$$35$aiOV) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867341$35$$35$djbn))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$104) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t1$35$$35$aiOV) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867341$35$$35$djbn))) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$104) (smt_map_sto (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867341$35$$35$djbn) t1$35$$35$aiOV (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867341$35$$35$djbn) t1$35$$35$aiOV)))) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$104) t1$35$$35$aiOV) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$104) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867341$35$$35$djbn))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$104) t1$35$$35$aiOV) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$104) lq_anf$36$$35$$35$7205759403792867341$35$$35$djbn) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$104) lq_anf$36$$35$$35$7205759403792867341$35$$35$djbn) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$104) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$104) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$104) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$104))))
(define-fun b$36$$35$$35$1890 () Bool (= VV$35$$35$F$35$$35$524 a$35$$35$aiNJ))
(define-fun b$36$$35$$35$1922 () Bool (and (= VV$35$$35$F$35$$35$338 lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= VV$35$$35$F$35$$35$338 t$35$$35$aiOu) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$338) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$338)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$338) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$338)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$338))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$338) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$338)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$338) 0)))
(define-fun b$36$$35$$35$1954 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$54) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$54) 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$54) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) ts$35$$35$aiOK) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867360$35$$35$djbG))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$54) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOK) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867360$35$$35$djbG))) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$54) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$54) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$54) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$54))))
(define-fun b$36$$35$$35$1986 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Heap Int) VV$35$$35$F$35$$35$26) (= VV$35$$35$F$35$$35$26 lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN) (= VV$35$$35$F$35$$35$26 (apply$35$$35$0 (as Binomial.Heap Int) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM)) (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$F$35$$35$26) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM)) (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$F$35$$35$26) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$26))) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$26) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM)) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$26) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$26))) (= (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$26) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Heap$35$$35$1 Int) VV$35$$35$F$35$$35$26) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM) (>= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$26) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$26)) (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$26))))
(define-fun b$36$$35$$35$2018 () Bool (and (= VV$35$$35$F$35$$35$158 lq_anf$36$$35$$35$7205759403792867323$35$$35$djb5) (= VV$35$$35$F$35$$35$158 lq_anf$36$$35$$35$7205759403792867322$35$$35$djb4)))
(define-fun b$36$$35$$35$163 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) x$35$$35$aiNL) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) x$35$$35$aiNL)) (apply$35$$35$0 (as Binomial.root Int) x$35$$35$aiNL) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) x$35$$35$aiNL)) (apply$35$$35$0 (as Binomial.root Int) x$35$$35$aiNL))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) x$35$$35$aiNL) (apply$35$$35$0 (as Binomial.rank Int) x$35$$35$aiNL)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) x$35$$35$aiNL) 0)))
(define-fun b$36$$35$$35$195 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) 0)) (= lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j ds_dj30) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) 1) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j))))
(define-fun b$36$$35$$35$227 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) 0)) (= lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u ds_dj4K) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) (smt_map_def 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) (smt_map_def 0)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) 0) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) (smt_map_def 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) ds_dj4J) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u))))
(define-fun b$36$$35$$35$1283 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$10049) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$10049)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10049) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$10049) 0)) (= VV$35$$35$10049 lq_anf$36$$35$$35$7205759403792867274$35$$35$djai) (= VV$35$$35$10049 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) ts$39$$35$$35$aiUV)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$10049) (smt_map_cup (smt_map_sto (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah (+ 1 (smt_map_sel (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah))) (apply$35$$35$3 (as Binomial.listElts Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$10049) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (apply$35$$35$3 (as Binomial.treeListElts Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10049) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$10049) (smt_map_sto (apply$35$$35$3 (as fromList Int) ts$39$$35$$35$aiUV) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ts$39$$35$$35$aiUV) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah)))) (= (apply$35$$35$0 (as head Int) VV$35$$35$10049) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= (apply$35$$35$0 (as len Int) VV$35$$35$10049) (+ 1 (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$10049) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$10049) ts$39$$35$$35$aiUV) (= (apply$35$$35$0 (as tail Int) VV$35$$35$10049) ts$39$$35$$35$aiUV) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10049) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$10049) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$10049) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10049))))
(define-fun b$36$$35$$35$1315 () Bool (and (= VV$35$$35$10212 t$35$$35$aiOu) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10212) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10212)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10212) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10212)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10212))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10212) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10212)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10212) 0)))
(define-fun b$36$$35$$35$387 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$35$$35$aiOg) 0) (= (apply$35$$35$0 (as len Int) ts2$35$$35$aiOg) 0)) (= (apply$35$$35$0 (as len Int) ts2$35$$35$aiOg) r2$35$$35$aiOf) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$35$$35$aiOg) 0) (>= (apply$35$$35$0 (as len Int) ts2$35$$35$aiOg) 0) (<= (apply$35$$35$0 (as len Int) ts2$35$$35$aiOg) (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$35$$35$aiOg))))
(define-fun b$36$$35$$35$419 () Bool (and (= lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam)) (= lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam)))))))
(define-fun b$36$$35$$35$451 () Bool (and (= (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867316$35$$35$djaY) (+ (apply$35$$35$0 (as Binomial.rank Int) t$35$$35$aiOn) 1)) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867316$35$$35$djaY) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOn) (apply$35$$35$3 (as Binomial.treeElts Int) t$39$$35$$35$aiOq))) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867316$35$$35$djaY) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867316$35$$35$djaY)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867316$35$$35$djaY) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867316$35$$35$djaY)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867316$35$$35$djaY))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867316$35$$35$djaY) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867316$35$$35$djaY)) (= (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867316$35$$35$djaY) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOn) (apply$35$$35$0 (as Binomial.treeSize Int) t$39$$35$$35$aiOq))) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867316$35$$35$djaY) 0)))
(define-fun b$36$$35$$35$483 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867342$35$$35$djbo) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867342$35$$35$djbo)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867342$35$$35$djbo) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867342$35$$35$djbo)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867342$35$$35$djbo))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867342$35$$35$djbo) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867342$35$$35$djbo)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867342$35$$35$djbo) 0)))
(define-fun b$36$$35$$35$515 () Bool (and (= lq_anf$36$$35$$35$7205759403792867337$35$$35$djbj (< lq_anf$36$$35$$35$7205759403792867334$35$$35$djbg lq_anf$36$$35$$35$7205759403792867335$35$$35$djbh)) (= lq_anf$36$$35$$35$7205759403792867337$35$$35$djbj lq_anf$36$$35$$35$7205759403792867336$35$$35$djbi)))
(define-fun b$36$$35$$35$547 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Node Int) lq_anf$36$$35$$35$7205759403792867353$35$$35$djbz) (= lq_anf$36$$35$$35$7205759403792867353$35$$35$djbz (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x$35$$35$aiOm) lq_anf$36$$35$$35$7205759403792867349$35$$35$djbv) lq_anf$36$$35$$35$7205759403792867350$35$$35$djbw) lq_anf$36$$35$$35$7205759403792867352$35$$35$djby)) (= (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867353$35$$35$djbz) lq_anf$36$$35$$35$7205759403792867349$35$$35$djbv) (= (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867353$35$$35$djbz) x$35$$35$aiOm) (= (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867353$35$$35$djbz) lq_anf$36$$35$$35$7205759403792867350$35$$35$djbw) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867353$35$$35$djbz) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867353$35$$35$djbz)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867353$35$$35$djbz) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867353$35$$35$djbz)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867353$35$$35$djbz))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867353$35$$35$djbz) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867350$35$$35$djbw) (smt_map_sto (smt_map_def 0) x$35$$35$aiOm (+ 1 (smt_map_sel (smt_map_def 0) x$35$$35$aiOm))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867350$35$$35$djbw)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x$35$$35$aiOm) (- lq_anf$36$$35$$35$7205759403792867349$35$$35$djbv 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867350$35$$35$djbw)) (- lq_anf$36$$35$$35$7205759403792867352$35$$35$djby (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867350$35$$35$djbw)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867353$35$$35$djbz) lq_anf$36$$35$$35$7205759403792867349$35$$35$djbv) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867353$35$$35$djbz) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867353$35$$35$djbz)) (= (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867353$35$$35$djbz) lq_anf$36$$35$$35$7205759403792867352$35$$35$djby) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867353$35$$35$djbz) x$35$$35$aiOm) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867353$35$$35$djbz) lq_anf$36$$35$$35$7205759403792867349$35$$35$djbv) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) lq_anf$36$$35$$35$7205759403792867353$35$$35$djbz) lq_anf$36$$35$$35$7205759403792867350$35$$35$djbw) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) lq_anf$36$$35$$35$7205759403792867353$35$$35$djbz) lq_anf$36$$35$$35$7205759403792867352$35$$35$djby) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867353$35$$35$djbz) 0)))
(define-fun b$36$$35$$35$1571 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_tmp$36$x$35$$35$956) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$956)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$956) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$956)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$956))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$956) (apply$35$$35$0 (as Binomial.rank Int) lq_tmp$36$x$35$$35$956)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$956) 0)))
(define-fun b$36$$35$$35$579 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOH) 0) (= (apply$35$$35$0 (as len Int) ts$35$$35$aiOH) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOH) 0) (>= (apply$35$$35$0 (as len Int) ts$35$$35$aiOH) 0) (<= (apply$35$$35$0 (as len Int) ts$35$$35$aiOH) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOH))))
(define-fun b$36$$35$$35$1795 () Bool (and (= (= VV$35$$35$F$35$$35$512 0) (= (apply$35$$35$0 (as len Int) ts$35$$35$aiOk) 0)) (= VV$35$$35$F$35$$35$512 (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOk)) (>= VV$35$$35$F$35$$35$512 0) (<= (apply$35$$35$0 (as len Int) ts$35$$35$aiOk) VV$35$$35$F$35$$35$512)))
(define-fun b$36$$35$$35$1859 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$296) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$296)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$296) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$296) 0)) (= VV$35$$35$F$35$$35$296 lq_anf$36$$35$$35$7205759403792867274$35$$35$djai) (= VV$35$$35$F$35$$35$296 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) ts$39$$35$$35$aiUV)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$296) (smt_map_cup (smt_map_sto (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah (+ 1 (smt_map_sel (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah))) (apply$35$$35$3 (as Binomial.listElts Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$296) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (apply$35$$35$3 (as Binomial.treeListElts Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$296) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$296) (smt_map_sto (apply$35$$35$3 (as fromList Int) ts$39$$35$$35$aiUV) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ts$39$$35$$35$aiUV) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah)))) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$296) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$296) (+ 1 (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$296) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$296) ts$39$$35$$35$aiUV) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$296) ts$39$$35$$35$aiUV) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$296) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$296) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$296) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$296))))
(define-fun b$36$$35$$35$1891 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$45) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$45) 0)) (= VV$35$$35$F$35$$35$45 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$45) (apply$35$$35$3 (as Binomial.elts Int) h$35$$35$aiOM)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$45) (apply$35$$35$0 (as Binomial.size Int) h$35$$35$aiOM)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$45) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$45) 0) (< 0 (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$45)) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$45) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$45))))
(define-fun b$36$$35$$35$1955 () Bool (and (= VV$35$$35$F$35$$35$86 lq_anf$36$$35$$35$7205759403792867352$35$$35$djby) (= VV$35$$35$F$35$$35$86 lq_anf$36$$35$$35$7205759403792867351$35$$35$djbx)))
(define-fun b$36$$35$$35$2019 () Bool (and (= VV$35$$35$F$35$$35$222 (= lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL)) (= VV$35$$35$F$35$$35$222 lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM)))
(define-fun b$36$$35$$35$164 () Bool (>= (apply$35$$35$0 (as len Int) xs$35$$35$aiNM) 0))
(define-fun b$36$$35$$35$196 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiNY) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$35$$35$aiNY)) (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aiNY) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$35$$35$aiNY)) (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aiNY))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aiNY) (apply$35$$35$0 (as Binomial.rank Int) t$35$$35$aiNY)) (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aiNY)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aiNY) 0)))
(define-fun b$36$$35$$35$228 () Bool (= lq_anf$36$$35$$35$7205759403792867225$35$$35$dj9v (smt_map_def 0)))
(define-fun b$36$$35$$35$292 () Bool (= lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W 1))
(define-fun b$36$$35$$35$388 () Bool (and (= sz2$35$$35$aiOh (+ 1 (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$35$$35$aiOg))) (>= sz2$35$$35$aiOh 1)))
(define-fun b$36$$35$$35$420 () Bool (and (= lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan)) (= lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan)))))))
(define-fun b$36$$35$$35$452 () Bool (and (= lq_anf$36$$35$$35$7205759403792867315$35$$35$djaX (> lq_anf$36$$35$$35$7205759403792867312$35$$35$djaU lq_anf$36$$35$$35$7205759403792867313$35$$35$djaV)) (= lq_anf$36$$35$$35$7205759403792867315$35$$35$djaX lq_anf$36$$35$$35$7205759403792867314$35$$35$djaW)))
(define-fun b$36$$35$$35$484 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867343$35$$35$djbp) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867343$35$$35$djbp) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867343$35$$35$djbp) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867343$35$$35$djbp) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867343$35$$35$djbp) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867343$35$$35$djbp))))
(define-fun b$36$$35$$35$516 () Bool (and lq_anf$36$$35$$35$7205759403792867337$35$$35$djbj (= lq_anf$36$$35$$35$7205759403792867337$35$$35$djbj (< lq_anf$36$$35$$35$7205759403792867334$35$$35$djbg lq_anf$36$$35$$35$7205759403792867335$35$$35$djbh)) (= lq_anf$36$$35$$35$7205759403792867337$35$$35$djbj lq_anf$36$$35$$35$7205759403792867336$35$$35$djbi)))
(define-fun b$36$$35$$35$1828 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$420) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$420)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$420) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$420)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$420))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$420) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$420)) (> ds_dj8n (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$420)) (> (apply$35$$35$0 (as Binomial.treeRank Int) ds_dj8q) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$420)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$420) 0)))
(define-fun b$36$$35$$35$1860 () Bool (and (= VV$35$$35$F$35$$35$424 lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y) (= VV$35$$35$F$35$$35$424 (- ds_dj8n lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X))))
(define-fun b$36$$35$$35$1924 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$434) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$434)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$434) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$434)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$434))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$434) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$434)) (> (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$2118) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$434)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$434) 0)))
(define-fun b$36$$35$$35$1956 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$150) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$150) 0)) (= VV$35$$35$F$35$$35$150 ts1$35$$35$aiOS) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$150) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$150) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$150) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$150))))
(define-fun b$36$$35$$35$165 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867203$35$$35$dj99) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867203$35$$35$dj99)) (= lq_anf$36$$35$$35$7205759403792867203$35$$35$dj99 ds_dj3y) (= lq_anf$36$$35$$35$7205759403792867203$35$$35$dj99 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) x$35$$35$aiNL) xs$35$$35$aiNM)) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867203$35$$35$dj99) (smt_map_cup (smt_map_sto (smt_map_def 0) x$35$$35$aiNL (+ 1 (smt_map_sel (smt_map_def 0) x$35$$35$aiNL))) (apply$35$$35$3 (as Binomial.listElts Int) xs$35$$35$aiNM))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867203$35$$35$dj99) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) x$35$$35$aiNL) (apply$35$$35$3 (as Binomial.treeListElts Int) xs$35$$35$aiNM))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867203$35$$35$dj99) (+ (apply$35$$35$0 (as Binomial.treeSize Int) x$35$$35$aiNL) (apply$35$$35$0 (as Binomial.treeListSize Int) xs$35$$35$aiNM))) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867203$35$$35$dj99) (smt_map_sto (apply$35$$35$3 (as fromList Int) xs$35$$35$aiNM) x$35$$35$aiNL (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) xs$35$$35$aiNM) x$35$$35$aiNL)))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792867203$35$$35$dj99) x$35$$35$aiNL) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867203$35$$35$dj99) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$aiNM))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867203$35$$35$dj99) x$35$$35$aiNL) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867203$35$$35$dj99) xs$35$$35$aiNM) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792867203$35$$35$dj99) xs$35$$35$aiNM) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867203$35$$35$dj99) 0)))
(define-fun b$36$$35$$35$1189 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$9531) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$9531)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9531) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$9531) 0)) (= VV$35$$35$9531 lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= VV$35$$35$9531 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) ts1$35$$35$aiOb)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$9531) (smt_map_cup (smt_map_sto (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF (+ 1 (smt_map_sel (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF))) (apply$35$$35$3 (as Binomial.listElts Int) ts1$35$$35$aiOb))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$9531) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (apply$35$$35$3 (as Binomial.treeListElts Int) ts1$35$$35$aiOb))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9531) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$35$$35$aiOb))) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$9531) (smt_map_sto (apply$35$$35$3 (as fromList Int) ts1$35$$35$aiOb) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ts1$35$$35$aiOb) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF)))) (= (apply$35$$35$0 (as head Int) VV$35$$35$9531) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= (apply$35$$35$0 (as len Int) VV$35$$35$9531) (+ 1 (apply$35$$35$0 (as len Int) ts1$35$$35$aiOb))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$9531) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$9531) ts1$35$$35$aiOb) (= (apply$35$$35$0 (as tail Int) VV$35$$35$9531) ts1$35$$35$aiOb) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9531) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$9531) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$9531) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9531))))
(define-fun b$36$$35$$35$197 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj3t) 0) (= (apply$35$$35$0 (as len Int) ds_dj3t) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj3t) 0) (>= (apply$35$$35$0 (as len Int) ds_dj3t) 0) (<= (apply$35$$35$0 (as len Int) ds_dj3t) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj3t))))
(define-fun b$36$$35$$35$229 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) 0)) (= lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u ds_dj4K) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) ds_dj4J) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u))))
(define-fun b$36$$35$$35$293 () Bool (= lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W))
(define-fun b$36$$35$$35$1317 () Bool (and (= VV$35$$35$10224 t$35$$35$aiOu) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10224) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10224)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10224) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10224)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10224))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10224) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10224)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10224) 0)))
(define-fun b$36$$35$$35$325 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj1J) 0) (= (apply$35$$35$0 (as len Int) ds_dj1J) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj1J) 0) (>= (apply$35$$35$0 (as len Int) ds_dj1J) 0) (< 0 (apply$35$$35$0 (as len Int) ds_dj1J)) (<= (apply$35$$35$0 (as len Int) ds_dj1J) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj1J))))
(define-fun b$36$$35$$35$357 () Bool (= lq_anf$36$$35$$35$7205759403792867269$35$$35$djad (< lq_anf$36$$35$$35$7205759403792867267$35$$35$djab lq_anf$36$$35$$35$7205759403792867268$35$$35$djac)))
(define-fun b$36$$35$$35$389 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Node Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_anf$36$$35$$35$7205759403792867279$35$$35$djan t2$35$$35$aiOd) (= lq_anf$36$$35$$35$7205759403792867279$35$$35$djan (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x2$35$$35$aiOe) r2$35$$35$aiOf) ts2$35$$35$aiOg) sz2$35$$35$aiOh)) (= (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) r2$35$$35$aiOf) (= (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (apply$35$$35$0 (as Binomial.rank Int) t1$35$$35$aiO8)) (= (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) x2$35$$35$aiOe) (= (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) ts2$35$$35$aiOg) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) ts2$35$$35$aiOg) (smt_map_sto (smt_map_def 0) x2$35$$35$aiOe (+ 1 (smt_map_sel (smt_map_def 0) x2$35$$35$aiOe))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ts2$35$$35$aiOg)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x2$35$$35$aiOe) (- r2$35$$35$aiOf 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ts2$35$$35$aiOg)) (- sz2$35$$35$aiOh (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ts2$35$$35$aiOg)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) r2$35$$35$aiOf) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan)) (= (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) sz2$35$$35$aiOh) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) x2$35$$35$aiOe) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) r2$35$$35$aiOf) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) ts2$35$$35$aiOg) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) sz2$35$$35$aiOh) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) 0)))
(define-fun b$36$$35$$35$421 () Bool (= lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL (smt_map_cup lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK)))
(define-fun b$36$$35$$35$453 () Bool (and lq_anf$36$$35$$35$7205759403792867315$35$$35$djaX (= lq_anf$36$$35$$35$7205759403792867315$35$$35$djaX (> lq_anf$36$$35$$35$7205759403792867312$35$$35$djaU lq_anf$36$$35$$35$7205759403792867313$35$$35$djaV)) (= lq_anf$36$$35$$35$7205759403792867315$35$$35$djaX lq_anf$36$$35$$35$7205759403792867314$35$$35$djaW)))
(define-fun b$36$$35$$35$485 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) 0)) (= lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8 ds_dj6F) (= lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867342$35$$35$djbo) lq_anf$36$$35$$35$7205759403792867343$35$$35$djbp)) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) (smt_map_cup (smt_map_sto (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867342$35$$35$djbo (+ 1 (smt_map_sel (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867342$35$$35$djbo))) (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867343$35$$35$djbp))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867342$35$$35$djbo) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867343$35$$35$djbp))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867342$35$$35$djbo) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867343$35$$35$djbp))) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) (smt_map_sto (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867343$35$$35$djbp) lq_anf$36$$35$$35$7205759403792867342$35$$35$djbo (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867343$35$$35$djbp) lq_anf$36$$35$$35$7205759403792867342$35$$35$djbo)))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) lq_anf$36$$35$$35$7205759403792867342$35$$35$djbo) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867343$35$$35$djbp))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) lq_anf$36$$35$$35$7205759403792867342$35$$35$djbo) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) lq_anf$36$$35$$35$7205759403792867343$35$$35$djbp) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) lq_anf$36$$35$$35$7205759403792867343$35$$35$djbp) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8))))
(define-fun b$36$$35$$35$517 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867340$35$$35$djbm) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867340$35$$35$djbm) 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867340$35$$35$djbm) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) ts1$35$$35$aiOS) (apply$35$$35$3 (as Binomial.treeListElts Int) ts2$39$$35$$35$aiOZ))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867340$35$$35$djbm) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$35$$35$aiOS) (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$39$$35$$35$aiOZ))) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867340$35$$35$djbm) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867340$35$$35$djbm) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867340$35$$35$djbm) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867340$35$$35$djbm))))
(define-fun b$36$$35$$35$549 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867354$35$$35$djbA) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867354$35$$35$djbA)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867354$35$$35$djbA) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867354$35$$35$djbA) 0)) (= lq_anf$36$$35$$35$7205759403792867354$35$$35$djbA (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867354$35$$35$djbA) (smt_map_def 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867354$35$$35$djbA) (smt_map_def 0)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867354$35$$35$djbA) 0) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867354$35$$35$djbA) (smt_map_def 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867354$35$$35$djbA) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867354$35$$35$djbA) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867354$35$$35$djbA) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867354$35$$35$djbA) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867354$35$$35$djbA))))
(define-fun b$36$$35$$35$581 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867361$35$$35$djbH) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867361$35$$35$djbH)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867361$35$$35$djbH) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867361$35$$35$djbH) 0)) (= lq_anf$36$$35$$35$7205759403792867361$35$$35$djbH (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867361$35$$35$djbH) (smt_map_def 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867361$35$$35$djbH) (smt_map_def 0)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867361$35$$35$djbH) 0) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867361$35$$35$djbH) (smt_map_def 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867361$35$$35$djbH) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867361$35$$35$djbH) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867361$35$$35$djbH) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867361$35$$35$djbH) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867361$35$$35$djbH))))
(define-fun b$36$$35$$35$1797 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$65) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$65) 0)) (= VV$35$$35$F$35$$35$65 acc$35$$35$aiOI) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$65) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$65) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$65) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$65))))
(define-fun b$36$$35$$35$1829 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$484) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$484) 0)) (= VV$35$$35$F$35$$35$484 lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m) (= VV$35$$35$F$35$$35$484 (apply$35$$35$0 (as Binomial.rankOfTailDecreases Int) ds_dj30)) (= VV$35$$35$F$35$$35$484 (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_dj30)) (= VV$35$$35$F$35$$35$484 (apply$35$$35$0 (as tail Int) ds_dj30)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$484) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$484) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$484) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$484))))
(define-fun b$36$$35$$35$1861 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Node Int) VV$35$$35$F$35$$35$456) (= VV$35$$35$F$35$$35$456 residual$35$$35$aiNU) (= VV$35$$35$F$35$$35$456 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x$35$$35$aiNN) lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E) ts$35$$35$aiNR) lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G)) (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$456) lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E) (= (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$456) x$35$$35$aiNN) (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$456) ts$35$$35$aiNR) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$456) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) ts$35$$35$aiNR) (smt_map_sto (smt_map_def 0) x$35$$35$aiNN (+ 1 (smt_map_sel (smt_map_def 0) x$35$$35$aiNN))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ts$35$$35$aiNR)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x$35$$35$aiNN) (- lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ts$35$$35$aiNR)) (- lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ts$35$$35$aiNR)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$456) lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$456) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$456)) (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$456) lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) VV$35$$35$F$35$$35$456) x$35$$35$aiNN) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) VV$35$$35$F$35$$35$456) lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$456) ts$35$$35$aiNR) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) VV$35$$35$F$35$$35$456) lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$456) 0)))
(define-fun b$36$$35$$35$1893 () Bool (and (= VV$35$$35$F$35$$35$461 lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G) (= VV$35$$35$F$35$$35$461 (- ds_dj4L lq_anf$36$$35$$35$7205759403792867235$35$$35$dj9F))))
(define-fun b$36$$35$$35$1925 () Bool (and (= VV$35$$35$F$35$$35$498 lit$36$$47$home$47$jamie$47$Documents$47$Master$47$MasterThesis$47$master$45$thesis$45$project$47$lh$45$thesis$47$src$47$Binomial.hs$58$$40$83$44$1$41$$45$$40$84$44$77$41$$124$function$32$rankOfFirstTree) (= VV$35$$35$F$35$$35$498 lq_anf$36$$35$$35$7205759403792867214$35$$35$dj9k)))
(define-fun b$36$$35$$35$1989 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$282) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$282)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$282) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$282)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$282))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$282) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$282)) (> r2$35$$35$aiOf (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$282)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$282) 0)))
(define-fun b$36$$35$$35$2021 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$286) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$286)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$286) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$286)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$286))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$286) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$286)) (> (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$3575) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$286)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$286) 0)))
(define-fun b$36$$35$$35$166 () Bool (and (= lq_anf$36$$35$$35$7205759403792867205$35$$35$dj9b (apply$35$$35$0 (as Binomial.treeSize Int) x$35$$35$aiNL)) (= lq_anf$36$$35$$35$7205759403792867205$35$$35$dj9b (+ 1 (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.subtrees Int) x$35$$35$aiNL)))) (>= lq_anf$36$$35$$35$7205759403792867205$35$$35$dj9b 1)))
(define-fun b$36$$35$$35$198 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) 0)) (= lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j ds_dj30) (= lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) t$35$$35$aiNY) ds_dj3t)) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) (smt_map_cup (smt_map_sto (smt_map_def 0) t$35$$35$aiNY (+ 1 (smt_map_sel (smt_map_def 0) t$35$$35$aiNY))) (apply$35$$35$3 (as Binomial.listElts Int) ds_dj3t))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiNY) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj3t))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiNY) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj3t))) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) (smt_map_sto (apply$35$$35$3 (as fromList Int) ds_dj3t) t$35$$35$aiNY (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ds_dj3t) t$35$$35$aiNY)))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) t$35$$35$aiNY) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) (+ 1 (apply$35$$35$0 (as len Int) ds_dj3t))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) t$35$$35$aiNY) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) ds_dj3t) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) ds_dj3t) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) 1) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j))))
(define-fun b$36$$35$$35$230 () Bool (and (= (apply$35$$35$0 (as Binomial.treeRank Int) ds_dj4M) (apply$35$$35$0 (as Binomial.rank Int) ds_dj4M)) (> ds_dj4J (apply$35$$35$0 (as Binomial.treeRank Int) ds_dj4M)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) ds_dj4M) 0)))
(define-fun b$36$$35$$35$262 () Bool (and (= (apply$35$$35$0 (as Binomial.size Int) ds_dj58) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) ds_dj58))) (>= (apply$35$$35$0 (as Binomial.size Int) ds_dj58) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) ds_dj58)) (apply$35$$35$0 (as Binomial.size Int) ds_dj58))))
(define-fun b$36$$35$$35$294 () Bool (= lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y (- ds_dj8n lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X)))
(define-fun b$36$$35$$35$1318 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10229) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$10229) 0)) (= VV$35$$35$10229 ts$39$$35$$35$aiUV) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10229) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$10229) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$10229) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10229))))
(define-fun b$36$$35$$35$326 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) 0)) (= lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8 ds_dj1J) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) 0) (< 0 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8))))
(define-fun b$36$$35$$35$358 () Bool (and (= lq_anf$36$$35$$35$7205759403792867270$35$$35$djae (< lq_anf$36$$35$$35$7205759403792867267$35$$35$djab lq_anf$36$$35$$35$7205759403792867268$35$$35$djac)) (= lq_anf$36$$35$$35$7205759403792867270$35$$35$djae lq_anf$36$$35$$35$7205759403792867269$35$$35$djad)))
(define-fun b$36$$35$$35$390 () Bool (= lq_anf$36$$35$$35$7205759403792867280$35$$35$djao (<= x1$35$$35$aiO9 x2$35$$35$aiOe)))
(define-fun b$36$$35$$35$422 () Bool (= lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM (= lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL)))
(define-fun b$36$$35$$35$454 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867317$35$$35$djaZ) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867317$35$$35$djaZ) 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867317$35$$35$djaZ) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOn) (apply$35$$35$3 (as Binomial.treeListElts Int) ts$39$$35$$35$aiOr))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867317$35$$35$djaZ) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOn) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiOr))) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867317$35$$35$djaZ) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867317$35$$35$djaZ) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867317$35$$35$djaZ) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867317$35$$35$djaZ))))
(define-fun b$36$$35$$35$486 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) 0)) (= lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9 ts1$35$$35$aiOS) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9))))
(define-fun b$36$$35$$35$1798 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$129) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$129) 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$129) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867338$35$$35$djbk) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867339$35$$35$djbl))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$129) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867338$35$$35$djbk) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867339$35$$35$djbl))) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$129) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$129) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$129) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$129))))
(define-fun b$36$$35$$35$1830 () Bool (= VV$35$$35$F$35$$35$516 (+ lq_anf$36$$35$$35$7205759403792867205$35$$35$dj9b lq_anf$36$$35$$35$7205759403792867206$35$$35$dj9c)))
(define-fun b$36$$35$$35$1894 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$493) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$493)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$493) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$493)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$493))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$493) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$493)) (> (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$1226) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$493)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$493) 0)))
(define-fun b$36$$35$$35$1926 () Bool (and (= VV$35$$35$F$35$$35$147 lit$36$$47$home$47$jamie$47$Documents$47$Master$47$MasterThesis$47$master$45$thesis$45$project$47$lh$45$thesis$47$src$47$Binomial.hs$58$$40$225$44$1$41$$45$$40$230$44$63$41$$124$function$32$merge$39$) (= VV$35$$35$F$35$$35$147 lq_anf$36$$35$$35$7205759403792867329$35$$35$djbb)))
(define-fun b$36$$35$$35$1990 () Bool (and (= VV$35$$35$F$35$$35$314 lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= VV$35$$35$F$35$$35$314 t$39$$35$$35$aiUT) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$314) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$314)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$314) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$314)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$314))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$314) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$314)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$314) 0)))
(define-fun b$36$$35$$35$2022 () Bool (and (apply$35$$35$1 (as is$36$GHC.Tuple.$40$$44$$41$ Int) VV$35$$35$F$35$$35$318) (= VV$35$$35$F$35$$35$318 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Tuple.$40$$44$$41$ Int) t$39$$35$$35$aiUT) lq_anf$36$$35$$35$7205759403792867272$35$$35$djag)) (= (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$318) t$39$$35$$35$aiUT) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) VV$35$$35$F$35$$35$318) t$39$$35$$35$aiUT) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) VV$35$$35$F$35$$35$318) lq_anf$36$$35$$35$7205759403792867272$35$$35$djag) (= (apply$35$$35$0 (as snd Int) VV$35$$35$F$35$$35$318) lq_anf$36$$35$$35$7205759403792867272$35$$35$djag) (= (apply$35$$35$0 (as x_Tuple21 Int) VV$35$$35$F$35$$35$318) t$39$$35$$35$aiUT) (= (apply$35$$35$0 (as x_Tuple22 Int) VV$35$$35$F$35$$35$318) lq_anf$36$$35$$35$7205759403792867272$35$$35$djag)))
(define-fun b$36$$35$$35$167 () Bool (and (= (= lq_anf$36$$35$$35$7205759403792867206$35$$35$dj9c 0) (= (apply$35$$35$0 (as len Int) xs$35$$35$aiNM) 0)) (= lq_anf$36$$35$$35$7205759403792867206$35$$35$dj9c (apply$35$$35$0 (as Binomial.treeListSize Int) xs$35$$35$aiNM)) (>= lq_anf$36$$35$$35$7205759403792867206$35$$35$dj9c 0) (<= (apply$35$$35$0 (as len Int) xs$35$$35$aiNM) lq_anf$36$$35$$35$7205759403792867206$35$$35$dj9c)))
(define-fun b$36$$35$$35$1191 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_tmp$36$x$35$$35$3933) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$3933)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$3933) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$3933)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$3933))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$3933) (apply$35$$35$0 (as Binomial.rank Int) lq_tmp$36$x$35$$35$3933)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$3933) 0)))
(define-fun b$36$$35$$35$199 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) 0)) (= lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l ds_dj3t) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l))))
(define-fun b$36$$35$$35$1223 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$9681) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$9681)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9681) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$9681) 0)) (= VV$35$$35$9681 lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= VV$35$$35$9681 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) ts2$35$$35$aiOg)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$9681) (smt_map_cup (smt_map_sto (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat (+ 1 (smt_map_sel (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat))) (apply$35$$35$3 (as Binomial.listElts Int) ts2$35$$35$aiOg))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$9681) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (apply$35$$35$3 (as Binomial.treeListElts Int) ts2$35$$35$aiOg))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9681) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$35$$35$aiOg))) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$9681) (smt_map_sto (apply$35$$35$3 (as fromList Int) ts2$35$$35$aiOg) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ts2$35$$35$aiOg) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat)))) (= (apply$35$$35$0 (as head Int) VV$35$$35$9681) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= (apply$35$$35$0 (as len Int) VV$35$$35$9681) (+ 1 (apply$35$$35$0 (as len Int) ts2$35$$35$aiOg))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$9681) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$9681) ts2$35$$35$aiOg) (= (apply$35$$35$0 (as tail Int) VV$35$$35$9681) ts2$35$$35$aiOg) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9681) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$9681) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$9681) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9681))))
(define-fun b$36$$35$$35$231 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiNR) 0) (= (apply$35$$35$0 (as len Int) ts$35$$35$aiNR) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiNR) 0) (>= (apply$35$$35$0 (as len Int) ts$35$$35$aiNR) 0) (<= (apply$35$$35$0 (as len Int) ts$35$$35$aiNR) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiNR))))
(define-fun b$36$$35$$35$263 () Bool (and (= lq_anf$36$$35$$35$7205759403792867243$35$$35$dj9N ds_dj58) (= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867243$35$$35$dj9N) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867243$35$$35$dj9N))) (>= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867243$35$$35$dj9N) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867243$35$$35$dj9N)) (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867243$35$$35$dj9N))))
(define-fun b$36$$35$$35$295 () Bool (and (= lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOF)) (= lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z (+ 1 (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$35$$35$aiOF)))) (>= lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z 1)))
(define-fun b$36$$35$$35$1319 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10237) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10237)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10237) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10237)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10237))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10237) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10237)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10237) 0)))
(define-fun b$36$$35$$35$327 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) 0)) (= lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8 ds_dj1J) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) 0) (< 0 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8))))
(define-fun b$36$$35$$35$359 () Bool (and (= lq_anf$36$$35$$35$7205759403792867270$35$$35$djae (< lq_anf$36$$35$$35$7205759403792867267$35$$35$djab lq_anf$36$$35$$35$7205759403792867268$35$$35$djac)) (= lq_anf$36$$35$$35$7205759403792867270$35$$35$djae lq_anf$36$$35$$35$7205759403792867269$35$$35$djad)))
(define-fun b$36$$35$$35$391 () Bool (and (= lq_anf$36$$35$$35$7205759403792867281$35$$35$djap (<= x1$35$$35$aiO9 x2$35$$35$aiOe)) (= lq_anf$36$$35$$35$7205759403792867281$35$$35$djap lq_anf$36$$35$$35$7205759403792867280$35$$35$djao)))
(define-fun b$36$$35$$35$487 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) 0)) (= lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9 ts1$35$$35$aiOS) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9))))
(define-fun b$36$$35$$35$519 () Bool (and (= lq_anf$36$$35$$35$7205759403792867333$35$$35$djbf (< lq_anf$36$$35$$35$7205759403792867330$35$$35$djbc lq_anf$36$$35$$35$7205759403792867331$35$$35$djbd)) (= lq_anf$36$$35$$35$7205759403792867333$35$$35$djbf lq_anf$36$$35$$35$7205759403792867332$35$$35$djbe)))
(define-fun b$36$$35$$35$551 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867355$35$$35$djbB) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867355$35$$35$djbB)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867355$35$$35$djbB) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867355$35$$35$djbB) 0)) (= lq_anf$36$$35$$35$7205759403792867355$35$$35$djbB (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867353$35$$35$djbz) lq_anf$36$$35$$35$7205759403792867354$35$$35$djbA)) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867355$35$$35$djbB) (smt_map_cup (smt_map_sto (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867353$35$$35$djbz (+ 1 (smt_map_sel (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867353$35$$35$djbz))) (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867354$35$$35$djbA))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867355$35$$35$djbB) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867353$35$$35$djbz) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867354$35$$35$djbA))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867355$35$$35$djbB) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867353$35$$35$djbz) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867354$35$$35$djbA))) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867355$35$$35$djbB) (smt_map_sto (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867354$35$$35$djbA) lq_anf$36$$35$$35$7205759403792867353$35$$35$djbz (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867354$35$$35$djbA) lq_anf$36$$35$$35$7205759403792867353$35$$35$djbz)))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792867355$35$$35$djbB) lq_anf$36$$35$$35$7205759403792867353$35$$35$djbz) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867355$35$$35$djbB) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867354$35$$35$djbA))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867355$35$$35$djbB) lq_anf$36$$35$$35$7205759403792867353$35$$35$djbz) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867355$35$$35$djbB) lq_anf$36$$35$$35$7205759403792867354$35$$35$djbA) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792867355$35$$35$djbB) lq_anf$36$$35$$35$7205759403792867354$35$$35$djbA) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867355$35$$35$djbB) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867355$35$$35$djbB) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867355$35$$35$djbB) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867355$35$$35$djbB))))
(define-fun b$36$$35$$35$775 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7322) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$7322) 0)) (= VV$35$$35$7322 lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$7322) (apply$35$$35$3 (as Binomial.treeListElts Int) ts1$35$$35$aiOP)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7322) (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$35$$35$aiOP)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7322) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$7322) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$7322) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7322))))
(define-fun b$36$$35$$35$1863 () Bool (= VV$35$$35$F$35$$35$520 lq_anf$36$$35$$35$7205759403792867204$35$$35$dj9a))
(define-fun b$36$$35$$35$1927 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$243) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$243)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$243) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$243)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$243))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$243) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$243)) (> r1$35$$35$aiOa (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$243)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$243) 0)))
(define-fun b$36$$35$$35$1991 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$346) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$346)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$346) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$346)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$346))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$346) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$346)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$346) 0)))
(define-fun b$36$$35$$35$2023 () Bool (and (= VV$35$$35$F$35$$35$350 t$39$$35$$35$aiUT) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$350) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$350)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$350) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$350)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$350))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$350) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$350)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$350) 0)))
(define-fun b$36$$35$$35$168 () Bool (= (apply$35$$35$3 (as Binomial.elts Int) ds_dj3J) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) ds_dj3J))))
(define-fun b$36$$35$$35$200 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) 0)) (= lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l ds_dj3t) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l))))
(define-fun b$36$$35$$35$232 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) 0)) (= lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u ds_dj4K) (= lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_dj4M) ts$35$$35$aiNR)) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) (smt_map_cup (smt_map_sto (smt_map_def 0) ds_dj4M (+ 1 (smt_map_sel (smt_map_def 0) ds_dj4M))) (apply$35$$35$3 (as Binomial.listElts Int) ts$35$$35$aiNR))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) ds_dj4M) (apply$35$$35$3 (as Binomial.treeListElts Int) ts$35$$35$aiNR))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) (+ (apply$35$$35$0 (as Binomial.treeSize Int) ds_dj4M) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiNR))) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) (smt_map_sto (apply$35$$35$3 (as fromList Int) ts$35$$35$aiNR) ds_dj4M (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ts$35$$35$aiNR) ds_dj4M)))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) ds_dj4M) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) ds_dj4J) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) (+ 1 (apply$35$$35$0 (as len Int) ts$35$$35$aiNR))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) ds_dj4M) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) ts$35$$35$aiNR) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) ts$35$$35$aiNR) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u))))
(define-fun b$36$$35$$35$264 () Bool (and (= lq_anf$36$$35$$35$7205759403792867243$35$$35$dj9N ds_dj58) (= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867243$35$$35$dj9N) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867243$35$$35$dj9N))) (>= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867243$35$$35$dj9N) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867243$35$$35$dj9N)) (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867243$35$$35$dj9N))))
(define-fun b$36$$35$$35$296 () Bool (= lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0 (- ds_dj8p lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z)))
(define-fun b$36$$35$$35$328 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) 0)) (= lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8 (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8 ds_dj1J) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (smt_map_def 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (smt_map_def 0)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) 0) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (smt_map_def 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) 0) (< 0 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8))))
(define-fun b$36$$35$$35$360 () Bool (and (not lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_anf$36$$35$$35$7205759403792867270$35$$35$djae (< lq_anf$36$$35$$35$7205759403792867267$35$$35$djab lq_anf$36$$35$$35$7205759403792867268$35$$35$djac)) (= lq_anf$36$$35$$35$7205759403792867270$35$$35$djae lq_anf$36$$35$$35$7205759403792867269$35$$35$djad)))
(define-fun b$36$$35$$35$392 () Bool (and (= lq_anf$36$$35$$35$7205759403792867281$35$$35$djap (<= x1$35$$35$aiO9 x2$35$$35$aiOe)) (= lq_anf$36$$35$$35$7205759403792867281$35$$35$djap lq_anf$36$$35$$35$7205759403792867280$35$$35$djao)))
(define-fun b$36$$35$$35$456 () Bool (and (= lq_anf$36$$35$$35$7205759403792867311$35$$35$djaT (< lq_anf$36$$35$$35$7205759403792867308$35$$35$djaQ lq_anf$36$$35$$35$7205759403792867309$35$$35$djaR)) (= lq_anf$36$$35$$35$7205759403792867311$35$$35$djaT lq_anf$36$$35$$35$7205759403792867310$35$$35$djaS)))
(define-fun b$36$$35$$35$488 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) 0)) (= lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9 (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9 ts1$35$$35$aiOS) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) (smt_map_def 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) (smt_map_def 0)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) 0) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) (smt_map_def 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9))))
(define-fun b$36$$35$$35$1512 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11210) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$11210) 0)) (= VV$35$$35$11210 ts$35$$35$aiNR) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11210) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$11210) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$11210) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11210))))
(define-fun b$36$$35$$35$520 () Bool (and lq_anf$36$$35$$35$7205759403792867333$35$$35$djbf (= lq_anf$36$$35$$35$7205759403792867333$35$$35$djbf (< lq_anf$36$$35$$35$7205759403792867330$35$$35$djbc lq_anf$36$$35$$35$7205759403792867331$35$$35$djbd)) (= lq_anf$36$$35$$35$7205759403792867333$35$$35$djbf lq_anf$36$$35$$35$7205759403792867332$35$$35$djbe)))
(define-fun b$36$$35$$35$584 () Bool (and (= (apply$35$$35$3 (as Binomial.elts Int) h$35$$35$aiOM) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) h$35$$35$aiOM))) (= (apply$35$$35$0 (as Binomial.size Int) h$35$$35$aiOM) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) h$35$$35$aiOM))) (>= (apply$35$$35$0 (as Binomial.size Int) h$35$$35$aiOM) 0) (< 0 (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) h$35$$35$aiOM))) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) h$35$$35$aiOM)) (apply$35$$35$0 (as Binomial.size Int) h$35$$35$aiOM))))
(define-fun b$36$$35$$35$776 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$7330) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7330)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7330) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7330)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7330))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7330) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$7330)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7330) 0)))
(define-fun b$36$$35$$35$1832 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$69) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$69)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$69) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$69) 0)) (= VV$35$$35$F$35$$35$69 lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) (= VV$35$$35$F$35$$35$69 ts$35$$35$aiOz) (= VV$35$$35$F$35$$35$69 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_dj1s) ds_dj1t)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$69) (smt_map_cup (smt_map_sto (smt_map_def 0) ds_dj1s (+ 1 (smt_map_sel (smt_map_def 0) ds_dj1s))) (apply$35$$35$3 (as Binomial.listElts Int) ds_dj1t))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$69) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) ds_dj1s) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj1t))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$69) (+ (apply$35$$35$0 (as Binomial.treeSize Int) ds_dj1s) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj1t))) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$69) (smt_map_sto (apply$35$$35$3 (as fromList Int) ds_dj1t) ds_dj1s (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ds_dj1t) ds_dj1s)))) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$69) ds_dj1s) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$69) (+ 1 (apply$35$$35$0 (as len Int) ds_dj1t))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$69) ds_dj1s) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$69) ds_dj1t) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$69) ds_dj1t) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$69) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$69) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$69) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$69))))
(define-fun b$36$$35$$35$1864 () Bool (and (= VV$35$$35$F$35$$35$73 lit$36$$47$home$47$jamie$47$Documents$47$Master$47$MasterThesis$47$master$45$thesis$45$project$47$lh$45$thesis$47$src$47$Binomial.hs$58$185$58$1$45$35$124$function$32$unheapNonempty) (= VV$35$$35$F$35$$35$73 lq_anf$36$$35$$35$7205759403792867358$35$$35$djbE)))
(define-fun b$36$$35$$35$1928 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$275) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$275)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$275) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$275) 0)) (= VV$35$$35$F$35$$35$275 lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= VV$35$$35$F$35$$35$275 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) ts2$35$$35$aiOg)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$275) (smt_map_cup (smt_map_sto (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat (+ 1 (smt_map_sel (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat))) (apply$35$$35$3 (as Binomial.listElts Int) ts2$35$$35$aiOg))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$275) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (apply$35$$35$3 (as Binomial.treeListElts Int) ts2$35$$35$aiOg))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$275) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$35$$35$aiOg))) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$275) (smt_map_sto (apply$35$$35$3 (as fromList Int) ts2$35$$35$aiOg) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ts2$35$$35$aiOg) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat)))) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$275) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$275) (+ 1 (apply$35$$35$0 (as len Int) ts2$35$$35$aiOg))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$275) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$275) ts2$35$$35$aiOg) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$275) ts2$35$$35$aiOg) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$275) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$275) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$275) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$275))))
(define-fun b$36$$35$$35$1992 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$378) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$378)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$378) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$378)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$378))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$378) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$378)) (> r$35$$35$aiO5 (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$378)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$378) 0)))
(define-fun b$36$$35$$35$2024 () Bool (and (= VV$35$$35$F$35$$35$382 r$35$$35$aiO5) (>= VV$35$$35$F$35$$35$382 0)))
(define-fun b$36$$35$$35$169 () Bool (and (= lq_anf$36$$35$$35$7205759403792867207$35$$35$dj9d ds_dj3J) (= (apply$35$$35$3 (as Binomial.elts Int) lq_anf$36$$35$$35$7205759403792867207$35$$35$dj9d) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867207$35$$35$dj9d)))))
(define-fun b$36$$35$$35$201 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) 0)) (= lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l ds_dj3t) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) (smt_map_def 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) (smt_map_def 0)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) 0) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) (smt_map_def 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l))))
(define-fun b$36$$35$$35$1225 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_tmp$36$x$35$$35$3636) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$3636)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$3636) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$3636)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$3636))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$3636) (apply$35$$35$0 (as Binomial.rank Int) lq_tmp$36$x$35$$35$3636)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$3636) 0)))
(define-fun b$36$$35$$35$233 () Bool (and (= t$35$$35$aiNT (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ds_dj4K)) (= t$35$$35$aiNT (apply$35$$35$0 (as head Int) ds_dj4K)) (= t$35$$35$aiNT (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_dj4K)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) ds_dj4K) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) ds_dj4K))) (= (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aiNT) (apply$35$$35$0 (as Binomial.rank Int) t$35$$35$aiNT)) (= (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aiNT) (- (apply$35$$35$0 (as len Int) ds_dj4K) 1)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aiNT) 0)))
(define-fun b$36$$35$$35$265 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiO1) 0) (= (apply$35$$35$0 (as len Int) ts$35$$35$aiO1) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiO1) 0) (>= (apply$35$$35$0 (as len Int) ts$35$$35$aiO1) 0) (<= (apply$35$$35$0 (as len Int) ts$35$$35$aiO1) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiO1))))
(define-fun b$36$$35$$35$297 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Node Int) residual$35$$35$aiOG) (= residual$35$$35$aiOG (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) ds_dj8m) lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y) ts$35$$35$aiOD) lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0)) (= (apply$35$$35$0 (as Binomial.rank Int) residual$35$$35$aiOG) lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y) (= (apply$35$$35$0 (as Binomial.root Int) residual$35$$35$aiOG) ds_dj8m) (= (apply$35$$35$0 (as Binomial.subtrees Int) residual$35$$35$aiOG) ts$35$$35$aiOD) (= (apply$35$$35$3 (as Binomial.treeElts Int) residual$35$$35$aiOG) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) residual$35$$35$aiOG)) (apply$35$$35$0 (as Binomial.root Int) residual$35$$35$aiOG) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) residual$35$$35$aiOG)) (apply$35$$35$0 (as Binomial.root Int) residual$35$$35$aiOG))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) residual$35$$35$aiOG) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) ts$35$$35$aiOD) (smt_map_sto (smt_map_def 0) ds_dj8m (+ 1 (smt_map_sel (smt_map_def 0) ds_dj8m))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ts$35$$35$aiOD)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) ds_dj8m) (- lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ts$35$$35$aiOD)) (- lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0 (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ts$35$$35$aiOD)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) residual$35$$35$aiOG) lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y) (= (apply$35$$35$0 (as Binomial.treeRank Int) residual$35$$35$aiOG) (apply$35$$35$0 (as Binomial.rank Int) residual$35$$35$aiOG)) (= (apply$35$$35$0 (as Binomial.treeSize Int) residual$35$$35$aiOG) lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) residual$35$$35$aiOG) ds_dj8m) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) residual$35$$35$aiOG) lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) residual$35$$35$aiOG) ts$35$$35$aiOD) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) residual$35$$35$aiOG) lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0) (>= (apply$35$$35$0 (as Binomial.treeRank Int) residual$35$$35$aiOG) 0)))
(define-fun b$36$$35$$35$329 () Bool (= lq_anf$36$$35$$35$7205759403792867265$35$$35$dja9 lit$36$$47$home$47$jamie$47$Documents$47$Master$47$MasterThesis$47$master$45$thesis$45$project$47$lh$45$thesis$47$src$47$Binomial.hs$58$$40$175$44$1$41$$45$$40$180$44$36$41$$124$function$32$deleteMin$39$))
(define-fun b$36$$35$$35$361 () Bool (and (= lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf t$35$$35$aiOu) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) 0)))
(define-fun b$36$$35$$35$393 () Bool (and (not lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_anf$36$$35$$35$7205759403792867281$35$$35$djap (<= x1$35$$35$aiO9 x2$35$$35$aiOe)) (= lq_anf$36$$35$$35$7205759403792867281$35$$35$djap lq_anf$36$$35$$35$7205759403792867280$35$$35$djao)))
(define-fun b$36$$35$$35$457 () Bool (and lq_anf$36$$35$$35$7205759403792867311$35$$35$djaT (= lq_anf$36$$35$$35$7205759403792867311$35$$35$djaT (< lq_anf$36$$35$$35$7205759403792867308$35$$35$djaQ lq_anf$36$$35$$35$7205759403792867309$35$$35$djaR)) (= lq_anf$36$$35$$35$7205759403792867311$35$$35$djaT lq_anf$36$$35$$35$7205759403792867310$35$$35$djaS)))
(define-fun b$36$$35$$35$489 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) 0)) (= lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9 ts1$35$$35$aiOS) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9))))
(define-fun b$36$$35$$35$1513 () Bool (and (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$11218) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$11218)) (> ds_dj4J (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$11218)) (> (apply$35$$35$0 (as Binomial.treeRank Int) ds_dj4M) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$11218)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$11218) 0)))
(define-fun b$36$$35$$35$521 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867341$35$$35$djbn) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867341$35$$35$djbn) 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867341$35$$35$djbn) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) ts1$39$$35$$35$aiOW) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj6F))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867341$35$$35$djbn) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$39$$35$$35$aiOW) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj6F))) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867341$35$$35$djbn) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867341$35$$35$djbn) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867341$35$$35$djbn) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867341$35$$35$djbn))))
(define-fun b$36$$35$$35$1545 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11353) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$11353) 0)) (= VV$35$$35$11353 lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m) (= VV$35$$35$11353 (apply$35$$35$0 (as Binomial.rankOfTailDecreases Int) ds_dj30)) (= VV$35$$35$11353 (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_dj30)) (= VV$35$$35$11353 (apply$35$$35$0 (as tail Int) ds_dj30)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11353) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$11353) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$11353) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11353))))
(define-fun b$36$$35$$35$553 () Bool (and (= (apply$35$$35$3 (as Binomial.elts Int) ds_dj19) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) ds_dj19))) (= (apply$35$$35$0 (as Binomial.size Int) ds_dj19) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) ds_dj19))) (>= (apply$35$$35$0 (as Binomial.size Int) ds_dj19) 0) (< 0 (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) ds_dj19))) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) ds_dj19)) (apply$35$$35$0 (as Binomial.size Int) ds_dj19))))
(define-fun b$36$$35$$35$585 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (apply$35$$35$3 (as Binomial.elts Int) h$35$$35$aiOM)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (apply$35$$35$0 (as Binomial.size Int) h$35$$35$aiOM)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) 0) (< 0 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI)) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI))))
(define-fun b$36$$35$$35$1833 () Bool (and (= VV$35$$35$F$35$$35$261 (= lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz)) (= VV$35$$35$F$35$$35$261 lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA)))
(define-fun b$36$$35$$35$1865 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$105) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$105)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$105) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$105) 0)) (= VV$35$$35$F$35$$35$105 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) t1$35$$35$aiOV) lq_anf$36$$35$$35$7205759403792867341$35$$35$djbn)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$105) (smt_map_cup (smt_map_sto (smt_map_def 0) t1$35$$35$aiOV (+ 1 (smt_map_sel (smt_map_def 0) t1$35$$35$aiOV))) (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867341$35$$35$djbn))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$105) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t1$35$$35$aiOV) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867341$35$$35$djbn))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$105) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t1$35$$35$aiOV) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867341$35$$35$djbn))) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$105) (smt_map_sto (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867341$35$$35$djbn) t1$35$$35$aiOV (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867341$35$$35$djbn) t1$35$$35$aiOV)))) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$105) t1$35$$35$aiOV) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$105) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867341$35$$35$djbn))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$105) t1$35$$35$aiOV) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$105) lq_anf$36$$35$$35$7205759403792867341$35$$35$djbn) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$105) lq_anf$36$$35$$35$7205759403792867341$35$$35$djbn) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$105) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$105) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$105) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$105))))
(define-fun b$36$$35$$35$1961 () Bool (and (apply$35$$35$1 (as is$36$GHC.Tuple.$40$$44$$41$ Int) VV$35$$35$F$35$$35$23) (= VV$35$$35$F$35$$35$23 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Tuple.$40$$44$$41$ Int) lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK) lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN)) (= (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$23) lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) VV$35$$35$F$35$$35$23) lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) VV$35$$35$F$35$$35$23) lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN) (= (apply$35$$35$0 (as snd Int) VV$35$$35$F$35$$35$23) lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN) (= (apply$35$$35$0 (as x_Tuple21 Int) VV$35$$35$F$35$$35$23) lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK) (= (apply$35$$35$0 (as x_Tuple22 Int) VV$35$$35$F$35$$35$23) lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN)))
(define-fun b$36$$35$$35$1993 () Bool (= VV$35$$35$F$35$$35$506 (= lq_anf$36$$35$$35$7205759403792867208$35$$35$dj9e lq_anf$36$$35$$35$7205759403792867210$35$$35$dj9g)))
(define-fun b$36$$35$$35$2025 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Node Int) VV$35$$35$F$35$$35$414) (= VV$35$$35$F$35$$35$414 residual$35$$35$aiOG) (= VV$35$$35$F$35$$35$414 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) ds_dj8m) lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y) ts$35$$35$aiOD) lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0)) (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$414) lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y) (= (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$414) ds_dj8m) (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$414) ts$35$$35$aiOD) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$414) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$414)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$414) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$414)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$414))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$414) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) ts$35$$35$aiOD) (smt_map_sto (smt_map_def 0) ds_dj8m (+ 1 (smt_map_sel (smt_map_def 0) ds_dj8m))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ts$35$$35$aiOD)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) ds_dj8m) (- lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ts$35$$35$aiOD)) (- lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0 (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ts$35$$35$aiOD)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$414) lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$414) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$414)) (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$414) lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) VV$35$$35$F$35$$35$414) ds_dj8m) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) VV$35$$35$F$35$$35$414) lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$414) ts$35$$35$aiOD) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) VV$35$$35$F$35$$35$414) lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$414) 0)))
(define-fun b$36$$35$$35$170 () Bool (and (= lq_anf$36$$35$$35$7205759403792867207$35$$35$dj9d ds_dj3J) (= (apply$35$$35$3 (as Binomial.elts Int) lq_anf$36$$35$$35$7205759403792867207$35$$35$dj9d) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867207$35$$35$dj9d)))))
(define-fun b$36$$35$$35$202 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) 0)) (= lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l ds_dj3t) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l))))
(define-fun b$36$$35$$35$234 () Bool (and (= lq_anf$36$$35$$35$7205759403792867226$35$$35$dj9w (apply$35$$35$0 (as Binomial.rank Int) t$35$$35$aiNT)) (= lq_anf$36$$35$$35$7205759403792867226$35$$35$dj9w (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aiNT)) (>= lq_anf$36$$35$$35$7205759403792867226$35$$35$dj9w 0)))
(define-fun b$36$$35$$35$266 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Heap Int) lq_anf$36$$35$$35$7205759403792867243$35$$35$dj9N) (= lq_anf$36$$35$$35$7205759403792867243$35$$35$dj9N ds_dj58) (= lq_anf$36$$35$$35$7205759403792867243$35$$35$dj9N (apply$35$$35$0 (as Binomial.Heap Int) ts$35$$35$aiO1)) (= (apply$35$$35$3 (as Binomial.elts Int) lq_anf$36$$35$$35$7205759403792867243$35$$35$dj9N) (apply$35$$35$3 (as Binomial.treeListElts Int) ts$35$$35$aiO1)) (= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867243$35$$35$dj9N) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiO1)) (= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867243$35$$35$dj9N) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867243$35$$35$dj9N))) (= (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867243$35$$35$dj9N) ts$35$$35$aiO1) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Heap$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867243$35$$35$dj9N) ts$35$$35$aiO1) (>= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867243$35$$35$dj9N) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867243$35$$35$dj9N)) (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867243$35$$35$dj9N))))
(define-fun b$36$$35$$35$298 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) 0)) (= (smt_map_cup (smt_map_sto (smt_map_def 0) (apply$35$$35$0 (as Binomial.root Int) residual$35$$35$aiOG) (+ 1 (smt_map_sel (smt_map_def 0) (apply$35$$35$0 (as Binomial.root Int) residual$35$$35$aiOG)))) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1)) (apply$35$$35$3 (as Binomial.treeElts Int) residual$35$$35$aiOG)) (= (+ 1 (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1)) (apply$35$$35$0 (as Binomial.treeSize Int) residual$35$$35$aiOG)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1))))
(define-fun b$36$$35$$35$1322 () Bool (and (= VV$35$$35$10248 t$39$$35$$35$aiUT) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10248) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10248)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10248) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10248)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10248))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10248) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10248)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10248) 0)))
(define-fun b$36$$35$$35$330 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) 0)) (= lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8 ds_dj1J) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) 0) (< 0 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8))))
(define-fun b$36$$35$$35$394 () Bool (= lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq 1))
(define-fun b$36$$35$$35$1418 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10747) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$10747) 0)) (= VV$35$$35$10747 ts$35$$35$aiOD) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10747) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$10747) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$10747) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10747))))
(define-fun b$36$$35$$35$490 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) t1$35$$35$aiOV) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t1$35$$35$aiOV)) (apply$35$$35$0 (as Binomial.root Int) t1$35$$35$aiOV) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t1$35$$35$aiOV)) (apply$35$$35$0 (as Binomial.root Int) t1$35$$35$aiOV))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) t1$35$$35$aiOV) (apply$35$$35$0 (as Binomial.rank Int) t1$35$$35$aiOV)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) t1$35$$35$aiOV) 0)))
(define-fun b$36$$35$$35$1514 () Bool (and (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$1629) (apply$35$$35$0 (as Binomial.rank Int) lq_tmp$36$x$35$$35$1629)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$1629) 0)))
(define-fun b$36$$35$$35$1546 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$11361) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$11361)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$11361) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$11361)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$11361))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$11361) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$11361)) (> (- (apply$35$$35$0 (as len Int) ds_dj30) 1) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$11361)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$11361) 0)))
(define-fun b$36$$35$$35$554 () Bool (and (= lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC ds_dj19) (= (apply$35$$35$3 (as Binomial.elts Int) lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC))) (= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC))) (>= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC) 0) (< 0 (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC))) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC)) (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC))))
(define-fun b$36$$35$$35$586 () Bool (and (= (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as fst Int) ds_dj8u)) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as snd Int) ds_dj8u))) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI)) (= (+ (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as fst Int) ds_dj8u)) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as snd Int) ds_dj8u))) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI))))
(define-fun b$36$$35$$35$1834 () Bool (and (apply$35$$35$1 (as is$36$GHC.Tuple.$40$$44$$41$ Int) VV$35$$35$F$35$$35$293) (= VV$35$$35$F$35$$35$293 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Tuple.$40$$44$$41$ Int) t$35$$35$aiOu) lq_anf$36$$35$$35$7205759403792867274$35$$35$djai)) (= (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$293) t$35$$35$aiOu) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) VV$35$$35$F$35$$35$293) t$35$$35$aiOu) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) VV$35$$35$F$35$$35$293) lq_anf$36$$35$$35$7205759403792867274$35$$35$djai) (= (apply$35$$35$0 (as snd Int) VV$35$$35$F$35$$35$293) lq_anf$36$$35$$35$7205759403792867274$35$$35$djai) (= (apply$35$$35$0 (as x_Tuple21 Int) VV$35$$35$F$35$$35$293) t$35$$35$aiOu) (= (apply$35$$35$0 (as x_Tuple22 Int) VV$35$$35$F$35$$35$293) lq_anf$36$$35$$35$7205759403792867274$35$$35$djai)))
(define-fun b$36$$35$$35$1898 () Bool (and (= VV$35$$35$F$35$$35$462 lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G) (= VV$35$$35$F$35$$35$462 (- ds_dj4L lq_anf$36$$35$$35$7205759403792867235$35$$35$dj9F))))
(define-fun b$36$$35$$35$1962 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$87) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$87)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$87) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$87) 0)) (= VV$35$$35$F$35$$35$87 (as GHC.Types.$91$$93$ Int)) (= VV$35$$35$F$35$$35$87 lq_anf$36$$35$$35$7205759403792867350$35$$35$djbw) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$87) (smt_map_def 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$87) (smt_map_def 0)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$87) 0) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$87) (smt_map_def 0)) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$87) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$87) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$87) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$87) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$87))))
(define-fun b$36$$35$$35$2026 () Bool (and (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$478) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$478)) (> (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$1471) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$478)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$478) 0)))
(define-fun b$36$$35$$35$43 () Bool (= GHC.Types.True GHC.Types.True))
(define-fun b$36$$35$$35$1067 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$8873) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$8873)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$8873) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$8873) 0)) (= VV$35$$35$8873 (as GHC.Types.$91$$93$ Int)) (= VV$35$$35$8873 lq_anf$36$$35$$35$7205759403792867321$35$$35$djb3) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$8873) (smt_map_def 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$8873) (smt_map_def 0)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$8873) 0) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$8873) (smt_map_def 0)) (= (apply$35$$35$0 (as len Int) VV$35$$35$8873) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$8873) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$8873) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$8873) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$8873))))
(define-fun b$36$$35$$35$171 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOk) 0) (= (apply$35$$35$0 (as len Int) ts$35$$35$aiOk) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOk) 0) (>= (apply$35$$35$0 (as len Int) ts$35$$35$aiOk) 0) (<= (apply$35$$35$0 (as len Int) ts$35$$35$aiOk) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOk))))
(define-fun b$36$$35$$35$203 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) ds_dj3u) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) ds_dj3u)) (apply$35$$35$0 (as Binomial.root Int) ds_dj3u) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) ds_dj3u)) (apply$35$$35$0 (as Binomial.root Int) ds_dj3u))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) ds_dj3u) (apply$35$$35$0 (as Binomial.rank Int) ds_dj3u)) (> (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aiNY) (apply$35$$35$0 (as Binomial.treeRank Int) ds_dj3u)) (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) (apply$35$$35$0 (as Binomial.treeRank Int) ds_dj3u)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) ds_dj3u) 0)))
(define-fun b$36$$35$$35$235 () Bool (= lq_anf$36$$35$$35$7205759403792867227$35$$35$dj9x 1))
(define-fun b$36$$35$$35$1323 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10253) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$10253) 0)) (= VV$35$$35$10253 ds_dj2p) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10253) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$10253) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$10253) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10253))))
(define-fun b$36$$35$$35$331 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOu) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$35$$35$aiOu)) (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aiOu) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$35$$35$aiOu)) (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aiOu))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aiOu) (apply$35$$35$0 (as Binomial.rank Int) t$35$$35$aiOu)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aiOu) 0)))
(define-fun b$36$$35$$35$363 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867272$35$$35$djag) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867272$35$$35$djag)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867272$35$$35$djag) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867272$35$$35$djag) 0)) (= lq_anf$36$$35$$35$7205759403792867272$35$$35$djag (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) ts$39$$35$$35$aiUV)) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867272$35$$35$djag) (smt_map_cup (smt_map_sto (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf (+ 1 (smt_map_sel (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf))) (apply$35$$35$3 (as Binomial.listElts Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867272$35$$35$djag) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (apply$35$$35$3 (as Binomial.treeListElts Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867272$35$$35$djag) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867272$35$$35$djag) (smt_map_sto (apply$35$$35$3 (as fromList Int) ts$39$$35$$35$aiUV) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ts$39$$35$$35$aiUV) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf)))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792867272$35$$35$djag) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867272$35$$35$djag) (+ 1 (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867272$35$$35$djag) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867272$35$$35$djag) ts$39$$35$$35$aiUV) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792867272$35$$35$djag) ts$39$$35$$35$aiUV) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867272$35$$35$djag) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867272$35$$35$djag) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867272$35$$35$djag) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867272$35$$35$djag))))
(define-fun b$36$$35$$35$395 () Bool (= lq_anf$36$$35$$35$7205759403792867283$35$$35$djar lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq))
(define-fun b$36$$35$$35$1419 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10755) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10755)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10755) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10755)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10755))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10755) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10755)) (> ds_dj8n (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10755)) (> (apply$35$$35$0 (as Binomial.treeRank Int) ds_dj8q) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10755)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10755) 0)))
(define-fun b$36$$35$$35$427 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOn) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$35$$35$aiOn)) (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aiOn) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$35$$35$aiOn)) (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aiOn))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aiOn) (apply$35$$35$0 (as Binomial.rank Int) t$35$$35$aiOn)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aiOn) 0)))
(define-fun b$36$$35$$35$491 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$39$$35$$35$aiOW) 0) (= (apply$35$$35$0 (as len Int) ts1$39$$35$$35$aiOW) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$39$$35$$35$aiOW) 0) (>= (apply$35$$35$0 (as len Int) ts1$39$$35$$35$aiOW) 0) (<= (apply$35$$35$0 (as len Int) ts1$39$$35$$35$aiOW) (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$39$$35$$35$aiOW))))
(define-fun b$36$$35$$35$1547 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_tmp$36$x$35$$35$1062) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$1062)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$1062) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$1062)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$1062))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$1062) (apply$35$$35$0 (as Binomial.rank Int) lq_tmp$36$x$35$$35$1062)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$1062) 0)))
(define-fun b$36$$35$$35$555 () Bool (and (= lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC ds_dj19) (= (apply$35$$35$3 (as Binomial.elts Int) lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC))) (= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC))) (>= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC) 0) (< 0 (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC))) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC)) (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC))))
(define-fun b$36$$35$$35$587 () Bool (and (= (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as fst Int) ds_dj8u)) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as snd Int) ds_dj8u))) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI)) (= (+ (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as fst Int) ds_dj8u)) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as snd Int) ds_dj8u))) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI))))
(define-fun b$36$$35$$35$779 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7341) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$7341) 0)) (= VV$35$$35$7341 ts1$35$$35$aiOP) (= (smt_map_cup (smt_map_sto (smt_map_def 0) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ) (+ 1 (smt_map_sel (smt_map_def 0) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ)))) (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$7341)) (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ)) (= (+ 1 (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7341)) (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7341) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$7341) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$7341) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7341))))
(define-fun b$36$$35$$35$1803 () Bool (and (= VV$35$$35$F$35$$35$417 lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0) (= VV$35$$35$F$35$$35$417 (- ds_dj8p lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z))))
(define-fun b$36$$35$$35$1835 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$357) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$357)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$357) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$357) 0)) (= VV$35$$35$F$35$$35$357 (as GHC.Types.$91$$93$ Int)) (= VV$35$$35$F$35$$35$357 lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$357) (smt_map_def 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$357) (smt_map_def 0)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$357) 0) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$357) (smt_map_def 0)) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$357) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$357) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$357) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$357) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$357))))
(define-fun b$36$$35$$35$1867 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$489) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$489)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$489) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$489)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$489))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$489) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$489)) (> (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$1062) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$489)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$489) 0)))
(define-fun b$36$$35$$35$1899 () Bool (and (= VV$35$$35$F$35$$35$494 t$35$$35$aiNY) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$494) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$494)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$494) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$494)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$494))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$494) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$494)) (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$494)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$494) 0)))
(define-fun b$36$$35$$35$1931 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$435) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$435)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$435) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$435) 0)) (= VV$35$$35$F$35$$35$435 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$435) (smt_map_def 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$435) (smt_map_def 0)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$435) 0) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$435) (smt_map_def 0)) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$435) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$435) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$435) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$435) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$435))))
(define-fun b$36$$35$$35$1963 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$151) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$151) 0)) (= VV$35$$35$F$35$$35$151 ts1$35$$35$aiOS) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$151) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$151) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$151) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$151))))
(define-fun b$36$$35$$35$2027 () Bool (and (= (= VV$35$$35$F$35$$35$510 0) (= (apply$35$$35$0 (as len Int) ts$35$$35$aiOk) 0)) (= VV$35$$35$F$35$$35$510 (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOk)) (>= VV$35$$35$F$35$$35$510 0) (<= (apply$35$$35$0 (as len Int) ts$35$$35$aiOk) VV$35$$35$F$35$$35$510)))
(define-fun b$36$$35$$35$172 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Heap Int) lq_anf$36$$35$$35$7205759403792867207$35$$35$dj9d) (= lq_anf$36$$35$$35$7205759403792867207$35$$35$dj9d ds_dj3J) (= lq_anf$36$$35$$35$7205759403792867207$35$$35$dj9d (apply$35$$35$0 (as Binomial.Heap Int) ts$35$$35$aiOk)) (= (apply$35$$35$3 (as Binomial.elts Int) lq_anf$36$$35$$35$7205759403792867207$35$$35$dj9d) (apply$35$$35$3 (as Binomial.treeListElts Int) ts$35$$35$aiOk)) (= (apply$35$$35$3 (as Binomial.elts Int) lq_anf$36$$35$$35$7205759403792867207$35$$35$dj9d) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867207$35$$35$dj9d))) (= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867207$35$$35$dj9d) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOk)) (= (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867207$35$$35$dj9d) ts$35$$35$aiOk) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Heap$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867207$35$$35$dj9d) ts$35$$35$aiOk)))
(define-fun b$36$$35$$35$1196 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9560) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$9560) 0)) (= VV$35$$35$9560 ts1$35$$35$aiOb) (= (apply$35$$35$0 (as len Int) VV$35$$35$9560) r1$35$$35$aiOa) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9560) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$9560) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$9560) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9560))))
(define-fun b$36$$35$$35$204 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj3v) 0) (= (apply$35$$35$0 (as len Int) ds_dj3v) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj3v) 0) (>= (apply$35$$35$0 (as len Int) ds_dj3v) 0) (<= (apply$35$$35$0 (as len Int) ds_dj3v) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj3v))))
(define-fun b$36$$35$$35$236 () Bool (= lq_anf$36$$35$$35$7205759403792867228$35$$35$dj9y lq_anf$36$$35$$35$7205759403792867227$35$$35$dj9x))
(define-fun b$36$$35$$35$1292 () Bool (and (= VV$35$$35$10092 lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= VV$35$$35$10092 t$39$$35$$35$aiUT) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10092) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10092)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10092) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10092)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10092))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10092) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10092)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10092) 0)))
(define-fun b$36$$35$$35$300 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2) 0)) (= lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) t$35$$35$aiOF) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1)) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2) (smt_map_cup (smt_map_sto (smt_map_def 0) t$35$$35$aiOF (+ 1 (smt_map_sel (smt_map_def 0) t$35$$35$aiOF))) (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOF) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOF) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1))) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2) (smt_map_sto (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) t$35$$35$aiOF (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) t$35$$35$aiOF)))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2) t$35$$35$aiOF) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2) t$35$$35$aiOF) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2))))
(define-fun b$36$$35$$35$1324 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10261) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10261)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10261) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10261)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10261))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10261) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10261)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10261) 0)))
(define-fun b$36$$35$$35$332 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj2p) 0) (= (apply$35$$35$0 (as len Int) ds_dj2p) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj2p) 0) (>= (apply$35$$35$0 (as len Int) ds_dj2p) 0) (<= (apply$35$$35$0 (as len Int) ds_dj2p) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj2p))))
(define-fun b$36$$35$$35$396 () Bool (= lq_anf$36$$35$$35$7205759403792867284$35$$35$djas (+ r2$35$$35$aiOf lq_anf$36$$35$$35$7205759403792867283$35$$35$djar)))
(define-fun b$36$$35$$35$1420 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_tmp$36$x$35$$35$2284) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$2284)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$2284) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$2284)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$2284))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$2284) (apply$35$$35$0 (as Binomial.rank Int) lq_tmp$36$x$35$$35$2284)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$2284) 0)))
(define-fun b$36$$35$$35$428 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj5Q) 0) (= (apply$35$$35$0 (as len Int) ds_dj5Q) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj5Q) 0) (>= (apply$35$$35$0 (as len Int) ds_dj5Q) 0) (<= (apply$35$$35$0 (as len Int) ds_dj5Q) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj5Q))))
(define-fun b$36$$35$$35$492 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) 0)) (= lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9 ts1$35$$35$aiOS) (= lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) t1$35$$35$aiOV) ts1$39$$35$$35$aiOW)) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) (smt_map_cup (smt_map_sto (smt_map_def 0) t1$35$$35$aiOV (+ 1 (smt_map_sel (smt_map_def 0) t1$35$$35$aiOV))) (apply$35$$35$3 (as Binomial.listElts Int) ts1$39$$35$$35$aiOW))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t1$35$$35$aiOV) (apply$35$$35$3 (as Binomial.treeListElts Int) ts1$39$$35$$35$aiOW))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t1$35$$35$aiOV) (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$39$$35$$35$aiOW))) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) (smt_map_sto (apply$35$$35$3 (as fromList Int) ts1$39$$35$$35$aiOW) t1$35$$35$aiOV (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ts1$39$$35$$35$aiOW) t1$35$$35$aiOV)))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) t1$35$$35$aiOV) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) (+ 1 (apply$35$$35$0 (as len Int) ts1$39$$35$$35$aiOW))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) t1$35$$35$aiOV) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) ts1$39$$35$$35$aiOW) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) ts1$39$$35$$35$aiOW) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867327$35$$35$djb9))))
(define-fun b$36$$35$$35$524 () Bool (and (= (apply$35$$35$3 (as Binomial.elts Int) ds_dj7z) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) ds_dj7z))) (= (apply$35$$35$0 (as Binomial.size Int) ds_dj7z) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) ds_dj7z))) (>= (apply$35$$35$0 (as Binomial.size Int) ds_dj7z) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) ds_dj7z)) (apply$35$$35$0 (as Binomial.size Int) ds_dj7z))))
(define-fun b$36$$35$$35$556 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOz) 0) (= (apply$35$$35$0 (as len Int) ts$35$$35$aiOz) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOz) 0) (>= (apply$35$$35$0 (as len Int) ts$35$$35$aiOz) 0) (<= (apply$35$$35$0 (as len Int) ts$35$$35$aiOz) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOz))))
(define-fun b$36$$35$$35$588 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aj09) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$35$$35$aj09)) (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aj09) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$35$$35$aj09)) (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aj09))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aj09) (apply$35$$35$0 (as Binomial.rank Int) t$35$$35$aj09)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aj09) 0)))
(define-fun b$36$$35$$35$780 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$7349) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7349)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7349) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7349)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7349))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7349) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$7349)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7349) 0)))
(define-fun b$36$$35$$35$1868 () Bool (= VV$35$$35$F$35$$35$521 lq_anf$36$$35$$35$7205759403792867204$35$$35$dj9a))
(define-fun b$36$$35$$35$1900 () Bool (and (= VV$35$$35$F$35$$35$47 h$35$$35$aiOM) (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$F$35$$35$47) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$47))) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$47) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$47))) (>= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$47) 0) (< 0 (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$47))) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$47)) (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$47))))
(define-fun b$36$$35$$35$1932 () Bool (and (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$467) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$467)) (> (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$1629) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$467)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$467) 0)))
(define-fun b$36$$35$$35$1996 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$283) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$283)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$283) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$283)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$283))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$283) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$283)) (> r2$35$$35$aiOf (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$283)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$283) 0)))
(define-fun b$36$$35$$35$1069 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_tmp$36$x$35$$35$4621) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$4621)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$4621) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$4621)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$4621))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$4621) (apply$35$$35$0 (as Binomial.rank Int) lq_tmp$36$x$35$$35$4621)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$4621) 0)))
(define-fun b$36$$35$$35$1197 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$9568) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$9568)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$9568) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$9568)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$9568))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9568) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$9568)) (> r1$35$$35$aiOa (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9568)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9568) 0)))
(define-fun b$36$$35$$35$205 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) 0)) (= lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l ds_dj3t) (= lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_dj3u) ds_dj3v)) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) (smt_map_cup (smt_map_sto (smt_map_def 0) ds_dj3u (+ 1 (smt_map_sel (smt_map_def 0) ds_dj3u))) (apply$35$$35$3 (as Binomial.listElts Int) ds_dj3v))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) ds_dj3u) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj3v))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) (+ (apply$35$$35$0 (as Binomial.treeSize Int) ds_dj3u) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj3v))) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) (smt_map_sto (apply$35$$35$3 (as fromList Int) ds_dj3v) ds_dj3u (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ds_dj3v) ds_dj3u)))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) ds_dj3u) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) (+ 1 (apply$35$$35$0 (as len Int) ds_dj3v))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) ds_dj3u) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) ds_dj3v) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) ds_dj3v) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l))))
(define-fun b$36$$35$$35$237 () Bool (= lq_anf$36$$35$$35$7205759403792867229$35$$35$dj9z (- ds_dj4J lq_anf$36$$35$$35$7205759403792867228$35$$35$dj9y)))
(define-fun b$36$$35$$35$269 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) ds_dj7T) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) ds_dj7T)) (apply$35$$35$0 (as Binomial.root Int) ds_dj7T) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) ds_dj7T)) (apply$35$$35$0 (as Binomial.root Int) ds_dj7T))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) ds_dj7T) (apply$35$$35$0 (as Binomial.rank Int) ds_dj7T)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) ds_dj7T) 0)))
(define-fun b$36$$35$$35$333 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) 0)) (= lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8 ds_dj1J) (= lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) t$35$$35$aiOu) ds_dj2p)) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (smt_map_cup (smt_map_sto (smt_map_def 0) t$35$$35$aiOu (+ 1 (smt_map_sel (smt_map_def 0) t$35$$35$aiOu))) (apply$35$$35$3 (as Binomial.listElts Int) ds_dj2p))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOu) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj2p))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOu) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj2p))) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (smt_map_sto (apply$35$$35$3 (as fromList Int) ds_dj2p) t$35$$35$aiOu (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ds_dj2p) t$35$$35$aiOu)))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) t$35$$35$aiOu) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (+ 1 (apply$35$$35$0 (as len Int) ds_dj2p))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) t$35$$35$aiOu) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) ds_dj2p) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) ds_dj2p) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) 0) (< 0 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8))))
(define-fun b$36$$35$$35$365 () Bool (and (= lq_anf$36$$35$$35$7205759403792867270$35$$35$djae (< lq_anf$36$$35$$35$7205759403792867267$35$$35$djab lq_anf$36$$35$$35$7205759403792867268$35$$35$djac)) (= lq_anf$36$$35$$35$7205759403792867270$35$$35$djae lq_anf$36$$35$$35$7205759403792867269$35$$35$djad)))
(define-fun b$36$$35$$35$397 () Bool (and (= lq_anf$36$$35$$35$7205759403792867285$35$$35$djat lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) 0)))
(define-fun b$36$$35$$35$429 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) 0)) (= lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO ds_dj5Q) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO))))
(define-fun b$36$$35$$35$461 () Bool (and (= (apply$35$$35$3 (as Binomial.elts Int) ds_dj6s) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) ds_dj6s))) (= (apply$35$$35$0 (as Binomial.size Int) ds_dj6s) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) ds_dj6s))) (>= (apply$35$$35$0 (as Binomial.size Int) ds_dj6s) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) ds_dj6s)) (apply$35$$35$0 (as Binomial.size Int) ds_dj6s))))
(define-fun b$36$$35$$35$493 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) 0)) (= lq_anf$36$$35$$35$7205759403792867328$35$$35$djba ds_dj6F) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba))))
(define-fun b$36$$35$$35$525 () Bool (and (= (apply$35$$35$3 (as Binomial.elts Int) ds_dj7A) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) ds_dj7A))) (= (apply$35$$35$0 (as Binomial.size Int) ds_dj7A) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) ds_dj7A))) (>= (apply$35$$35$0 (as Binomial.size Int) ds_dj7A) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) ds_dj7A)) (apply$35$$35$0 (as Binomial.size Int) ds_dj7A))))
(define-fun b$36$$35$$35$1549 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11372) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$11372) 0)) (= VV$35$$35$11372 ds_dj30) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11372) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$11372) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$11372) 1) (<= (apply$35$$35$0 (as len Int) VV$35$$35$11372) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11372))))
(define-fun b$36$$35$$35$557 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Heap Int) lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC) (= lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC ds_dj19) (= lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC (apply$35$$35$0 (as Binomial.Heap Int) ts$35$$35$aiOz)) (= (apply$35$$35$3 (as Binomial.elts Int) lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC) (apply$35$$35$3 (as Binomial.treeListElts Int) ts$35$$35$aiOz)) (= (apply$35$$35$3 (as Binomial.elts Int) lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC))) (= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOz)) (= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC))) (= (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC) ts$35$$35$aiOz) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Heap$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC) ts$35$$35$aiOz) (>= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC) 0) (< 0 (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC))) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC)) (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867356$35$$35$djbC))))
(define-fun b$36$$35$$35$589 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$35$$35$aj0b) 0) (= (apply$35$$35$0 (as len Int) ts2$35$$35$aj0b) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$35$$35$aj0b) 0) (>= (apply$35$$35$0 (as len Int) ts2$35$$35$aj0b) 0) (<= (apply$35$$35$0 (as len Int) ts2$35$$35$aj0b) (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$35$$35$aj0b))))
(define-fun b$36$$35$$35$1805 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$66) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$66) 0)) (= VV$35$$35$F$35$$35$66 acc$35$$35$aiOI) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$66) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$66) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$66) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$66))))
(define-fun b$36$$35$$35$1837 () Bool (<= ds_dj8m VV$35$$35$F$35$$35$421))
(define-fun b$36$$35$$35$1869 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Heap Int) VV$35$$35$F$35$$35$74) (= VV$35$$35$F$35$$35$74 (apply$35$$35$0 (as Binomial.Heap Int) lq_anf$36$$35$$35$7205759403792867355$35$$35$djbB)) (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$F$35$$35$74) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867355$35$$35$djbB)) (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$F$35$$35$74) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$74))) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$74) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867355$35$$35$djbB)) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$74) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$74))) (= (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$74) lq_anf$36$$35$$35$7205759403792867355$35$$35$djbB) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Heap$35$$35$1 Int) VV$35$$35$F$35$$35$74) lq_anf$36$$35$$35$7205759403792867355$35$$35$djbB) (>= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$74) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$74)) (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$74))))
(define-fun b$36$$35$$35$1901 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$431) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$431) 0)) (= VV$35$$35$F$35$$35$431 ds_dj8o) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$431) ds_dj8n) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$431) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$431) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$431) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$431))))
(define-fun b$36$$35$$35$1933 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$499) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$499) 0)) (= VV$35$$35$F$35$$35$499 ts$35$$35$aiNX) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$499) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$499) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$499) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$499))))
(define-fun b$36$$35$$35$1965 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$247) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$247)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$247) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$247)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$247))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$247) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$247)) (> (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$3872) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$247)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$247) 0)))
(define-fun b$36$$35$$35$174 () Bool (and (= (apply$35$$35$3 (as Binomial.elts Int) h$35$$35$aiOl) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) h$35$$35$aiOl))) (= (apply$35$$35$0 (as Binomial.size Int) h$35$$35$aiOl) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) h$35$$35$aiOl))) (>= (apply$35$$35$0 (as Binomial.size Int) h$35$$35$aiOl) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) h$35$$35$aiOl)) (apply$35$$35$0 (as Binomial.size Int) h$35$$35$aiOl))))
(define-fun b$36$$35$$35$1198 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_tmp$36$x$35$$35$3872) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$3872)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$3872) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$3872)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$3872))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$3872) (apply$35$$35$0 (as Binomial.rank Int) lq_tmp$36$x$35$$35$3872)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$3872) 0)))
(define-fun b$36$$35$$35$206 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m) 0)) (= lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m (apply$35$$35$0 (as Binomial.rankOfTailDecreases Int) ds_dj30)) (= lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_dj30)) (= lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m (apply$35$$35$0 (as tail Int) ds_dj30)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m))))
(define-fun b$36$$35$$35$1230 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9710) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$9710) 0)) (= VV$35$$35$9710 ts2$35$$35$aiOg) (= (apply$35$$35$0 (as len Int) VV$35$$35$9710) r2$35$$35$aiOf) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9710) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$9710) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$9710) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9710))))
(define-fun b$36$$35$$35$238 () Bool (= lq_anf$36$$35$$35$7205759403792867230$35$$35$dj9A (= lq_anf$36$$35$$35$7205759403792867226$35$$35$dj9w lq_anf$36$$35$$35$7205759403792867229$35$$35$dj9z)))
(define-fun b$36$$35$$35$270 () Bool (and (= lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O ds_dj7T) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) 0)))
(define-fun b$36$$35$$35$1294 () Bool (and (apply$35$$35$1 (as is$36$GHC.Tuple.$40$$44$$41$ Int) VV$35$$35$10102) (= VV$35$$35$10102 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Tuple.$40$$44$$41$ Int) t$39$$35$$35$aiUT) lq_anf$36$$35$$35$7205759403792867272$35$$35$djag)) (= (apply$35$$35$0 (as fst Int) VV$35$$35$10102) t$39$$35$$35$aiUT) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) VV$35$$35$10102) t$39$$35$$35$aiUT) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) VV$35$$35$10102) lq_anf$36$$35$$35$7205759403792867272$35$$35$djag) (= (apply$35$$35$0 (as snd Int) VV$35$$35$10102) lq_anf$36$$35$$35$7205759403792867272$35$$35$djag) (= (apply$35$$35$0 (as x_Tuple21 Int) VV$35$$35$10102) t$39$$35$$35$aiUT) (= (apply$35$$35$0 (as x_Tuple22 Int) VV$35$$35$10102) lq_anf$36$$35$$35$7205759403792867272$35$$35$djag)))
(define-fun b$36$$35$$35$334 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) 0)) (= lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa ds_dj2p) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa))))
(define-fun b$36$$35$$35$1358 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Node Int) VV$35$$35$10439) (= VV$35$$35$10439 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x$35$$35$aiO4) r$35$$35$aiO5) ts$35$$35$aiO6) sz$35$$35$aiO7)) (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10439) r$35$$35$aiO5) (= (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10439) x$35$$35$aiO4) (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10439) ts$35$$35$aiO6) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10439) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10439)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10439) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10439)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10439))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10439) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) ts$35$$35$aiO6) (smt_map_sto (smt_map_def 0) x$35$$35$aiO4 (+ 1 (smt_map_sel (smt_map_def 0) x$35$$35$aiO4))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ts$35$$35$aiO6)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x$35$$35$aiO4) (- r$35$$35$aiO5 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ts$35$$35$aiO6)) (- sz$35$$35$aiO7 (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ts$35$$35$aiO6)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10439) r$35$$35$aiO5) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10439) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10439)) (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$10439) sz$35$$35$aiO7) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) VV$35$$35$10439) x$35$$35$aiO4) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) VV$35$$35$10439) r$35$$35$aiO5) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$10439) ts$35$$35$aiO6) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) VV$35$$35$10439) sz$35$$35$aiO7) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10439) 0)))
(define-fun b$36$$35$$35$366 () Bool (and lq_anf$36$$35$$35$7205759403792867270$35$$35$djae (= lq_anf$36$$35$$35$7205759403792867270$35$$35$djae (< lq_anf$36$$35$$35$7205759403792867267$35$$35$djab lq_anf$36$$35$$35$7205759403792867268$35$$35$djac)) (= lq_anf$36$$35$$35$7205759403792867270$35$$35$djae lq_anf$36$$35$$35$7205759403792867269$35$$35$djad)))
(define-fun b$36$$35$$35$430 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) 0)) (= lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO ds_dj5Q) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO))))
(define-fun b$36$$35$$35$462 () Bool (and (= lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0 ds_dj6s) (= (apply$35$$35$3 (as Binomial.elts Int) lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0))) (= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0))) (>= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0)) (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0))))
(define-fun b$36$$35$$35$494 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) 0)) (= lq_anf$36$$35$$35$7205759403792867328$35$$35$djba ds_dj6F) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba))))
(define-fun b$36$$35$$35$526 () Bool (and (= lq_anf$36$$35$$35$7205759403792867344$35$$35$djbq ds_dj7z) (= (apply$35$$35$3 (as Binomial.elts Int) lq_anf$36$$35$$35$7205759403792867344$35$$35$djbq) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867344$35$$35$djbq))) (= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867344$35$$35$djbq) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867344$35$$35$djbq))) (>= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867344$35$$35$djbq) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867344$35$$35$djbq)) (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867344$35$$35$djbq))))
(define-fun b$36$$35$$35$1550 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$11380) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$11380)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$11380) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$11380)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$11380))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$11380) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$11380)) (> (apply$35$$35$0 (as len Int) VV$35$$35$11372) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$11380)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$11380) 0)))
(define-fun b$36$$35$$35$558 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) 0)) (= lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD ts$35$$35$aiOz) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD))))
(define-fun b$36$$35$$35$590 () Bool (and (apply$35$$35$1 (as is$36$GHC.Tuple.$40$$44$$41$ Int) ds_dj8u) (= ds_dj8u (apply$35$$35$0 (apply$35$$35$0 (as GHC.Tuple.$40$$44$$41$ Int) t$35$$35$aj09) ts2$35$$35$aj0b)) (= (apply$35$$35$0 (as fst Int) ds_dj8u) t$35$$35$aj09) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) ds_dj8u) t$35$$35$aj09) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) ds_dj8u) ts2$35$$35$aj0b) (= (apply$35$$35$0 (as snd Int) ds_dj8u) ts2$35$$35$aj0b) (= (apply$35$$35$0 (as x_Tuple21 Int) ds_dj8u) t$35$$35$aj09) (= (apply$35$$35$0 (as x_Tuple22 Int) ds_dj8u) ts2$35$$35$aj0b) (= (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as fst Int) ds_dj8u)) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as snd Int) ds_dj8u))) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI)) (= (+ (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as fst Int) ds_dj8u)) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as snd Int) ds_dj8u))) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI))))
(define-fun b$36$$35$$35$1838 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$485) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$485) 0)) (= VV$35$$35$F$35$$35$485 lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m) (= VV$35$$35$F$35$$35$485 (apply$35$$35$0 (as Binomial.rankOfTailDecreases Int) ds_dj30)) (= VV$35$$35$F$35$$35$485 (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_dj30)) (= VV$35$$35$F$35$$35$485 (apply$35$$35$0 (as tail Int) ds_dj30)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$485) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$485) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$485) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$485))))
(define-fun b$36$$35$$35$1870 () Bool (and (= VV$35$$35$F$35$$35$234 lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= VV$35$$35$F$35$$35$234 (+ sz1$35$$35$aiOc sz2$35$$35$aiOh))))
(define-fun b$36$$35$$35$1902 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$463) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$463) 0)) (= VV$35$$35$F$35$$35$463 ts$35$$35$aiNR) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$463) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$463) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$463) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$463))))
(define-fun b$36$$35$$35$1934 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$116) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$116)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$116) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$116) 0)) (= VV$35$$35$F$35$$35$116 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) t2$35$$35$aiOY) lq_anf$36$$35$$35$7205759403792867340$35$$35$djbm)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$116) (smt_map_cup (smt_map_sto (smt_map_def 0) t2$35$$35$aiOY (+ 1 (smt_map_sel (smt_map_def 0) t2$35$$35$aiOY))) (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867340$35$$35$djbm))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$116) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t2$35$$35$aiOY) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867340$35$$35$djbm))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$116) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t2$35$$35$aiOY) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867340$35$$35$djbm))) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$116) (smt_map_sto (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867340$35$$35$djbm) t2$35$$35$aiOY (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867340$35$$35$djbm) t2$35$$35$aiOY)))) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$116) t2$35$$35$aiOY) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$116) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867340$35$$35$djbm))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$116) t2$35$$35$aiOY) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$116) lq_anf$36$$35$$35$7205759403792867340$35$$35$djbm) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$116) lq_anf$36$$35$$35$7205759403792867340$35$$35$djbm) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$116) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$116) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$116) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$116))))
(define-fun b$36$$35$$35$2030 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$159) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$159)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$159) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$159) 0)) (= VV$35$$35$F$35$$35$159 (as GHC.Types.$91$$93$ Int)) (= VV$35$$35$F$35$$35$159 lq_anf$36$$35$$35$7205759403792867321$35$$35$djb3) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$159) (smt_map_def 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$159) (smt_map_def 0)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$159) 0) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$159) (smt_map_def 0)) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$159) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$159) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$159) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$159) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$159))))
(define-fun b$36$$35$$35$47 () Bool (= GHC.Types.False GHC.Types.False))
(define-fun b$36$$35$$35$175 () Bool (and (= lq_anf$36$$35$$35$7205759403792867208$35$$35$dj9e (apply$35$$35$0 (as Binomial.size Int) h$35$$35$aiOl)) (= lq_anf$36$$35$$35$7205759403792867208$35$$35$dj9e (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) h$35$$35$aiOl))) (>= lq_anf$36$$35$$35$7205759403792867208$35$$35$dj9e 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) h$35$$35$aiOl)) lq_anf$36$$35$$35$7205759403792867208$35$$35$dj9e)))
(define-fun b$36$$35$$35$207 () Bool (and (= lq_anf$36$$35$$35$7205759403792867217$35$$35$dj9n (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m)) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867217$35$$35$dj9n) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867217$35$$35$dj9n)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867217$35$$35$dj9n) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867217$35$$35$dj9n)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867217$35$$35$dj9n))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867217$35$$35$dj9n) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867217$35$$35$dj9n)) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867217$35$$35$dj9n) (- (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m) 1)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867217$35$$35$dj9n) 0)))
(define-fun b$36$$35$$35$1231 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$9718) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$9718)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$9718) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$9718)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$9718))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9718) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$9718)) (> r2$35$$35$aiOf (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9718)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9718) 0)))
(define-fun b$36$$35$$35$271 () Bool (and (= lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O ds_dj7T) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) 0)))
(define-fun b$36$$35$$35$1327 () Bool (and (apply$35$$35$1 (as is$36$GHC.Tuple.$40$$44$$41$ Int) VV$35$$35$10272) (= VV$35$$35$10272 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Tuple.$40$$44$$41$ Int) t$35$$35$aiOu) lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj)) (= (apply$35$$35$0 (as fst Int) VV$35$$35$10272) t$35$$35$aiOu) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) VV$35$$35$10272) t$35$$35$aiOu) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) VV$35$$35$10272) lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj) (= (apply$35$$35$0 (as snd Int) VV$35$$35$10272) lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj) (= (apply$35$$35$0 (as x_Tuple21 Int) VV$35$$35$10272) t$35$$35$aiOu) (= (apply$35$$35$0 (as x_Tuple22 Int) VV$35$$35$10272) lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj)))
(define-fun b$36$$35$$35$335 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) 0)) (= lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa ds_dj2p) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa))))
(define-fun b$36$$35$$35$367 () Bool (and (= lq_anf$36$$35$$35$7205759403792867273$35$$35$djah t$39$$35$$35$aiUT) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) 0)))
(define-fun b$36$$35$$35$399 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) 0)) (= lq_anf$36$$35$$35$7205759403792867286$35$$35$djau (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) ts2$35$$35$aiOg)) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (smt_map_cup (smt_map_sto (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat (+ 1 (smt_map_sel (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat))) (apply$35$$35$3 (as Binomial.listElts Int) ts2$35$$35$aiOg))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (apply$35$$35$3 (as Binomial.treeListElts Int) ts2$35$$35$aiOg))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$35$$35$aiOg))) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (smt_map_sto (apply$35$$35$3 (as fromList Int) ts2$35$$35$aiOg) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ts2$35$$35$aiOg) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat)))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (+ 1 (apply$35$$35$0 (as len Int) ts2$35$$35$aiOg))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) ts2$35$$35$aiOg) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) ts2$35$$35$aiOg) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau))))
(define-fun b$36$$35$$35$431 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) 0)) (= lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO ds_dj5Q) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) (smt_map_def 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) (smt_map_def 0)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) 0) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) (smt_map_def 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO))))
(define-fun b$36$$35$$35$463 () Bool (and (= lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0 ds_dj6s) (= (apply$35$$35$3 (as Binomial.elts Int) lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0))) (= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0))) (>= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0)) (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0))))
(define-fun b$36$$35$$35$495 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) 0)) (= lq_anf$36$$35$$35$7205759403792867328$35$$35$djba (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792867328$35$$35$djba ds_dj6F) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) (smt_map_def 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) (smt_map_def 0)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) 0) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) (smt_map_def 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba))))
(define-fun b$36$$35$$35$527 () Bool (and (= lq_anf$36$$35$$35$7205759403792867344$35$$35$djbq ds_dj7z) (= (apply$35$$35$3 (as Binomial.elts Int) lq_anf$36$$35$$35$7205759403792867344$35$$35$djbq) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867344$35$$35$djbq))) (= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867344$35$$35$djbq) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867344$35$$35$djbq))) (>= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867344$35$$35$djbq) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867344$35$$35$djbq)) (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867344$35$$35$djbq))))
(define-fun b$36$$35$$35$1551 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_tmp$36$x$35$$35$1226) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$1226)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$1226) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$1226)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$1226))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$1226) (apply$35$$35$0 (as Binomial.rank Int) lq_tmp$36$x$35$$35$1226)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$1226) 0)))
(define-fun b$36$$35$$35$559 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) 0)) (= lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD ts$35$$35$aiOz) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD))))
(define-fun b$36$$35$$35$1839 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$38) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$38) 0)) (= VV$35$$35$F$35$$35$38 ts2$35$$35$aj0b) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$38) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$38) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$38) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$38))))
(define-fun b$36$$35$$35$1903 () Bool (and (= VV$35$$35$F$35$$35$495 t$35$$35$aiNY) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$495) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$495)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$495) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$495)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$495))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$495) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$495)) (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$495)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$495) 0)))
(define-fun b$36$$35$$35$1935 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$148) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$148) 0)) (= VV$35$$35$F$35$$35$148 ds_dj6F) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$148) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$148) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$148) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$148))))
(define-fun b$36$$35$$35$1999 () Bool (<= x$35$$35$aiO4 VV$35$$35$F$35$$35$379))
(define-fun b$36$$35$$35$2031 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Node Int) VV$35$$35$F$35$$35$255) (= VV$35$$35$F$35$$35$255 new$35$$35$aiOj) (= VV$35$$35$F$35$$35$255 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x2$35$$35$aiOe) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) lq_anf$36$$35$$35$7205759403792867287$35$$35$djav)) (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$255) x2$35$$35$aiOe) (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$255) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$255)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$255) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$255)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$255))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$255) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (smt_map_sto (smt_map_def 0) x2$35$$35$aiOe (+ 1 (smt_map_sel (smt_map_def 0) x2$35$$35$aiOe))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x2$35$$35$aiOe) (- lq_anf$36$$35$$35$7205759403792867284$35$$35$djas 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau)) (- lq_anf$36$$35$$35$7205759403792867287$35$$35$djav (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$255) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$255)) (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) VV$35$$35$F$35$$35$255) x2$35$$35$aiOe) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$255) 0)))
(define-fun b$36$$35$$35$144 () Bool ds_dj46)
(define-fun b$36$$35$$35$176 () Bool (= lq_anf$36$$35$$35$7205759403792867209$35$$35$dj9f 0))
(define-fun b$36$$35$$35$1200 () Bool (and (= VV$35$$35$9579 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= VV$35$$35$9579 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$9579) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$9579)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$9579) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$9579)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$9579))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9579) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$9579)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9579) 0)))
(define-fun b$36$$35$$35$208 () Bool (and (= lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o lq_anf$36$$35$$35$7205759403792867217$35$$35$dj9n) (= lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m)) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o)) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o) (- (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m) 1)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o) 0)))
(define-fun b$36$$35$$35$1232 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_tmp$36$x$35$$35$3575) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$3575)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$3575) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$3575)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$3575))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$3575) (apply$35$$35$0 (as Binomial.rank Int) lq_tmp$36$x$35$$35$3575)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$3575) 0)))
(define-fun b$36$$35$$35$240 () Bool (= lq_anf$36$$35$$35$7205759403792867232$35$$35$dj9C 1))
(define-fun b$36$$35$$35$336 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) 0)) (= lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa ds_dj2p) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (smt_map_def 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (smt_map_def 0)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) 0) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (smt_map_def 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa))))
(define-fun b$36$$35$$35$1360 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10447) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$10447) 0)) (= VV$35$$35$10447 ts$35$$35$aiO6) (= (apply$35$$35$0 (as len Int) VV$35$$35$10447) r$35$$35$aiO5) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10447) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$10447) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$10447) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10447))))
(define-fun b$36$$35$$35$400 () Bool (= lq_anf$36$$35$$35$7205759403792867287$35$$35$djav (+ sz1$35$$35$aiOc sz2$35$$35$aiOh)))
(define-fun b$36$$35$$35$464 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOt) 0) (= (apply$35$$35$0 (as len Int) ts$35$$35$aiOt) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOt) 0) (>= (apply$35$$35$0 (as len Int) ts$35$$35$aiOt) 0) (<= (apply$35$$35$0 (as len Int) ts$35$$35$aiOt) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOt))))
(define-fun b$36$$35$$35$496 () Bool (= lq_anf$36$$35$$35$7205759403792867329$35$$35$djbb lit$36$$47$home$47$jamie$47$Documents$47$Master$47$MasterThesis$47$master$45$thesis$45$project$47$lh$45$thesis$47$src$47$Binomial.hs$58$$40$225$44$1$41$$45$$40$230$44$63$41$$124$function$32$merge$39$))
(define-fun b$36$$35$$35$528 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$35$$35$aiOQ) 0) (= (apply$35$$35$0 (as len Int) ts1$35$$35$aiOQ) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$35$$35$aiOQ) 0) (>= (apply$35$$35$0 (as len Int) ts1$35$$35$aiOQ) 0) (<= (apply$35$$35$0 (as len Int) ts1$35$$35$aiOQ) (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$35$$35$aiOQ))))
(define-fun b$36$$35$$35$560 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) 0)) (= lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD ts$35$$35$aiOz) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) (smt_map_def 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) (smt_map_def 0)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) 0) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) (smt_map_def 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD))))
(define-fun b$36$$35$$35$592 () Bool (and (= (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as fst Int) ds_dj8u)) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as snd Int) ds_dj8u))) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI)) (= (+ (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as fst Int) ds_dj8u)) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as snd Int) ds_dj8u))) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI))))
(define-fun b$36$$35$$35$784 () Bool (and (= VV$35$$35$7365 lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ) (= VV$35$$35$7365 t$35$$35$aj09) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$7365) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7365)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7365) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7365)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7365))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7365) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$7365)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7365) 0)))
(define-fun b$36$$35$$35$1808 () Bool (and (apply$35$$35$1 (as is$36$GHC.Tuple.$40$$44$$41$ Int) VV$35$$35$F$35$$35$354) (= VV$35$$35$F$35$$35$354 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Tuple.$40$$44$$41$ Int) t$35$$35$aiOu) lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj)) (= (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$354) t$35$$35$aiOu) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) VV$35$$35$F$35$$35$354) t$35$$35$aiOu) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) VV$35$$35$F$35$$35$354) lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj) (= (apply$35$$35$0 (as snd Int) VV$35$$35$F$35$$35$354) lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj) (= (apply$35$$35$0 (as x_Tuple21 Int) VV$35$$35$F$35$$35$354) t$35$$35$aiOu) (= (apply$35$$35$0 (as x_Tuple22 Int) VV$35$$35$F$35$$35$354) lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj)))
(define-fun b$36$$35$$35$1872 () Bool (and (= VV$35$$35$F$35$$35$458 t$35$$35$aiNT) (= VV$35$$35$F$35$$35$458 (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ds_dj4K)) (= VV$35$$35$F$35$$35$458 (apply$35$$35$0 (as head Int) ds_dj4K)) (= VV$35$$35$F$35$$35$458 (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_dj4K)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) ds_dj4K) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) ds_dj4K))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$458) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$458)) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$458) (- (apply$35$$35$0 (as len Int) ds_dj4K) 1)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$458) 0)))
(define-fun b$36$$35$$35$1936 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$244) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$244)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$244) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$244)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$244))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$244) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$244)) (> r1$35$$35$aiOa (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$244)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$244) 0)))
(define-fun b$36$$35$$35$1968 () Bool (and (= VV$35$$35$F$35$$35$375 sz$35$$35$aiO7) (= VV$35$$35$F$35$$35$375 (+ 1 (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiO6))) (>= VV$35$$35$F$35$$35$375 1)))
(define-fun b$36$$35$$35$177 () Bool (= lq_anf$36$$35$$35$7205759403792867210$35$$35$dj9g lq_anf$36$$35$$35$7205759403792867209$35$$35$dj9f))
(define-fun b$36$$35$$35$1201 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Node Int) VV$35$$35$9584) (= VV$35$$35$9584 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= VV$35$$35$9584 t2$35$$35$aiOd) (= VV$35$$35$9584 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x2$35$$35$aiOe) r2$35$$35$aiOf) ts2$35$$35$aiOg) sz2$35$$35$aiOh)) (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$9584) r2$35$$35$aiOf) (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$9584) (apply$35$$35$0 (as Binomial.rank Int) t1$35$$35$aiO8)) (= (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$9584) x2$35$$35$aiOe) (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$9584) ts2$35$$35$aiOg) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$9584) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$9584)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$9584) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$9584)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$9584))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$9584) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) ts2$35$$35$aiOg) (smt_map_sto (smt_map_def 0) x2$35$$35$aiOe (+ 1 (smt_map_sel (smt_map_def 0) x2$35$$35$aiOe))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ts2$35$$35$aiOg)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x2$35$$35$aiOe) (- r2$35$$35$aiOf 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ts2$35$$35$aiOg)) (- sz2$35$$35$aiOh (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ts2$35$$35$aiOg)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9584) r2$35$$35$aiOf) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9584) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$9584)) (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$9584) sz2$35$$35$aiOh) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) VV$35$$35$9584) x2$35$$35$aiOe) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) VV$35$$35$9584) r2$35$$35$aiOf) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$9584) ts2$35$$35$aiOg) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) VV$35$$35$9584) sz2$35$$35$aiOh) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9584) 0)))
(define-fun b$36$$35$$35$209 () Bool (and (= lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o lq_anf$36$$35$$35$7205759403792867217$35$$35$dj9n) (= lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m)) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o)) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o) (- (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m) 1)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o) 0)))
(define-fun b$36$$35$$35$241 () Bool (= lq_anf$36$$35$$35$7205759403792867233$35$$35$dj9D lq_anf$36$$35$$35$7205759403792867232$35$$35$dj9C))
(define-fun b$36$$35$$35$273 () Bool (>= ds_dj8n 0))
(define-fun b$36$$35$$35$1361 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10455) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10455)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10455) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10455)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10455))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10455) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10455)) (> r$35$$35$aiO5 (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10455)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10455) 0)))
(define-fun b$36$$35$$35$369 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867274$35$$35$djai) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867274$35$$35$djai)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867274$35$$35$djai) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867274$35$$35$djai) 0)) (= lq_anf$36$$35$$35$7205759403792867274$35$$35$djai (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) ts$39$$35$$35$aiUV)) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867274$35$$35$djai) (smt_map_cup (smt_map_sto (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah (+ 1 (smt_map_sel (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah))) (apply$35$$35$3 (as Binomial.listElts Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867274$35$$35$djai) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (apply$35$$35$3 (as Binomial.treeListElts Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867274$35$$35$djai) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867274$35$$35$djai) (smt_map_sto (apply$35$$35$3 (as fromList Int) ts$39$$35$$35$aiUV) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ts$39$$35$$35$aiUV) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah)))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792867274$35$$35$djai) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867274$35$$35$djai) (+ 1 (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867274$35$$35$djai) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867274$35$$35$djai) ts$39$$35$$35$aiUV) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792867274$35$$35$djai) ts$39$$35$$35$aiUV) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867274$35$$35$djai) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867274$35$$35$djai) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867274$35$$35$djai) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867274$35$$35$djai))))
(define-fun b$36$$35$$35$401 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Node Int) new$35$$35$aiOj) (= new$35$$35$aiOj (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x2$35$$35$aiOe) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) lq_anf$36$$35$$35$7205759403792867287$35$$35$djav)) (= (apply$35$$35$0 (as Binomial.rank Int) new$35$$35$aiOj) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= (apply$35$$35$0 (as Binomial.root Int) new$35$$35$aiOj) x2$35$$35$aiOe) (= (apply$35$$35$0 (as Binomial.subtrees Int) new$35$$35$aiOj) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= (apply$35$$35$3 (as Binomial.treeElts Int) new$35$$35$aiOj) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) new$35$$35$aiOj)) (apply$35$$35$0 (as Binomial.root Int) new$35$$35$aiOj) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) new$35$$35$aiOj)) (apply$35$$35$0 (as Binomial.root Int) new$35$$35$aiOj))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) new$35$$35$aiOj) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (smt_map_sto (smt_map_def 0) x2$35$$35$aiOe (+ 1 (smt_map_sel (smt_map_def 0) x2$35$$35$aiOe))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x2$35$$35$aiOe) (- lq_anf$36$$35$$35$7205759403792867284$35$$35$djas 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau)) (- lq_anf$36$$35$$35$7205759403792867287$35$$35$djav (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) new$35$$35$aiOj) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= (apply$35$$35$0 (as Binomial.treeRank Int) new$35$$35$aiOj) (apply$35$$35$0 (as Binomial.rank Int) new$35$$35$aiOj)) (= (apply$35$$35$0 (as Binomial.treeSize Int) new$35$$35$aiOj) lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) new$35$$35$aiOj) x2$35$$35$aiOe) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) new$35$$35$aiOj) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) new$35$$35$aiOj) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) new$35$$35$aiOj) lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (>= (apply$35$$35$0 (as Binomial.treeRank Int) new$35$$35$aiOj) 0)))
(define-fun b$36$$35$$35$433 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP) 0)) (= lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP) (smt_map_def 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP) (smt_map_def 0)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP) 0) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP) (smt_map_def 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP))))
(define-fun b$36$$35$$35$465 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Heap Int) lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0) (= lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0 ds_dj6s) (= lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0 (apply$35$$35$0 (as Binomial.Heap Int) ts$35$$35$aiOt)) (= (apply$35$$35$3 (as Binomial.elts Int) lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0) (apply$35$$35$3 (as Binomial.treeListElts Int) ts$35$$35$aiOt)) (= (apply$35$$35$3 (as Binomial.elts Int) lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0))) (= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOt)) (= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0))) (= (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0) ts$35$$35$aiOt) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Heap$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0) ts$35$$35$aiOt) (>= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0)) (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867318$35$$35$djb0))))
(define-fun b$36$$35$$35$497 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) 0)) (= lq_anf$36$$35$$35$7205759403792867328$35$$35$djba ds_dj6F) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba))))
(define-fun b$36$$35$$35$529 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Heap Int) lq_anf$36$$35$$35$7205759403792867344$35$$35$djbq) (= lq_anf$36$$35$$35$7205759403792867344$35$$35$djbq ds_dj7z) (= lq_anf$36$$35$$35$7205759403792867344$35$$35$djbq (apply$35$$35$0 (as Binomial.Heap Int) ts1$35$$35$aiOQ)) (= (apply$35$$35$3 (as Binomial.elts Int) lq_anf$36$$35$$35$7205759403792867344$35$$35$djbq) (apply$35$$35$3 (as Binomial.treeListElts Int) ts1$35$$35$aiOQ)) (= (apply$35$$35$3 (as Binomial.elts Int) lq_anf$36$$35$$35$7205759403792867344$35$$35$djbq) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867344$35$$35$djbq))) (= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867344$35$$35$djbq) (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$35$$35$aiOQ)) (= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867344$35$$35$djbq) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867344$35$$35$djbq))) (= (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867344$35$$35$djbq) ts1$35$$35$aiOQ) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Heap$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867344$35$$35$djbq) ts1$35$$35$aiOQ) (>= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867344$35$$35$djbq) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867344$35$$35$djbq)) (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867344$35$$35$djbq))))
(define-fun b$36$$35$$35$561 () Bool (= lq_anf$36$$35$$35$7205759403792867358$35$$35$djbE lit$36$$47$home$47$jamie$47$Documents$47$Master$47$MasterThesis$47$master$45$thesis$45$project$47$lh$45$thesis$47$src$47$Binomial.hs$58$185$58$1$45$35$124$function$32$unheapNonempty))
(define-fun b$36$$35$$35$593 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aj09) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$35$$35$aj09)) (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aj09) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$35$$35$aj09)) (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aj09))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aj09) (apply$35$$35$0 (as Binomial.rank Int) t$35$$35$aj09)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aj09) 0)))
(define-fun b$36$$35$$35$1809 () Bool (and (= VV$35$$35$F$35$$35$418 lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0) (= VV$35$$35$F$35$$35$418 (- ds_dj8p lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z))))
(define-fun b$36$$35$$35$1841 () Bool (and (= VV$35$$35$F$35$$35$134 t2$35$$35$aiOY) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$134) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$134)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$134) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$134)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$134))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$134) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$134)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$134) 0)))
(define-fun b$36$$35$$35$1873 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$490) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$490) 0)) (= VV$35$$35$F$35$$35$490 ds_dj30) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$490) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$490) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$490) 1) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$490) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$490))))
(define-fun b$36$$35$$35$1905 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$176) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$176)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$176) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$176) 0)) (= VV$35$$35$F$35$$35$176 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) t$39$$35$$35$aiOq) lq_anf$36$$35$$35$7205759403792867317$35$$35$djaZ)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$176) (smt_map_cup (smt_map_sto (smt_map_def 0) t$39$$35$$35$aiOq (+ 1 (smt_map_sel (smt_map_def 0) t$39$$35$$35$aiOq))) (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867317$35$$35$djaZ))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$176) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$39$$35$$35$aiOq) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867317$35$$35$djaZ))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$176) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$39$$35$$35$aiOq) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867317$35$$35$djaZ))) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$176) (smt_map_sto (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867317$35$$35$djaZ) t$39$$35$$35$aiOq (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867317$35$$35$djaZ) t$39$$35$$35$aiOq)))) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$176) t$39$$35$$35$aiOq) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$176) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867317$35$$35$djaZ))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$176) t$39$$35$$35$aiOq) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$176) lq_anf$36$$35$$35$7205759403792867317$35$$35$djaZ) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$176) lq_anf$36$$35$$35$7205759403792867317$35$$35$djaZ) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$176) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$176) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$176) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$176))))
(define-fun b$36$$35$$35$1969 () Bool (and (= VV$35$$35$F$35$$35$471 (= lq_anf$36$$35$$35$7205759403792867226$35$$35$dj9w lq_anf$36$$35$$35$7205759403792867229$35$$35$dj9z)) (= VV$35$$35$F$35$$35$471 lq_anf$36$$35$$35$7205759403792867230$35$$35$dj9A)))
(define-fun b$36$$35$$35$2001 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$475) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$475) 0)) (= VV$35$$35$F$35$$35$475 ds_dj4K) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$475) ds_dj4J) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$475) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$475) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$475) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$475))))
(define-fun b$36$$35$$35$1234 () Bool (and (= VV$35$$35$9729 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= VV$35$$35$9729 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$9729) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$9729)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$9729) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$9729)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$9729))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9729) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$9729)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9729) 0)))
(define-fun b$36$$35$$35$242 () Bool (= lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E (- ds_dj4J lq_anf$36$$35$$35$7205759403792867233$35$$35$dj9D)))
(define-fun b$36$$35$$35$274 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj8o) 0) (= (apply$35$$35$0 (as len Int) ds_dj8o) 0)) (= (apply$35$$35$0 (as len Int) ds_dj8o) ds_dj8n) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj8o) 0) (>= (apply$35$$35$0 (as len Int) ds_dj8o) 0) (<= (apply$35$$35$0 (as len Int) ds_dj8o) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj8o))))
(define-fun b$36$$35$$35$338 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj) 0)) (= lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj) (smt_map_def 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj) (smt_map_def 0)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj) 0) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj) (smt_map_def 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj))))
(define-fun b$36$$35$$35$1362 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_tmp$36$x$35$$35$2652) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$2652)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$2652) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$2652)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$2652))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$2652) (apply$35$$35$0 (as Binomial.rank Int) lq_tmp$36$x$35$$35$2652)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$2652) 0)))
(define-fun b$36$$35$$35$402 () Bool (and (= lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw (apply$35$$35$3 (as Binomial.treeElts Int) new$35$$35$aiOj)) (= lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) new$35$$35$aiOj)) (apply$35$$35$0 (as Binomial.root Int) new$35$$35$aiOj) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) new$35$$35$aiOj)) (apply$35$$35$0 (as Binomial.root Int) new$35$$35$aiOj)))))))
(define-fun b$36$$35$$35$466 () Bool (= lq_anf$36$$35$$35$7205759403792867319$35$$35$djb1 0))
(define-fun b$36$$35$$35$498 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) t2$35$$35$aiOY) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t2$35$$35$aiOY)) (apply$35$$35$0 (as Binomial.root Int) t2$35$$35$aiOY) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t2$35$$35$aiOY)) (apply$35$$35$0 (as Binomial.root Int) t2$35$$35$aiOY))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) t2$35$$35$aiOY) (apply$35$$35$0 (as Binomial.rank Int) t2$35$$35$aiOY)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) t2$35$$35$aiOY) 0)))
(define-fun b$36$$35$$35$530 () Bool (and (= lq_anf$36$$35$$35$7205759403792867345$35$$35$djbr ds_dj7A) (= (apply$35$$35$3 (as Binomial.elts Int) lq_anf$36$$35$$35$7205759403792867345$35$$35$djbr) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867345$35$$35$djbr))) (= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867345$35$$35$djbr) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867345$35$$35$djbr))) (>= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867345$35$$35$djbr) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867345$35$$35$djbr)) (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867345$35$$35$djbr))))
(define-fun b$36$$35$$35$562 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) 0)) (= lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD ts$35$$35$aiOz) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD))))
(define-fun b$36$$35$$35$594 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$35$$35$aj0b) 0) (= (apply$35$$35$0 (as len Int) ts2$35$$35$aj0b) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$35$$35$aj0b) 0) (>= (apply$35$$35$0 (as len Int) ts2$35$$35$aj0b) 0) (<= (apply$35$$35$0 (as len Int) ts2$35$$35$aj0b) (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$35$$35$aj0b))))
(define-fun b$36$$35$$35$786 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7375) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$7375) 0)) (= VV$35$$35$7375 ts2$35$$35$aj0b) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7375) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$7375) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$7375) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7375))))
(define-fun b$36$$35$$35$1842 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$166) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$166)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$166) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$166) 0)) (= VV$35$$35$F$35$$35$166 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) t$35$$35$aiOn) ds_dj5Q)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$166) (smt_map_cup (smt_map_sto (smt_map_def 0) t$35$$35$aiOn (+ 1 (smt_map_sel (smt_map_def 0) t$35$$35$aiOn))) (apply$35$$35$3 (as Binomial.listElts Int) ds_dj5Q))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$166) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOn) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj5Q))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$166) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOn) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj5Q))) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$166) (smt_map_sto (apply$35$$35$3 (as fromList Int) ds_dj5Q) t$35$$35$aiOn (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ds_dj5Q) t$35$$35$aiOn)))) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$166) t$35$$35$aiOn) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$166) (+ 1 (apply$35$$35$0 (as len Int) ds_dj5Q))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$166) t$35$$35$aiOn) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$166) ds_dj5Q) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$166) ds_dj5Q) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$166) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$166) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$166) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$166))))
(define-fun b$36$$35$$35$1874 () Bool (and (= VV$35$$35$F$35$$35$522 r$35$$35$aiNK) (>= VV$35$$35$F$35$$35$522 0)))
(define-fun b$36$$35$$35$2034 () Bool (= VV$35$$35$F$35$$35$383 x$35$$35$aiO4))
(define-fun b$36$$35$$35$147 () Bool (= (apply$35$$35$3 (as Binomial.treeElts Int) ds_dj3Q) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) ds_dj3Q)) (apply$35$$35$0 (as Binomial.root Int) ds_dj3Q) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) ds_dj3Q)) (apply$35$$35$0 (as Binomial.root Int) ds_dj3Q))))))
(define-fun b$36$$35$$35$179 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj2M) 0) (= (apply$35$$35$0 (as len Int) ds_dj2M) 0)) (> (apply$35$$35$0 (as len Int) ds_dj2M) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj2M) 0) (>= (apply$35$$35$0 (as len Int) ds_dj2M) 0) (<= (apply$35$$35$0 (as len Int) ds_dj2M) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj2M))))
(define-fun b$36$$35$$35$211 () Bool (>= lq_anf$36$$35$$35$7205759403792867220$35$$35$dj9q 0))
(define-fun b$36$$35$$35$1235 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Node Int) VV$35$$35$9734) (= VV$35$$35$9734 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= VV$35$$35$9734 t1$35$$35$aiO8) (= VV$35$$35$9734 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x1$35$$35$aiO9) r1$35$$35$aiOa) ts1$35$$35$aiOb) sz1$35$$35$aiOc)) (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$9734) r1$35$$35$aiOa) (= (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$9734) x1$35$$35$aiO9) (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$9734) ts1$35$$35$aiOb) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$9734) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$9734)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$9734) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$9734)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$9734))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$9734) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) ts1$35$$35$aiOb) (smt_map_sto (smt_map_def 0) x1$35$$35$aiO9 (+ 1 (smt_map_sel (smt_map_def 0) x1$35$$35$aiO9))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ts1$35$$35$aiOb)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x1$35$$35$aiO9) (- r1$35$$35$aiOa 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ts1$35$$35$aiOb)) (- sz1$35$$35$aiOc (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ts1$35$$35$aiOb)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9734) r1$35$$35$aiOa) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9734) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$9734)) (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$9734) sz1$35$$35$aiOc) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) VV$35$$35$9734) x1$35$$35$aiO9) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) VV$35$$35$9734) r1$35$$35$aiOa) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$9734) ts1$35$$35$aiOb) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) VV$35$$35$9734) sz1$35$$35$aiOc) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9734) 0)))
(define-fun b$36$$35$$35$243 () Bool (and (= lq_anf$36$$35$$35$7205759403792867235$35$$35$dj9F (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiNT)) (= lq_anf$36$$35$$35$7205759403792867235$35$$35$dj9F (+ 1 (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$35$$35$aiNT)))) (>= lq_anf$36$$35$$35$7205759403792867235$35$$35$dj9F 1)))
(define-fun b$36$$35$$35$275 () Bool (and (= ds_dj8p (+ 1 (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj8o))) (>= ds_dj8p 1)))
(define-fun b$36$$35$$35$403 () Bool (and (= lq_anf$36$$35$$35$7205759403792867289$35$$35$djax (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam)) (= lq_anf$36$$35$$35$7205759403792867289$35$$35$djax (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam)))))))
(define-fun b$36$$35$$35$435 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) 0)) (= lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO ds_dj5Q) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO))))
(define-fun b$36$$35$$35$467 () Bool (= lq_anf$36$$35$$35$7205759403792867320$35$$35$djb2 lq_anf$36$$35$$35$7205759403792867319$35$$35$djb1))
(define-fun b$36$$35$$35$499 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$39$$35$$35$aiOZ) 0) (= (apply$35$$35$0 (as len Int) ts2$39$$35$$35$aiOZ) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$39$$35$$35$aiOZ) 0) (>= (apply$35$$35$0 (as len Int) ts2$39$$35$$35$aiOZ) 0) (<= (apply$35$$35$0 (as len Int) ts2$39$$35$$35$aiOZ) (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$39$$35$$35$aiOZ))))
(define-fun b$36$$35$$35$531 () Bool (and (= lq_anf$36$$35$$35$7205759403792867345$35$$35$djbr ds_dj7A) (= (apply$35$$35$3 (as Binomial.elts Int) lq_anf$36$$35$$35$7205759403792867345$35$$35$djbr) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867345$35$$35$djbr))) (= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867345$35$$35$djbr) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867345$35$$35$djbr))) (>= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867345$35$$35$djbr) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867345$35$$35$djbr)) (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867345$35$$35$djbr))))
(define-fun b$36$$35$$35$563 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) ds_dj1s) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) ds_dj1s)) (apply$35$$35$0 (as Binomial.root Int) ds_dj1s) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) ds_dj1s)) (apply$35$$35$0 (as Binomial.root Int) ds_dj1s))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) ds_dj1s) (apply$35$$35$0 (as Binomial.rank Int) ds_dj1s)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) ds_dj1s) 0)))
(define-fun b$36$$35$$35$595 () Bool (and (apply$35$$35$1 (as is$36$GHC.Tuple.$40$$44$$41$ Int) ds_dj8u) (= ds_dj8u (apply$35$$35$0 (apply$35$$35$0 (as GHC.Tuple.$40$$44$$41$ Int) t$35$$35$aj09) ts2$35$$35$aj0b)) (= (apply$35$$35$0 (as fst Int) ds_dj8u) t$35$$35$aj09) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) ds_dj8u) t$35$$35$aj09) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) ds_dj8u) ts2$35$$35$aj0b) (= (apply$35$$35$0 (as snd Int) ds_dj8u) ts2$35$$35$aj0b) (= (apply$35$$35$0 (as x_Tuple21 Int) ds_dj8u) t$35$$35$aj09) (= (apply$35$$35$0 (as x_Tuple22 Int) ds_dj8u) ts2$35$$35$aj0b) (= (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as fst Int) ds_dj8u)) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as snd Int) ds_dj8u))) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI)) (= (+ (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as fst Int) ds_dj8u)) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as snd Int) ds_dj8u))) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI))))
(define-fun b$36$$35$$35$787 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$7383) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7383)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7383) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7383)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7383))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7383) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$7383)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7383) 0)))
(define-fun b$36$$35$$35$1811 () Bool (and (= VV$35$$35$F$35$$35$482 t$35$$35$aiNY) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$482) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$482)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$482) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$482)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$482))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$482) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$482)) (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$482)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$482) 0)))
(define-fun b$36$$35$$35$1843 () Bool (and (apply$35$$35$1 (as is$36$GHC.Tuple.$40$$44$$41$ Int) VV$35$$35$F$35$$35$294) (= VV$35$$35$F$35$$35$294 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Tuple.$40$$44$$41$ Int) t$35$$35$aiOu) lq_anf$36$$35$$35$7205759403792867274$35$$35$djai)) (= (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$294) t$35$$35$aiOu) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) VV$35$$35$F$35$$35$294) t$35$$35$aiOu) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) VV$35$$35$F$35$$35$294) lq_anf$36$$35$$35$7205759403792867274$35$$35$djai) (= (apply$35$$35$0 (as snd Int) VV$35$$35$F$35$$35$294) lq_anf$36$$35$$35$7205759403792867274$35$$35$djai) (= (apply$35$$35$0 (as x_Tuple21 Int) VV$35$$35$F$35$$35$294) t$35$$35$aiOu) (= (apply$35$$35$0 (as x_Tuple22 Int) VV$35$$35$F$35$$35$294) lq_anf$36$$35$$35$7205759403792867274$35$$35$djai)))
(define-fun b$36$$35$$35$1875 () Bool (and (= VV$35$$35$F$35$$35$43 t$35$$35$aj09) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$43) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$43)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$43) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$43)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$43))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$43) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$43)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$43) 0)))
(define-fun b$36$$35$$35$1907 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$432) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$432)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$432) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$432)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$432))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$432) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$432)) (> ds_dj8n (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$432)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$432) 0)))
(define-fun b$36$$35$$35$1971 () Bool (and (apply$35$$35$1 (as is$36$GHC.Tuple.$40$$44$$41$ Int) VV$35$$35$F$35$$35$24) (= VV$35$$35$F$35$$35$24 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Tuple.$40$$44$$41$ Int) lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK) lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN)) (= (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$24) lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) VV$35$$35$F$35$$35$24) lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) VV$35$$35$F$35$$35$24) lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN) (= (apply$35$$35$0 (as snd Int) VV$35$$35$F$35$$35$24) lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN) (= (apply$35$$35$0 (as x_Tuple21 Int) VV$35$$35$F$35$$35$24) lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK) (= (apply$35$$35$0 (as x_Tuple22 Int) VV$35$$35$F$35$$35$24) lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN)))
(define-fun b$36$$35$$35$2003 () Bool (and (= VV$35$$35$F$35$$35$92 lq_anf$36$$35$$35$7205759403792867349$35$$35$djbv) (= VV$35$$35$F$35$$35$92 lq_anf$36$$35$$35$7205759403792867348$35$$35$djbu)))
(define-fun b$36$$35$$35$2035 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Node Int) VV$35$$35$F$35$$35$415) (= VV$35$$35$F$35$$35$415 residual$35$$35$aiOG) (= VV$35$$35$F$35$$35$415 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) ds_dj8m) lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y) ts$35$$35$aiOD) lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0)) (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$415) lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y) (= (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$415) ds_dj8m) (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$415) ts$35$$35$aiOD) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$415) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$415)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$415) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$415)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$415))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$415) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) ts$35$$35$aiOD) (smt_map_sto (smt_map_def 0) ds_dj8m (+ 1 (smt_map_sel (smt_map_def 0) ds_dj8m))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ts$35$$35$aiOD)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) ds_dj8m) (- lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ts$35$$35$aiOD)) (- lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0 (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ts$35$$35$aiOD)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$415) lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$415) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$415)) (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$415) lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) VV$35$$35$F$35$$35$415) ds_dj8m) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) VV$35$$35$F$35$$35$415) lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$415) ts$35$$35$aiOD) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) VV$35$$35$F$35$$35$415) lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$415) 0)))
(define-fun b$36$$35$$35$148 () Bool (and (= lq_anf$36$$35$$35$7205759403792867202$35$$35$dj98 ds_dj3Q) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867202$35$$35$dj98) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867202$35$$35$dj98)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867202$35$$35$dj98) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867202$35$$35$dj98)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867202$35$$35$dj98)))))))
(define-fun b$36$$35$$35$180 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) 0)) (= lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h ds_dj2M) (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h))))
(define-fun b$36$$35$$35$212 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867221$35$$35$dj9r) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867221$35$$35$dj9r) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867221$35$$35$dj9r) lq_anf$36$$35$$35$7205759403792867220$35$$35$dj9q) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867221$35$$35$dj9r) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867221$35$$35$dj9r) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867221$35$$35$dj9r) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867221$35$$35$dj9r))))
(define-fun b$36$$35$$35$244 () Bool (= lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G (- ds_dj4L lq_anf$36$$35$$35$7205759403792867235$35$$35$dj9F)))
(define-fun b$36$$35$$35$276 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Node Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) (= lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O ds_dj7T) (= lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) ds_dj8m) ds_dj8n) ds_dj8o) ds_dj8p)) (= (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) ds_dj8n) (= (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) ds_dj8m) (= (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) ds_dj8o) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) ds_dj8o) (smt_map_sto (smt_map_def 0) ds_dj8m (+ 1 (smt_map_sel (smt_map_def 0) ds_dj8m))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ds_dj8o)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) ds_dj8m) (- ds_dj8n 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_dj8o)) (- ds_dj8p (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ds_dj8o)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) ds_dj8n) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O)) (= (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) ds_dj8p) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) ds_dj8m) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) ds_dj8n) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) ds_dj8o) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) ds_dj8p) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) 0)))
(define-fun b$36$$35$$35$340 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) 0)) (= lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa ds_dj2p) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa))))
(define-fun b$36$$35$$35$404 () Bool (and (= lq_anf$36$$35$$35$7205759403792867290$35$$35$djay (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan)) (= lq_anf$36$$35$$35$7205759403792867290$35$$35$djay (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan)))))))
(define-fun b$36$$35$$35$436 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) t$39$$35$$35$aiOq) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$39$$35$$35$aiOq)) (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiOq) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$39$$35$$35$aiOq)) (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiOq))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) t$39$$35$$35$aiOq) (apply$35$$35$0 (as Binomial.rank Int) t$39$$35$$35$aiOq)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) t$39$$35$$35$aiOq) 0)))
(define-fun b$36$$35$$35$500 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) 0)) (= lq_anf$36$$35$$35$7205759403792867328$35$$35$djba ds_dj6F) (= lq_anf$36$$35$$35$7205759403792867328$35$$35$djba (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) t2$35$$35$aiOY) ts2$39$$35$$35$aiOZ)) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) (smt_map_cup (smt_map_sto (smt_map_def 0) t2$35$$35$aiOY (+ 1 (smt_map_sel (smt_map_def 0) t2$35$$35$aiOY))) (apply$35$$35$3 (as Binomial.listElts Int) ts2$39$$35$$35$aiOZ))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t2$35$$35$aiOY) (apply$35$$35$3 (as Binomial.treeListElts Int) ts2$39$$35$$35$aiOZ))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t2$35$$35$aiOY) (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$39$$35$$35$aiOZ))) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) (smt_map_sto (apply$35$$35$3 (as fromList Int) ts2$39$$35$$35$aiOZ) t2$35$$35$aiOY (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ts2$39$$35$$35$aiOZ) t2$35$$35$aiOY)))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) t2$35$$35$aiOY) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) (+ 1 (apply$35$$35$0 (as len Int) ts2$39$$35$$35$aiOZ))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) t2$35$$35$aiOY) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) ts2$39$$35$$35$aiOZ) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) ts2$39$$35$$35$aiOZ) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867328$35$$35$djba))))
(define-fun b$36$$35$$35$532 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$35$$35$aiOR) 0) (= (apply$35$$35$0 (as len Int) ts2$35$$35$aiOR) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$35$$35$aiOR) 0) (>= (apply$35$$35$0 (as len Int) ts2$35$$35$aiOR) 0) (<= (apply$35$$35$0 (as len Int) ts2$35$$35$aiOR) (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$35$$35$aiOR))))
(define-fun b$36$$35$$35$564 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj1t) 0) (= (apply$35$$35$0 (as len Int) ds_dj1t) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj1t) 0) (>= (apply$35$$35$0 (as len Int) ds_dj1t) 0) (<= (apply$35$$35$0 (as len Int) ds_dj1t) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj1t))))
(define-fun b$36$$35$$35$1812 () Bool (= VV$35$$35$F$35$$35$514 (+ lq_anf$36$$35$$35$7205759403792867205$35$$35$dj9b lq_anf$36$$35$$35$7205759403792867206$35$$35$dj9c)))
(define-fun b$36$$35$$35$1876 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Heap Int) VV$35$$35$F$35$$35$75) (= VV$35$$35$F$35$$35$75 (apply$35$$35$0 (as Binomial.Heap Int) lq_anf$36$$35$$35$7205759403792867355$35$$35$djbB)) (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$F$35$$35$75) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867355$35$$35$djbB)) (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$F$35$$35$75) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$75))) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$75) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867355$35$$35$djbB)) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$75) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$75))) (= (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$75) lq_anf$36$$35$$35$7205759403792867355$35$$35$djbB) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Heap$35$$35$1 Int) VV$35$$35$F$35$$35$75) lq_anf$36$$35$$35$7205759403792867355$35$$35$djbB) (>= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$75) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$75)) (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$75))))
(define-fun b$36$$35$$35$1908 () Bool (and (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$464) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$464)) (> ds_dj4J (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$464)) (> (apply$35$$35$0 (as Binomial.treeRank Int) ds_dj4M) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$464)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$464) 0)))
(define-fun b$36$$35$$35$1940 () Bool (and (= VV$35$$35$F$35$$35$372 lit$36$$47$home$47$jamie$47$Documents$47$Master$47$MasterThesis$47$master$45$thesis$45$project$47$lh$45$thesis$47$src$47$Binomial.hs$58$$40$175$44$1$41$$45$$40$180$44$36$41$$124$function$32$deleteMin$39$) (= VV$35$$35$F$35$$35$372 lq_anf$36$$35$$35$7205759403792867265$35$$35$dja9)))
(define-fun b$36$$35$$35$2004 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$188) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$188) 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$188) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867316$35$$35$djaY) (apply$35$$35$3 (as Binomial.treeListElts Int) ts$39$$35$$35$aiOr))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$188) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867316$35$$35$djaY) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiOr))) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$188) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$188) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$188) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$188))))
(define-fun b$36$$35$$35$149 () Bool (and (= lq_anf$36$$35$$35$7205759403792867202$35$$35$dj98 ds_dj3Q) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867202$35$$35$dj98) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867202$35$$35$dj98)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867202$35$$35$dj98) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867202$35$$35$dj98)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867202$35$$35$dj98)))))))
(define-fun b$36$$35$$35$181 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) 0)) (= lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h ds_dj2M) (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h))))
(define-fun b$36$$35$$35$213 () Bool (and (= lq_anf$36$$35$$35$7205759403792867222$35$$35$dj9s (+ 1 (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867221$35$$35$dj9r))) (>= lq_anf$36$$35$$35$7205759403792867222$35$$35$dj9s 1)))
(define-fun b$36$$35$$35$245 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Node Int) residual$35$$35$aiNU) (= residual$35$$35$aiNU (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x$35$$35$aiNN) lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E) ts$35$$35$aiNR) lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G)) (= (apply$35$$35$0 (as Binomial.rank Int) residual$35$$35$aiNU) lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E) (= (apply$35$$35$0 (as Binomial.root Int) residual$35$$35$aiNU) x$35$$35$aiNN) (= (apply$35$$35$0 (as Binomial.subtrees Int) residual$35$$35$aiNU) ts$35$$35$aiNR) (= (apply$35$$35$3 (as Binomial.treeElts Int) residual$35$$35$aiNU) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) ts$35$$35$aiNR) (smt_map_sto (smt_map_def 0) x$35$$35$aiNN (+ 1 (smt_map_sel (smt_map_def 0) x$35$$35$aiNN))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ts$35$$35$aiNR)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x$35$$35$aiNN) (- lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ts$35$$35$aiNR)) (- lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ts$35$$35$aiNR)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) residual$35$$35$aiNU) lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E) (= (apply$35$$35$0 (as Binomial.treeRank Int) residual$35$$35$aiNU) (apply$35$$35$0 (as Binomial.rank Int) residual$35$$35$aiNU)) (= (apply$35$$35$0 (as Binomial.treeSize Int) residual$35$$35$aiNU) lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) residual$35$$35$aiNU) x$35$$35$aiNN) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) residual$35$$35$aiNU) lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) residual$35$$35$aiNU) ts$35$$35$aiNR) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) residual$35$$35$aiNU) lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G) (>= (apply$35$$35$0 (as Binomial.treeRank Int) residual$35$$35$aiNU) 0)))
(define-fun b$36$$35$$35$277 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) 0)) (= lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P ds_dj8o) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) ds_dj8n) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P))))
(define-fun b$36$$35$$35$341 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) 0)))
(define-fun b$36$$35$$35$405 () Bool (= lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz (smt_map_cup lq_anf$36$$35$$35$7205759403792867289$35$$35$djax lq_anf$36$$35$$35$7205759403792867290$35$$35$djay)))
(define-fun b$36$$35$$35$437 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiOr) 0) (= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiOr) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiOr) 0) (>= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiOr) 0) (<= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiOr) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiOr))))
(define-fun b$36$$35$$35$469 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867321$35$$35$djb3) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867321$35$$35$djb3)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867321$35$$35$djb3) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867321$35$$35$djb3) 0)) (= lq_anf$36$$35$$35$7205759403792867321$35$$35$djb3 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867321$35$$35$djb3) (smt_map_def 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867321$35$$35$djb3) (smt_map_def 0)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867321$35$$35$djb3) 0) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867321$35$$35$djb3) (smt_map_def 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867321$35$$35$djb3) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867321$35$$35$djb3) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867321$35$$35$djb3) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867321$35$$35$djb3) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867321$35$$35$djb3))))
(define-fun b$36$$35$$35$501 () Bool (and (= lq_anf$36$$35$$35$7205759403792867330$35$$35$djbc (apply$35$$35$0 (as Binomial.rank Int) t1$35$$35$aiOV)) (>= lq_anf$36$$35$$35$7205759403792867330$35$$35$djbc 0)))
(define-fun b$36$$35$$35$533 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Heap Int) lq_anf$36$$35$$35$7205759403792867345$35$$35$djbr) (= lq_anf$36$$35$$35$7205759403792867345$35$$35$djbr ds_dj7A) (= lq_anf$36$$35$$35$7205759403792867345$35$$35$djbr (apply$35$$35$0 (as Binomial.Heap Int) ts2$35$$35$aiOR)) (= (apply$35$$35$3 (as Binomial.elts Int) lq_anf$36$$35$$35$7205759403792867345$35$$35$djbr) (apply$35$$35$3 (as Binomial.treeListElts Int) ts2$35$$35$aiOR)) (= (apply$35$$35$3 (as Binomial.elts Int) lq_anf$36$$35$$35$7205759403792867345$35$$35$djbr) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867345$35$$35$djbr))) (= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867345$35$$35$djbr) (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$35$$35$aiOR)) (= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867345$35$$35$djbr) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867345$35$$35$djbr))) (= (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867345$35$$35$djbr) ts2$35$$35$aiOR) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Heap$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867345$35$$35$djbr) ts2$35$$35$aiOR) (>= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867345$35$$35$djbr) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867345$35$$35$djbr)) (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867345$35$$35$djbr))))
(define-fun b$36$$35$$35$565 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) 0)) (= lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD ts$35$$35$aiOz) (= lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_dj1s) ds_dj1t)) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) (smt_map_cup (smt_map_sto (smt_map_def 0) ds_dj1s (+ 1 (smt_map_sel (smt_map_def 0) ds_dj1s))) (apply$35$$35$3 (as Binomial.listElts Int) ds_dj1t))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) ds_dj1s) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj1t))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) (+ (apply$35$$35$0 (as Binomial.treeSize Int) ds_dj1s) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj1t))) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) (smt_map_sto (apply$35$$35$3 (as fromList Int) ds_dj1t) ds_dj1s (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ds_dj1t) ds_dj1s)))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) ds_dj1s) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) (+ 1 (apply$35$$35$0 (as len Int) ds_dj1t))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) ds_dj1s) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) ds_dj1t) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) ds_dj1t) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD))))
(define-fun b$36$$35$$35$597 () Bool (and (= lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ t$35$$35$aj09) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ) 0)))
(define-fun b$36$$35$$35$1845 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$486) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$486) 0)) (= VV$35$$35$F$35$$35$486 lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m) (= VV$35$$35$F$35$$35$486 (apply$35$$35$0 (as Binomial.rankOfTailDecreases Int) ds_dj30)) (= VV$35$$35$F$35$$35$486 (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_dj30)) (= VV$35$$35$F$35$$35$486 (apply$35$$35$0 (as tail Int) ds_dj30)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$486) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$486) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$486) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$486))))
(define-fun b$36$$35$$35$1877 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$203) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$203)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$203) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$203) 0)) (= VV$35$$35$F$35$$35$203 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) t$35$$35$aiOn) lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$203) (smt_map_cup (smt_map_sto (smt_map_def 0) t$35$$35$aiOn (+ 1 (smt_map_sel (smt_map_def 0) t$35$$35$aiOn))) (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$203) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOn) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$203) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOn) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP))) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$203) (smt_map_sto (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP) t$35$$35$aiOn (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP) t$35$$35$aiOn)))) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$203) t$35$$35$aiOn) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$203) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$203) t$35$$35$aiOn) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$203) lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$203) lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$203) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$203) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$203) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$203))))
(define-fun b$36$$35$$35$1941 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$436) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$436)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$436) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$436) 0)) (= VV$35$$35$F$35$$35$436 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$436) (smt_map_def 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$436) (smt_map_def 0)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$436) 0) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$436) (smt_map_def 0)) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$436) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$436) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$436) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$436) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$436))))
(define-fun b$36$$35$$35$1973 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Heap Int) VV$35$$35$F$35$$35$152) (= VV$35$$35$F$35$$35$152 (apply$35$$35$0 (as Binomial.Heap Int) lq_anf$36$$35$$35$7205759403792867325$35$$35$djb7)) (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$F$35$$35$152) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867325$35$$35$djb7)) (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$F$35$$35$152) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$152))) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$152) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867325$35$$35$djb7)) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$152) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$152))) (= (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$152) lq_anf$36$$35$$35$7205759403792867325$35$$35$djb7) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Heap$35$$35$1 Int) VV$35$$35$F$35$$35$152) lq_anf$36$$35$$35$7205759403792867325$35$$35$djb7) (>= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$152) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$152)) (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$152))))
(define-fun b$36$$35$$35$2037 () Bool (= VV$35$$35$F$35$$35$479 (smt_map_sto lq_anf$36$$35$$35$7205759403792867225$35$$35$dj9v x$35$$35$aiNN (+ 1 (smt_map_sel lq_anf$36$$35$$35$7205759403792867225$35$$35$dj9v x$35$$35$aiNN)))))
(define-fun b$36$$35$$35$182 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) 0)) (= lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h ds_dj2M) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) (smt_map_def 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) (smt_map_def 0)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) 0) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) (smt_map_def 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) 0) (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h))))
(define-fun b$36$$35$$35$214 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Node Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o) (= lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o lq_anf$36$$35$$35$7205759403792867217$35$$35$dj9n) (= lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m)) (= lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) lq_anf$36$$35$$35$7205759403792867219$35$$35$dj9p) lq_anf$36$$35$$35$7205759403792867220$35$$35$dj9q) lq_anf$36$$35$$35$7205759403792867221$35$$35$dj9r) lq_anf$36$$35$$35$7205759403792867222$35$$35$dj9s)) (= (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o) lq_anf$36$$35$$35$7205759403792867220$35$$35$dj9q) (= (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o) lq_anf$36$$35$$35$7205759403792867219$35$$35$dj9p) (= (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o) lq_anf$36$$35$$35$7205759403792867221$35$$35$dj9r) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867221$35$$35$dj9r) (smt_map_sto (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867219$35$$35$dj9p (+ 1 (smt_map_sel (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867219$35$$35$dj9p))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867221$35$$35$dj9r)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) lq_anf$36$$35$$35$7205759403792867219$35$$35$dj9p) (- lq_anf$36$$35$$35$7205759403792867220$35$$35$dj9q 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867221$35$$35$dj9r)) (- lq_anf$36$$35$$35$7205759403792867222$35$$35$dj9s (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867221$35$$35$dj9r)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o) lq_anf$36$$35$$35$7205759403792867220$35$$35$dj9q) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o)) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o) (- (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m) 1)) (= (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o) lq_anf$36$$35$$35$7205759403792867222$35$$35$dj9s) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o) lq_anf$36$$35$$35$7205759403792867219$35$$35$dj9p) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o) lq_anf$36$$35$$35$7205759403792867220$35$$35$dj9q) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o) lq_anf$36$$35$$35$7205759403792867221$35$$35$dj9r) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o) lq_anf$36$$35$$35$7205759403792867222$35$$35$dj9s) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867218$35$$35$dj9o) 0)))
(define-fun b$36$$35$$35$246 () Bool (and (= lq_anf$36$$35$$35$7205759403792867237$35$$35$dj9H (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiNT)) (= lq_anf$36$$35$$35$7205759403792867237$35$$35$dj9H (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$35$$35$aiNT)) (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aiNT) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$35$$35$aiNT)) (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aiNT)))))))
(define-fun b$36$$35$$35$278 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) 0)) (= lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P ds_dj8o) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) ds_dj8n) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P))))
(define-fun b$36$$35$$35$342 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal))))
(define-fun b$36$$35$$35$374 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) t1$35$$35$aiO8) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t1$35$$35$aiO8)) (apply$35$$35$0 (as Binomial.root Int) t1$35$$35$aiO8) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t1$35$$35$aiO8)) (apply$35$$35$0 (as Binomial.root Int) t1$35$$35$aiO8))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) t1$35$$35$aiO8) (apply$35$$35$0 (as Binomial.rank Int) t1$35$$35$aiO8)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) t1$35$$35$aiO8) 0)))
(define-fun b$36$$35$$35$406 () Bool (= lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA (= lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz)))
(define-fun b$36$$35$$35$438 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) 0)) (= lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO ds_dj5Q) (= lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) t$39$$35$$35$aiOq) ts$39$$35$$35$aiOr)) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) (smt_map_cup (smt_map_sto (smt_map_def 0) t$39$$35$$35$aiOq (+ 1 (smt_map_sel (smt_map_def 0) t$39$$35$$35$aiOq))) (apply$35$$35$3 (as Binomial.listElts Int) ts$39$$35$$35$aiOr))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$39$$35$$35$aiOq) (apply$35$$35$3 (as Binomial.treeListElts Int) ts$39$$35$$35$aiOr))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$39$$35$$35$aiOq) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiOr))) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) (smt_map_sto (apply$35$$35$3 (as fromList Int) ts$39$$35$$35$aiOr) t$39$$35$$35$aiOq (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ts$39$$35$$35$aiOr) t$39$$35$$35$aiOq)))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) t$39$$35$$35$aiOq) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) (+ 1 (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiOr))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) t$39$$35$$35$aiOq) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) ts$39$$35$$35$aiOr) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) ts$39$$35$$35$aiOr) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867306$35$$35$djaO))))
(define-fun b$36$$35$$35$470 () Bool (= lq_anf$36$$35$$35$7205759403792867322$35$$35$djb4 1))
(define-fun b$36$$35$$35$502 () Bool (and (= lq_anf$36$$35$$35$7205759403792867331$35$$35$djbd (apply$35$$35$0 (as Binomial.rank Int) t2$35$$35$aiOY)) (>= lq_anf$36$$35$$35$7205759403792867331$35$$35$djbd 0)))
(define-fun b$36$$35$$35$534 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867346$35$$35$djbs) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867346$35$$35$djbs) 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867346$35$$35$djbs) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) ts1$35$$35$aiOQ) (apply$35$$35$3 (as Binomial.treeListElts Int) ts2$35$$35$aiOR))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867346$35$$35$djbs) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$35$$35$aiOQ) (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$35$$35$aiOR))) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867346$35$$35$djbs) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867346$35$$35$djbs) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867346$35$$35$djbs) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867346$35$$35$djbs))))
(define-fun b$36$$35$$35$598 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$35$$35$aiOP) 0) (= (apply$35$$35$0 (as len Int) ts1$35$$35$aiOP) 0)) (= (smt_map_cup (smt_map_sto (smt_map_def 0) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ) (+ 1 (smt_map_sel (smt_map_def 0) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ)))) (apply$35$$35$3 (as Binomial.treeListElts Int) ts1$35$$35$aiOP)) (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ)) (= (+ 1 (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$35$$35$aiOP)) (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$35$$35$aiOP) 0) (>= (apply$35$$35$0 (as len Int) ts1$35$$35$aiOP) 0) (<= (apply$35$$35$0 (as len Int) ts1$35$$35$aiOP) (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$35$$35$aiOP))))
(define-fun b$36$$35$$35$790 () Bool (and (= VV$35$$35$7394 t$35$$35$aj09) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$7394) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7394)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7394) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7394)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7394))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7394) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$7394)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7394) 0)))
(define-fun b$36$$35$$35$1814 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$67) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$67)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$67) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$67) 0)) (= VV$35$$35$F$35$$35$67 lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) (= VV$35$$35$F$35$$35$67 ts$35$$35$aiOz) (= VV$35$$35$F$35$$35$67 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_dj1s) ds_dj1t)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$67) (smt_map_cup (smt_map_sto (smt_map_def 0) ds_dj1s (+ 1 (smt_map_sel (smt_map_def 0) ds_dj1s))) (apply$35$$35$3 (as Binomial.listElts Int) ds_dj1t))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$67) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) ds_dj1s) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj1t))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$67) (+ (apply$35$$35$0 (as Binomial.treeSize Int) ds_dj1s) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj1t))) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$67) (smt_map_sto (apply$35$$35$3 (as fromList Int) ds_dj1t) ds_dj1s (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ds_dj1t) ds_dj1s)))) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$67) ds_dj1s) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$67) (+ 1 (apply$35$$35$0 (as len Int) ds_dj1t))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$67) ds_dj1s) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$67) ds_dj1t) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$67) ds_dj1t) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$67) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$67) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$67) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$67))))
(define-fun b$36$$35$$35$1846 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$39) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$39)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$39) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$39)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$39))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$39) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$39)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$39) 0)))
(define-fun b$36$$35$$35$1878 () Bool (and (= VV$35$$35$F$35$$35$235 lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= VV$35$$35$F$35$$35$235 (+ sz1$35$$35$aiOc sz2$35$$35$aiOh))))
(define-fun b$36$$35$$35$1910 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$49) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$49) 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$49) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) ts$35$$35$aiOH) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867361$35$$35$djbH))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$49) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOH) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867361$35$$35$djbH))) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$49) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$49) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$49) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$49))))
(define-fun b$36$$35$$35$1942 () Bool (and (= VV$35$$35$F$35$$35$468 lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E) (= VV$35$$35$F$35$$35$468 (- ds_dj4J lq_anf$36$$35$$35$7205759403792867233$35$$35$dj9D))))
(define-fun b$36$$35$$35$1974 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Node Int) VV$35$$35$F$35$$35$216) (= VV$35$$35$F$35$$35$216 new$35$$35$aiOi) (= VV$35$$35$F$35$$35$216 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x1$35$$35$aiO9) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH)) (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$216) x1$35$$35$aiO9) (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$216) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$216)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$216) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$216)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$216))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$216) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (smt_map_sto (smt_map_def 0) x1$35$$35$aiO9 (+ 1 (smt_map_sel (smt_map_def 0) x1$35$$35$aiO9))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x1$35$$35$aiO9) (- lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG)) (- lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$216) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$216)) (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) VV$35$$35$F$35$$35$216) x1$35$$35$aiO9) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$216) 0)))
(define-fun b$36$$35$$35$2038 () Bool (and (= (= VV$35$$35$F$35$$35$511 0) (= (apply$35$$35$0 (as len Int) ts$35$$35$aiOk) 0)) (= VV$35$$35$F$35$$35$511 (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOk)) (>= VV$35$$35$F$35$$35$511 0) (<= (apply$35$$35$0 (as len Int) ts$35$$35$aiOk) VV$35$$35$F$35$$35$511)))
(define-fun b$36$$35$$35$151 () Bool (>= r$35$$35$aiNK 0))
(define-fun b$36$$35$$35$183 () Bool (= lq_anf$36$$35$$35$7205759403792867212$35$$35$dj9i lit$36$$47$home$47$jamie$47$Documents$47$Master$47$MasterThesis$47$master$45$thesis$45$project$47$lh$45$thesis$47$src$47$Binomial.hs$58$78$58$1$45$31$124$function$32$rankOfTailDecreases))
(define-fun b$36$$35$$35$247 () Bool (and (= lq_anf$36$$35$$35$7205759403792867238$35$$35$dj9I (apply$35$$35$3 (as Binomial.treeElts Int) residual$35$$35$aiNU)) (= lq_anf$36$$35$$35$7205759403792867238$35$$35$dj9I (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) residual$35$$35$aiNU)) (apply$35$$35$0 (as Binomial.root Int) residual$35$$35$aiNU) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) residual$35$$35$aiNU)) (apply$35$$35$0 (as Binomial.root Int) residual$35$$35$aiNU)))))))
(define-fun b$36$$35$$35$279 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) 0)) (= lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P ds_dj8o) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) (smt_map_def 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) (smt_map_def 0)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) 0) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) (smt_map_def 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) ds_dj8n) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P))))
(define-fun b$36$$35$$35$343 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) 0)) (= lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa ds_dj2p) (= lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal)) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (smt_map_cup (smt_map_sto (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak (+ 1 (smt_map_sel (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak))) (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal))) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (smt_map_sto (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak)))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa))))
(define-fun b$36$$35$$35$375 () Bool (and (= (apply$35$$35$0 (as Binomial.rank Int) t2$35$$35$aiOd) (apply$35$$35$0 (as Binomial.rank Int) t1$35$$35$aiO8)) (= (apply$35$$35$3 (as Binomial.treeElts Int) t2$35$$35$aiOd) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t2$35$$35$aiOd)) (apply$35$$35$0 (as Binomial.root Int) t2$35$$35$aiOd) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t2$35$$35$aiOd)) (apply$35$$35$0 (as Binomial.root Int) t2$35$$35$aiOd))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) t2$35$$35$aiOd) (apply$35$$35$0 (as Binomial.rank Int) t2$35$$35$aiOd)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) t2$35$$35$aiOd) 0)))
(define-fun b$36$$35$$35$439 () Bool (and (= lq_anf$36$$35$$35$7205759403792867308$35$$35$djaQ (apply$35$$35$0 (as Binomial.rank Int) t$35$$35$aiOn)) (>= lq_anf$36$$35$$35$7205759403792867308$35$$35$djaQ 0)))
(define-fun b$36$$35$$35$471 () Bool (= lq_anf$36$$35$$35$7205759403792867323$35$$35$djb5 lq_anf$36$$35$$35$7205759403792867322$35$$35$djb4))
(define-fun b$36$$35$$35$503 () Bool (= lq_anf$36$$35$$35$7205759403792867332$35$$35$djbe (< lq_anf$36$$35$$35$7205759403792867330$35$$35$djbc lq_anf$36$$35$$35$7205759403792867331$35$$35$djbd)))
(define-fun b$36$$35$$35$791 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7399) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$7399) 0)) (= VV$35$$35$7399 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$7399) (apply$35$$35$3 (as Binomial.elts Int) h$35$$35$aiOM)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7399) (apply$35$$35$0 (as Binomial.size Int) h$35$$35$aiOM)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7399) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$7399) 0) (< 0 (apply$35$$35$0 (as len Int) VV$35$$35$7399)) (<= (apply$35$$35$0 (as len Int) VV$35$$35$7399) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7399))))
(define-fun b$36$$35$$35$1815 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Heap Int) VV$35$$35$F$35$$35$99) (= VV$35$$35$F$35$$35$99 (apply$35$$35$0 (as Binomial.Heap Int) lq_anf$36$$35$$35$7205759403792867346$35$$35$djbs)) (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$F$35$$35$99) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867346$35$$35$djbs)) (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$F$35$$35$99) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$99))) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$99) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867346$35$$35$djbs)) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$99) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$99))) (= (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$99) lq_anf$36$$35$$35$7205759403792867346$35$$35$djbs) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Heap$35$$35$1 Int) VV$35$$35$F$35$$35$99) lq_anf$36$$35$$35$7205759403792867346$35$$35$djbs) (>= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$99) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$99)) (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$99))))
(define-fun b$36$$35$$35$1879 () Bool (and (= VV$35$$35$F$35$$35$427 (= lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T)) (= VV$35$$35$F$35$$35$427 lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U)))
(define-fun b$36$$35$$35$1943 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$500) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$500)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$500) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$500)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$500))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$500) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$500)) (> (apply$35$$35$0 (as Binomial.treeRank Int) ds_dj2X) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$500)) (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$500)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$500) 0)))
(define-fun b$36$$35$$35$1975 () Bool (and (= VV$35$$35$F$35$$35$280 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= VV$35$$35$F$35$$35$280 (+ r2$35$$35$aiOf lq_anf$36$$35$$35$7205759403792867283$35$$35$djar))))
(define-fun b$36$$35$$35$2007 () Bool (<= x2$35$$35$aiOe VV$35$$35$F$35$$35$284))
(define-fun b$36$$35$$35$152 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj44) 0) (= (apply$35$$35$0 (as len Int) ds_dj44) 0)) (= (apply$35$$35$0 (as len Int) ds_dj44) r$35$$35$aiNK) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj44) 0) (>= (apply$35$$35$0 (as len Int) ds_dj44) 0) (<= (apply$35$$35$0 (as len Int) ds_dj44) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj44))))
(define-fun b$36$$35$$35$184 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) 0)) (= lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h ds_dj2M) (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h))))
(define-fun b$36$$35$$35$248 () Bool (= lq_anf$36$$35$$35$7205759403792867239$35$$35$dj9J (smt_map_cup lq_anf$36$$35$$35$7205759403792867237$35$$35$dj9H lq_anf$36$$35$$35$7205759403792867238$35$$35$dj9I)))
(define-fun b$36$$35$$35$1272 () Bool (and (apply$35$$35$1 (as is$36$GHC.Tuple.$40$$44$$41$ Int) VV$35$$35$9987) (= VV$35$$35$9987 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Tuple.$40$$44$$41$ Int) t$35$$35$aiOu) lq_anf$36$$35$$35$7205759403792867274$35$$35$djai)) (= (apply$35$$35$0 (as fst Int) VV$35$$35$9987) t$35$$35$aiOu) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) VV$35$$35$9987) t$35$$35$aiOu) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) VV$35$$35$9987) lq_anf$36$$35$$35$7205759403792867274$35$$35$djai) (= (apply$35$$35$0 (as snd Int) VV$35$$35$9987) lq_anf$36$$35$$35$7205759403792867274$35$$35$djai) (= (apply$35$$35$0 (as x_Tuple21 Int) VV$35$$35$9987) t$35$$35$aiOu) (= (apply$35$$35$0 (as x_Tuple22 Int) VV$35$$35$9987) lq_anf$36$$35$$35$7205759403792867274$35$$35$djai)))
(define-fun b$36$$35$$35$344 () Bool (and (= (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as fst Int) ds_dj1U)) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as snd Int) ds_dj1U))) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj2p)) (= (+ (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as fst Int) ds_dj1U)) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as snd Int) ds_dj1U))) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj2p))))
(define-fun b$36$$35$$35$376 () Bool (and (= lq_anf$36$$35$$35$7205759403792867278$35$$35$djam t1$35$$35$aiO8) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) 0)))
(define-fun b$36$$35$$35$408 () Bool (and (= lq_anf$36$$35$$35$7205759403792867281$35$$35$djap (<= x1$35$$35$aiO9 x2$35$$35$aiOe)) (= lq_anf$36$$35$$35$7205759403792867281$35$$35$djap lq_anf$36$$35$$35$7205759403792867280$35$$35$djao)))
(define-fun b$36$$35$$35$440 () Bool (and (= lq_anf$36$$35$$35$7205759403792867309$35$$35$djaR (apply$35$$35$0 (as Binomial.rank Int) t$39$$35$$35$aiOq)) (>= lq_anf$36$$35$$35$7205759403792867309$35$$35$djaR 0)))
(define-fun b$36$$35$$35$472 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Node Int) lq_anf$36$$35$$35$7205759403792867324$35$$35$djb6) (= lq_anf$36$$35$$35$7205759403792867324$35$$35$djb6 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x$35$$35$aiOs) lq_anf$36$$35$$35$7205759403792867320$35$$35$djb2) lq_anf$36$$35$$35$7205759403792867321$35$$35$djb3) lq_anf$36$$35$$35$7205759403792867323$35$$35$djb5)) (= (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867324$35$$35$djb6) lq_anf$36$$35$$35$7205759403792867320$35$$35$djb2) (= (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867324$35$$35$djb6) x$35$$35$aiOs) (= (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867324$35$$35$djb6) lq_anf$36$$35$$35$7205759403792867321$35$$35$djb3) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867324$35$$35$djb6) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867324$35$$35$djb6)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867324$35$$35$djb6) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867324$35$$35$djb6)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867324$35$$35$djb6))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867324$35$$35$djb6) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867321$35$$35$djb3) (smt_map_sto (smt_map_def 0) x$35$$35$aiOs (+ 1 (smt_map_sel (smt_map_def 0) x$35$$35$aiOs))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867321$35$$35$djb3)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x$35$$35$aiOs) (- lq_anf$36$$35$$35$7205759403792867320$35$$35$djb2 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867321$35$$35$djb3)) (- lq_anf$36$$35$$35$7205759403792867323$35$$35$djb5 (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867321$35$$35$djb3)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867324$35$$35$djb6) lq_anf$36$$35$$35$7205759403792867320$35$$35$djb2) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867324$35$$35$djb6) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867324$35$$35$djb6)) (= (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867324$35$$35$djb6) lq_anf$36$$35$$35$7205759403792867323$35$$35$djb5) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867324$35$$35$djb6) x$35$$35$aiOs) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867324$35$$35$djb6) lq_anf$36$$35$$35$7205759403792867320$35$$35$djb2) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) lq_anf$36$$35$$35$7205759403792867324$35$$35$djb6) lq_anf$36$$35$$35$7205759403792867321$35$$35$djb3) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) lq_anf$36$$35$$35$7205759403792867324$35$$35$djb6) lq_anf$36$$35$$35$7205759403792867323$35$$35$djb5) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867324$35$$35$djb6) 0)))
(define-fun b$36$$35$$35$504 () Bool (and (= lq_anf$36$$35$$35$7205759403792867333$35$$35$djbf (< lq_anf$36$$35$$35$7205759403792867330$35$$35$djbc lq_anf$36$$35$$35$7205759403792867331$35$$35$djbd)) (= lq_anf$36$$35$$35$7205759403792867333$35$$35$djbf lq_anf$36$$35$$35$7205759403792867332$35$$35$djbe)))
(define-fun b$36$$35$$35$568 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj0Y) 0) (= (apply$35$$35$0 (as len Int) ds_dj0Y) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj0Y) 0) (>= (apply$35$$35$0 (as len Int) ds_dj0Y) 0) (<= (apply$35$$35$0 (as len Int) ds_dj0Y) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj0Y))))
(define-fun b$36$$35$$35$600 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL) 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL) (apply$35$$35$3 (as Binomial.treeListElts Int) ts1$35$$35$aiOP)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL) (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$35$$35$aiOP)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL))))
(define-fun b$36$$35$$35$792 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$7407) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7407)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7407) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7407)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7407))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7407) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$7407)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7407) 0)))
(define-fun b$36$$35$$35$1848 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$167) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$167)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$167) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$167) 0)) (= VV$35$$35$F$35$$35$167 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) t$35$$35$aiOn) ds_dj5Q)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$167) (smt_map_cup (smt_map_sto (smt_map_def 0) t$35$$35$aiOn (+ 1 (smt_map_sel (smt_map_def 0) t$35$$35$aiOn))) (apply$35$$35$3 (as Binomial.listElts Int) ds_dj5Q))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$167) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOn) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj5Q))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$167) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOn) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj5Q))) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$167) (smt_map_sto (apply$35$$35$3 (as fromList Int) ds_dj5Q) t$35$$35$aiOn (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ds_dj5Q) t$35$$35$aiOn)))) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$167) t$35$$35$aiOn) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$167) (+ 1 (apply$35$$35$0 (as len Int) ds_dj5Q))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$167) t$35$$35$aiOn) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$167) ds_dj5Q) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$167) ds_dj5Q) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$167) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$167) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$167) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$167))))
(define-fun b$36$$35$$35$1880 () Bool (and (= VV$35$$35$F$35$$35$459 t$35$$35$aiNT) (= VV$35$$35$F$35$$35$459 (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ds_dj4K)) (= VV$35$$35$F$35$$35$459 (apply$35$$35$0 (as head Int) ds_dj4K)) (= VV$35$$35$F$35$$35$459 (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_dj4K)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) ds_dj4K) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) ds_dj4K))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$459) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$459)) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$459) (- (apply$35$$35$0 (as len Int) ds_dj4K) 1)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$459) 0)))
(define-fun b$36$$35$$35$1912 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$177) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$177)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$177) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$177) 0)) (= VV$35$$35$F$35$$35$177 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) t$39$$35$$35$aiOq) lq_anf$36$$35$$35$7205759403792867317$35$$35$djaZ)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$177) (smt_map_cup (smt_map_sto (smt_map_def 0) t$39$$35$$35$aiOq (+ 1 (smt_map_sel (smt_map_def 0) t$39$$35$$35$aiOq))) (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867317$35$$35$djaZ))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$177) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$39$$35$$35$aiOq) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867317$35$$35$djaZ))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$177) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$39$$35$$35$aiOq) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867317$35$$35$djaZ))) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$177) (smt_map_sto (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867317$35$$35$djaZ) t$39$$35$$35$aiOq (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867317$35$$35$djaZ) t$39$$35$$35$aiOq)))) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$177) t$39$$35$$35$aiOq) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$177) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867317$35$$35$djaZ))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$177) t$39$$35$$35$aiOq) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$177) lq_anf$36$$35$$35$7205759403792867317$35$$35$djaZ) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$177) lq_anf$36$$35$$35$7205759403792867317$35$$35$djaZ) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$177) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$177) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$177) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$177))))
(define-fun b$36$$35$$35$1944 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$53) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$53) 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$53) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) ts$35$$35$aiOK) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867360$35$$35$djbG))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$53) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOK) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867360$35$$35$djbG))) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$53) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$53) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$53) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$53))))
(define-fun b$36$$35$$35$153 () Bool (and (= ds_dj45 (+ 1 (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj44))) (>= ds_dj45 1)))
(define-fun b$36$$35$$35$185 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) ds_dj2X) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) ds_dj2X)) (apply$35$$35$0 (as Binomial.root Int) ds_dj2X) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) ds_dj2X)) (apply$35$$35$0 (as Binomial.root Int) ds_dj2X))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) ds_dj2X) (apply$35$$35$0 (as Binomial.rank Int) ds_dj2X)) (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) (apply$35$$35$0 (as Binomial.treeRank Int) ds_dj2X)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) ds_dj2X) 0)))
(define-fun b$36$$35$$35$217 () Bool (and (= (apply$35$$35$0 (as Binomial.treeRank Int) ds_dj4a) (apply$35$$35$0 (as Binomial.rank Int) ds_dj4a)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) ds_dj4a) 0)))
(define-fun b$36$$35$$35$281 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) 0)) (= lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P ds_dj8o) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) ds_dj8n) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P))))
(define-fun b$36$$35$$35$1305 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$10164) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$10164)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10164) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$10164) 0)) (= VV$35$$35$10164 lq_anf$36$$35$$35$7205759403792867272$35$$35$djag) (= VV$35$$35$10164 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) ts$39$$35$$35$aiUV)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$10164) (smt_map_cup (smt_map_sto (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf (+ 1 (smt_map_sel (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf))) (apply$35$$35$3 (as Binomial.listElts Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$10164) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (apply$35$$35$3 (as Binomial.treeListElts Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10164) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$10164) (smt_map_sto (apply$35$$35$3 (as fromList Int) ts$39$$35$$35$aiUV) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ts$39$$35$$35$aiUV) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf)))) (= (apply$35$$35$0 (as head Int) VV$35$$35$10164) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= (apply$35$$35$0 (as len Int) VV$35$$35$10164) (+ 1 (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$10164) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$10164) ts$39$$35$$35$aiUV) (= (apply$35$$35$0 (as tail Int) VV$35$$35$10164) ts$39$$35$$35$aiUV) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10164) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$10164) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$10164) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10164))))
(define-fun b$36$$35$$35$345 () Bool (and (= (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as fst Int) ds_dj1U)) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as snd Int) ds_dj1U))) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj2p)) (= (+ (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as fst Int) ds_dj1U)) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as snd Int) ds_dj1U))) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj2p))))
(define-fun b$36$$35$$35$377 () Bool (and (= lq_anf$36$$35$$35$7205759403792867278$35$$35$djam t1$35$$35$aiO8) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) 0)))
(define-fun b$36$$35$$35$409 () Bool (and lq_anf$36$$35$$35$7205759403792867281$35$$35$djap (= lq_anf$36$$35$$35$7205759403792867281$35$$35$djap (<= x1$35$$35$aiO9 x2$35$$35$aiOe)) (= lq_anf$36$$35$$35$7205759403792867281$35$$35$djap lq_anf$36$$35$$35$7205759403792867280$35$$35$djao)))
(define-fun b$36$$35$$35$441 () Bool (= lq_anf$36$$35$$35$7205759403792867310$35$$35$djaS (< lq_anf$36$$35$$35$7205759403792867308$35$$35$djaQ lq_anf$36$$35$$35$7205759403792867309$35$$35$djaR)))
(define-fun b$36$$35$$35$473 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867325$35$$35$djb7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867325$35$$35$djb7) 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867325$35$$35$djb7) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867324$35$$35$djb6) (apply$35$$35$3 (as Binomial.treeListElts Int) ts$35$$35$aiOt))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867325$35$$35$djb7) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867324$35$$35$djb6) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOt))) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867325$35$$35$djb7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867325$35$$35$djb7) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867325$35$$35$djb7) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867325$35$$35$djb7))))
(define-fun b$36$$35$$35$505 () Bool (and (= lq_anf$36$$35$$35$7205759403792867333$35$$35$djbf (< lq_anf$36$$35$$35$7205759403792867330$35$$35$djbc lq_anf$36$$35$$35$7205759403792867331$35$$35$djbd)) (= lq_anf$36$$35$$35$7205759403792867333$35$$35$djbf lq_anf$36$$35$$35$7205759403792867332$35$$35$djbe)))
(define-fun b$36$$35$$35$537 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) 0)) (= lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) (smt_map_def 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) (smt_map_def 0)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) 0) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) (smt_map_def 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt))))
(define-fun b$36$$35$$35$569 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) acc$35$$35$aiOI) 0) (= (apply$35$$35$0 (as len Int) acc$35$$35$aiOI) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) acc$35$$35$aiOI) 0) (>= (apply$35$$35$0 (as len Int) acc$35$$35$aiOI) 0) (<= (apply$35$$35$0 (as len Int) acc$35$$35$aiOI) (apply$35$$35$0 (as Binomial.treeListSize Int) acc$35$$35$aiOI))))
(define-fun b$36$$35$$35$601 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM) 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL) (apply$35$$35$3 (as Binomial.treeListElts Int) ts2$35$$35$aj0b))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL) (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$35$$35$aj0b))) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM))))
(define-fun b$36$$35$$35$1881 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$491) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$491)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$491) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$491)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$491))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$491) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$491)) (> (apply$35$$35$0 (as len Int) VV$35$$35$11372) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$491)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$491) 0)))
(define-fun b$36$$35$$35$1913 () Bool (and (= VV$35$$35$F$35$$35$241 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= VV$35$$35$F$35$$35$241 (+ r1$35$$35$aiOa lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD))))
(define-fun b$36$$35$$35$1945 () Bool (and (= VV$35$$35$F$35$$35$85 lq_anf$36$$35$$35$7205759403792867352$35$$35$djby) (= VV$35$$35$F$35$$35$85 lq_anf$36$$35$$35$7205759403792867351$35$$35$djbx)))
(define-fun b$36$$35$$35$1977 () Bool (and (= VV$35$$35$F$35$$35$376 sz$35$$35$aiO7) (= VV$35$$35$F$35$$35$376 (+ 1 (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiO6))) (>= VV$35$$35$F$35$$35$376 1)))
(define-fun b$36$$35$$35$2009 () Bool (<= x$35$$35$aiO4 VV$35$$35$F$35$$35$380))
(define-fun b$36$$35$$35$154 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Node Int) lq_anf$36$$35$$35$7205759403792867202$35$$35$dj98) (= lq_anf$36$$35$$35$7205759403792867202$35$$35$dj98 ds_dj3Q) (= lq_anf$36$$35$$35$7205759403792867202$35$$35$dj98 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) ds_dj43) r$35$$35$aiNK) ds_dj44) ds_dj45)) (= (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867202$35$$35$dj98) r$35$$35$aiNK) (= (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867202$35$$35$dj98) ds_dj43) (= (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867202$35$$35$dj98) ds_dj44) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867202$35$$35$dj98) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867202$35$$35$dj98)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867202$35$$35$dj98) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867202$35$$35$dj98)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867202$35$$35$dj98))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867202$35$$35$dj98) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) ds_dj44) (smt_map_sto (smt_map_def 0) ds_dj43 (+ 1 (smt_map_sel (smt_map_def 0) ds_dj43))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ds_dj44)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) ds_dj43) (- r$35$$35$aiNK 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_dj44)) (- ds_dj45 (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ds_dj44)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867202$35$$35$dj98) r$35$$35$aiNK) (= (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867202$35$$35$dj98) ds_dj45) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867202$35$$35$dj98) ds_dj43) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867202$35$$35$dj98) r$35$$35$aiNK) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) lq_anf$36$$35$$35$7205759403792867202$35$$35$dj98) ds_dj44) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) lq_anf$36$$35$$35$7205759403792867202$35$$35$dj98) ds_dj45)))
(define-fun b$36$$35$$35$186 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiNX) 0) (= (apply$35$$35$0 (as len Int) ts$35$$35$aiNX) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiNX) 0) (>= (apply$35$$35$0 (as len Int) ts$35$$35$aiNX) 0) (<= (apply$35$$35$0 (as len Int) ts$35$$35$aiNX) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiNX))))
(define-fun b$36$$35$$35$218 () Bool (and (= lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t ds_dj4a) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t) 0)))
(define-fun b$36$$35$$35$282 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) ds_dj8q) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) ds_dj8q)) (apply$35$$35$0 (as Binomial.root Int) ds_dj8q) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) ds_dj8q)) (apply$35$$35$0 (as Binomial.root Int) ds_dj8q))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) ds_dj8q) (apply$35$$35$0 (as Binomial.rank Int) ds_dj8q)) (> ds_dj8n (apply$35$$35$0 (as Binomial.treeRank Int) ds_dj8q)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) ds_dj8q) 0)))
(define-fun b$36$$35$$35$314 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) ds_dj1z) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) ds_dj1z)) (apply$35$$35$0 (as Binomial.root Int) ds_dj1z) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) ds_dj1z)) (apply$35$$35$0 (as Binomial.root Int) ds_dj1z))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) ds_dj1z) (apply$35$$35$0 (as Binomial.rank Int) ds_dj1z)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) ds_dj1z) 0)))
(define-fun b$36$$35$$35$1338 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$10334) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$10334)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10334) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$10334) 0)) (= VV$35$$35$10334 (as GHC.Types.$91$$93$ Int)) (= VV$35$$35$10334 lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$10334) (smt_map_def 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$10334) (smt_map_def 0)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10334) 0) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$10334) (smt_map_def 0)) (= (apply$35$$35$0 (as len Int) VV$35$$35$10334) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10334) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$10334) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$10334) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10334))))
(define-fun b$36$$35$$35$346 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) t$39$$35$$35$aiUT) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$39$$35$$35$aiUT)) (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$39$$35$$35$aiUT)) (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) t$39$$35$$35$aiUT) (apply$35$$35$0 (as Binomial.rank Int) t$39$$35$$35$aiUT)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) t$39$$35$$35$aiUT) 0)))
(define-fun b$36$$35$$35$410 () Bool (= lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC 1))
(define-fun b$36$$35$$35$442 () Bool (and (= lq_anf$36$$35$$35$7205759403792867311$35$$35$djaT (< lq_anf$36$$35$$35$7205759403792867308$35$$35$djaQ lq_anf$36$$35$$35$7205759403792867309$35$$35$djaR)) (= lq_anf$36$$35$$35$7205759403792867311$35$$35$djaT lq_anf$36$$35$$35$7205759403792867310$35$$35$djaS)))
(define-fun b$36$$35$$35$506 () Bool (and (not lq_anf$36$$35$$35$7205759403792867333$35$$35$djbf) (= lq_anf$36$$35$$35$7205759403792867333$35$$35$djbf (< lq_anf$36$$35$$35$7205759403792867330$35$$35$djbc lq_anf$36$$35$$35$7205759403792867331$35$$35$djbd)) (= lq_anf$36$$35$$35$7205759403792867333$35$$35$djbf lq_anf$36$$35$$35$7205759403792867332$35$$35$djbe)))
(define-fun b$36$$35$$35$1530 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11276) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$11276) 0)) (= VV$35$$35$11276 ds_dj4K) (= (apply$35$$35$0 (as len Int) VV$35$$35$11276) ds_dj4J) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11276) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$11276) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$11276) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11276))))
(define-fun b$36$$35$$35$570 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) 0)) (= lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF ds_dj0Y) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF))))
(define-fun b$36$$35$$35$602 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Heap Int) lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN) (= lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN (apply$35$$35$0 (as Binomial.Heap Int) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM)) (= (apply$35$$35$3 (as Binomial.elts Int) lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM)) (= (apply$35$$35$3 (as Binomial.elts Int) lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN))) (= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM)) (= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN))) (= (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Heap$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM) (>= (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN)) (apply$35$$35$0 (as Binomial.size Int) lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN))))
(define-fun b$36$$35$$35$762 () Bool (and (apply$35$$35$1 (as is$36$GHC.Tuple.$40$$44$$41$ Int) VV$35$$35$7257) (= VV$35$$35$7257 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Tuple.$40$$44$$41$ Int) lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK) lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN)) (= (apply$35$$35$0 (as fst Int) VV$35$$35$7257) lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) VV$35$$35$7257) lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) VV$35$$35$7257) lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN) (= (apply$35$$35$0 (as snd Int) VV$35$$35$7257) lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN) (= (apply$35$$35$0 (as x_Tuple21 Int) VV$35$$35$7257) lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK) (= (apply$35$$35$0 (as x_Tuple22 Int) VV$35$$35$7257) lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN)))
(define-fun b$36$$35$$35$1818 () Bool (and (apply$35$$35$1 (as is$36$GHC.Tuple.$40$$44$$41$ Int) VV$35$$35$F$35$$35$355) (= VV$35$$35$F$35$$35$355 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Tuple.$40$$44$$41$ Int) t$35$$35$aiOu) lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj)) (= (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$355) t$35$$35$aiOu) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) VV$35$$35$F$35$$35$355) t$35$$35$aiOu) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) VV$35$$35$F$35$$35$355) lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj) (= (apply$35$$35$0 (as snd Int) VV$35$$35$F$35$$35$355) lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj) (= (apply$35$$35$0 (as x_Tuple21 Int) VV$35$$35$F$35$$35$355) t$35$$35$aiOu) (= (apply$35$$35$0 (as x_Tuple22 Int) VV$35$$35$F$35$$35$355) lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj)))
(define-fun b$36$$35$$35$1882 () Bool (and (= VV$35$$35$F$35$$35$523 r$35$$35$aiNK) (>= VV$35$$35$F$35$$35$523 0)))
(define-fun b$36$$35$$35$1914 () Bool (and (= VV$35$$35$F$35$$35$273 lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= VV$35$$35$F$35$$35$273 (+ sz1$35$$35$aiOc sz2$35$$35$aiOh))))
(define-fun b$36$$35$$35$1946 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$117) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$117)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$117) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$117) 0)) (= VV$35$$35$F$35$$35$117 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) t2$35$$35$aiOY) lq_anf$36$$35$$35$7205759403792867340$35$$35$djbm)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$117) (smt_map_cup (smt_map_sto (smt_map_def 0) t2$35$$35$aiOY (+ 1 (smt_map_sel (smt_map_def 0) t2$35$$35$aiOY))) (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867340$35$$35$djbm))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$117) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t2$35$$35$aiOY) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867340$35$$35$djbm))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$117) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t2$35$$35$aiOY) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867340$35$$35$djbm))) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$117) (smt_map_sto (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867340$35$$35$djbm) t2$35$$35$aiOY (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867340$35$$35$djbm) t2$35$$35$aiOY)))) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$117) t2$35$$35$aiOY) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$117) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867340$35$$35$djbm))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$117) t2$35$$35$aiOY) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$117) lq_anf$36$$35$$35$7205759403792867340$35$$35$djbm) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$117) lq_anf$36$$35$$35$7205759403792867340$35$$35$djbm) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$117) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$117) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$117) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$117))))
(define-fun b$36$$35$$35$2010 () Bool (and (= VV$35$$35$F$35$$35$444 lq_anf$36$$35$$35$7205759403792867239$35$$35$dj9J) (= VV$35$$35$F$35$$35$444 (smt_map_cup lq_anf$36$$35$$35$7205759403792867237$35$$35$dj9H lq_anf$36$$35$$35$7205759403792867238$35$$35$dj9I))))
(define-fun b$36$$35$$35$187 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) 0)) (= lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h ds_dj2M) (= lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_dj2X) ts$35$$35$aiNX)) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) (smt_map_cup (smt_map_sto (smt_map_def 0) ds_dj2X (+ 1 (smt_map_sel (smt_map_def 0) ds_dj2X))) (apply$35$$35$3 (as Binomial.listElts Int) ts$35$$35$aiNX))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) ds_dj2X) (apply$35$$35$3 (as Binomial.treeListElts Int) ts$35$$35$aiNX))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) (+ (apply$35$$35$0 (as Binomial.treeSize Int) ds_dj2X) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiNX))) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) (smt_map_sto (apply$35$$35$3 (as fromList Int) ts$35$$35$aiNX) ds_dj2X (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ts$35$$35$aiNX) ds_dj2X)))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) ds_dj2X) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) (+ 1 (apply$35$$35$0 (as len Int) ts$35$$35$aiNX))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) ds_dj2X) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) ts$35$$35$aiNX) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) ts$35$$35$aiNX) (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867211$35$$35$dj9h))))
(define-fun b$36$$35$$35$219 () Bool (and (= lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t ds_dj4a) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t) 0)))
(define-fun b$36$$35$$35$283 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOD) 0) (= (apply$35$$35$0 (as len Int) ts$35$$35$aiOD) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOD) 0) (>= (apply$35$$35$0 (as len Int) ts$35$$35$aiOD) 0) (<= (apply$35$$35$0 (as len Int) ts$35$$35$aiOD) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOD))))
(define-fun b$36$$35$$35$315 () Bool (and (= lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7 ds_dj1z) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7) 0)))
(define-fun b$36$$35$$35$347 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV) 0) (= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV) 0) (>= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV) 0) (<= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV))))
(define-fun b$36$$35$$35$379 () Bool (>= r1$35$$35$aiOa 0))
(define-fun b$36$$35$$35$411 () Bool (= lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC))
(define-fun b$36$$35$$35$443 () Bool (and (= lq_anf$36$$35$$35$7205759403792867311$35$$35$djaT (< lq_anf$36$$35$$35$7205759403792867308$35$$35$djaQ lq_anf$36$$35$$35$7205759403792867309$35$$35$djaR)) (= lq_anf$36$$35$$35$7205759403792867311$35$$35$djaT lq_anf$36$$35$$35$7205759403792867310$35$$35$djaS)))
(define-fun b$36$$35$$35$507 () Bool (and (= lq_anf$36$$35$$35$7205759403792867334$35$$35$djbg (apply$35$$35$0 (as Binomial.rank Int) t2$35$$35$aiOY)) (>= lq_anf$36$$35$$35$7205759403792867334$35$$35$djbg 0)))
(define-fun b$36$$35$$35$571 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) 0)) (= lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF ds_dj0Y) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF))))
(define-fun b$36$$35$$35$795 () Bool (and (= VV$35$$35$7418 h$35$$35$aiOM) (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$7418) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$7418))) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$7418) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$7418))) (>= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$7418) 0) (< 0 (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$7418))) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$7418)) (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$7418))))
(define-fun b$36$$35$$35$1819 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$419) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$419) 0)) (= VV$35$$35$F$35$$35$419 ts$35$$35$aiOD) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$419) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$419) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$419) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$419))))
(define-fun b$36$$35$$35$1851 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$391) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$391)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$391) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$391) 0)) (= VV$35$$35$F$35$$35$391 lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2) (= VV$35$$35$F$35$$35$391 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) t$35$$35$aiOF) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$391) (smt_map_cup (smt_map_sto (smt_map_def 0) t$35$$35$aiOF (+ 1 (smt_map_sel (smt_map_def 0) t$35$$35$aiOF))) (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$391) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOF) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$391) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOF) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1))) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$391) (smt_map_sto (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) t$35$$35$aiOF (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) t$35$$35$aiOF)))) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$391) t$35$$35$aiOF) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$391) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$391) t$35$$35$aiOF) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$391) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$391) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$391) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$391) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$391) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$391))))
(define-fun b$36$$35$$35$1947 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$149) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$149) 0)) (= VV$35$$35$F$35$$35$149 ds_dj6F) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$149) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$149) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$149) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$149))))
(define-fun b$36$$35$$35$2011 () Bool (and (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$476) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$476)) (> ds_dj4J (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$476)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$476) 0)))
(define-fun b$36$$35$$35$284 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) 0)) (= lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P ds_dj8o) (= lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_dj8q) ts$35$$35$aiOD)) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) (smt_map_cup (smt_map_sto (smt_map_def 0) ds_dj8q (+ 1 (smt_map_sel (smt_map_def 0) ds_dj8q))) (apply$35$$35$3 (as Binomial.listElts Int) ts$35$$35$aiOD))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) ds_dj8q) (apply$35$$35$3 (as Binomial.treeListElts Int) ts$35$$35$aiOD))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) (+ (apply$35$$35$0 (as Binomial.treeSize Int) ds_dj8q) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOD))) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) (smt_map_sto (apply$35$$35$3 (as fromList Int) ts$35$$35$aiOD) ds_dj8q (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ts$35$$35$aiOD) ds_dj8q)))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) ds_dj8q) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) ds_dj8n) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) (+ 1 (apply$35$$35$0 (as len Int) ts$35$$35$aiOD))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) ds_dj8q) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) ts$35$$35$aiOD) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) ts$35$$35$aiOD) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P))))
(define-fun b$36$$35$$35$316 () Bool (and (= lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7 ds_dj1z) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7) 0)))
(define-fun b$36$$35$$35$348 () Bool (and (apply$35$$35$1 (as is$36$GHC.Tuple.$40$$44$$41$ Int) ds_dj1U) (= ds_dj1U (apply$35$$35$0 (apply$35$$35$0 (as GHC.Tuple.$40$$44$$41$ Int) t$39$$35$$35$aiUT) ts$39$$35$$35$aiUV)) (= (apply$35$$35$0 (as fst Int) ds_dj1U) t$39$$35$$35$aiUT) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) ds_dj1U) t$39$$35$$35$aiUT) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) ds_dj1U) ts$39$$35$$35$aiUV) (= (apply$35$$35$0 (as snd Int) ds_dj1U) ts$39$$35$$35$aiUV) (= (apply$35$$35$0 (as x_Tuple21 Int) ds_dj1U) t$39$$35$$35$aiUT) (= (apply$35$$35$0 (as x_Tuple22 Int) ds_dj1U) ts$39$$35$$35$aiUV) (= (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as fst Int) ds_dj1U)) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as snd Int) ds_dj1U))) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj2p)) (= (+ (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as fst Int) ds_dj1U)) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as snd Int) ds_dj1U))) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj2p))))
(define-fun b$36$$35$$35$380 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$35$$35$aiOb) 0) (= (apply$35$$35$0 (as len Int) ts1$35$$35$aiOb) 0)) (= (apply$35$$35$0 (as len Int) ts1$35$$35$aiOb) r1$35$$35$aiOa) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$35$$35$aiOb) 0) (>= (apply$35$$35$0 (as len Int) ts1$35$$35$aiOb) 0) (<= (apply$35$$35$0 (as len Int) ts1$35$$35$aiOb) (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$35$$35$aiOb))))
(define-fun b$36$$35$$35$412 () Bool (= lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE (+ r1$35$$35$aiOa lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD)))
(define-fun b$36$$35$$35$1436 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10813) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$10813) 0)) (= VV$35$$35$10813 ds_dj8o) (= (apply$35$$35$0 (as len Int) VV$35$$35$10813) ds_dj8n) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10813) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$10813) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$10813) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10813))))
(define-fun b$36$$35$$35$444 () Bool (and (not lq_anf$36$$35$$35$7205759403792867311$35$$35$djaT) (= lq_anf$36$$35$$35$7205759403792867311$35$$35$djaT (< lq_anf$36$$35$$35$7205759403792867308$35$$35$djaQ lq_anf$36$$35$$35$7205759403792867309$35$$35$djaR)) (= lq_anf$36$$35$$35$7205759403792867311$35$$35$djaT lq_anf$36$$35$$35$7205759403792867310$35$$35$djaS)))
(define-fun b$36$$35$$35$508 () Bool (and (= lq_anf$36$$35$$35$7205759403792867335$35$$35$djbh (apply$35$$35$0 (as Binomial.rank Int) t1$35$$35$aiOV)) (>= lq_anf$36$$35$$35$7205759403792867335$35$$35$djbh 0)))
(define-fun b$36$$35$$35$1532 () Bool (and (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$1471) (apply$35$$35$0 (as Binomial.rank Int) lq_tmp$36$x$35$$35$1471)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$1471) 0)))
(define-fun b$36$$35$$35$572 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) 0)) (= lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF ds_dj0Y) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) (smt_map_def 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) (smt_map_def 0)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) 0) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) (smt_map_def 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF))))
(define-fun b$36$$35$$35$1788 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Heap Int) VV$35$$35$F$35$$35$96) (= VV$35$$35$F$35$$35$96 (apply$35$$35$0 (as Binomial.Heap Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt)) (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$F$35$$35$96) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt)) (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$F$35$$35$96) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$96))) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$96) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt)) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$96) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$96))) (= (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$96) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Heap$35$$35$1 Int) VV$35$$35$F$35$$35$96) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) (>= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$96) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$96)) (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$96))))
(define-fun b$36$$35$$35$1820 () Bool (and (= VV$35$$35$F$35$$35$483 t$35$$35$aiNY) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$483) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$483)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$483) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$483)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$483))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$483) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$483)) (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$483)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$483) 0)))
(define-fun b$36$$35$$35$1852 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$423) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$423)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$423) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$423)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$423))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$423) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$423)) (> (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$2284) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$423)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$423) 0)))
(define-fun b$36$$35$$35$1884 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$204) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$204)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$204) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$204) 0)) (= VV$35$$35$F$35$$35$204 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) t$35$$35$aiOn) lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$204) (smt_map_cup (smt_map_sto (smt_map_def 0) t$35$$35$aiOn (+ 1 (smt_map_sel (smt_map_def 0) t$35$$35$aiOn))) (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$204) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOn) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$204) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOn) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP))) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$204) (smt_map_sto (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP) t$35$$35$aiOn (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP) t$35$$35$aiOn)))) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$204) t$35$$35$aiOn) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$204) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$204) t$35$$35$aiOn) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$204) lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$204) lq_anf$36$$35$$35$7205759403792867307$35$$35$djaP) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$204) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$204) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$204) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$204))))
(define-fun b$36$$35$$35$892 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$7932) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$7932)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7932) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$7932) 0)) (= VV$35$$35$7932 (as GHC.Types.$91$$93$ Int)) (= VV$35$$35$7932 lq_anf$36$$35$$35$7205759403792867350$35$$35$djbw) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$7932) (smt_map_def 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$7932) (smt_map_def 0)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7932) 0) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$7932) (smt_map_def 0)) (= (apply$35$$35$0 (as len Int) VV$35$$35$7932) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7932) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$7932) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$7932) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7932))))
(define-fun b$36$$35$$35$2012 () Bool (and (= VV$35$$35$F$35$$35$157 lq_anf$36$$35$$35$7205759403792867323$35$$35$djb5) (= VV$35$$35$F$35$$35$157 lq_anf$36$$35$$35$7205759403792867322$35$$35$djb4)))
(define-fun b$36$$35$$35$93 () Bool GHC.Types.True)
(define-fun b$36$$35$$35$157 () Bool (>= (apply$35$$35$0 (as len Int) ds_dj3y) 0))
(define-fun b$36$$35$$35$221 () Bool (>= ds_dj4J 0))
(define-fun b$36$$35$$35$285 () Bool (and (= t$35$$35$aiOF (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ds_dj8o)) (= t$35$$35$aiOF (apply$35$$35$0 (as head Int) ds_dj8o)) (= t$35$$35$aiOF (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_dj8o)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) ds_dj8o) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) ds_dj8o))) (= (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOF) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$35$$35$aiOF)) (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aiOF) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$35$$35$aiOF)) (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aiOF))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aiOF) (apply$35$$35$0 (as Binomial.rank Int) t$35$$35$aiOF)) (= (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aiOF) (- (apply$35$$35$0 (as len Int) ds_dj8o) 1)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aiOF) 0)))
(define-fun b$36$$35$$35$381 () Bool (and (= sz1$35$$35$aiOc (+ 1 (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$35$$35$aiOb))) (>= sz1$35$$35$aiOc 1)))
(define-fun b$36$$35$$35$413 () Bool (and (= lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) 0)))
(define-fun b$36$$35$$35$445 () Bool (and (= lq_anf$36$$35$$35$7205759403792867312$35$$35$djaU (apply$35$$35$0 (as Binomial.rank Int) t$35$$35$aiOn)) (>= lq_anf$36$$35$$35$7205759403792867312$35$$35$djaU 0)))
(define-fun b$36$$35$$35$477 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$35$$35$aiOS) 0) (= (apply$35$$35$0 (as len Int) ts1$35$$35$aiOS) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$35$$35$aiOS) 0) (>= (apply$35$$35$0 (as len Int) ts1$35$$35$aiOS) 0) (<= (apply$35$$35$0 (as len Int) ts1$35$$35$aiOS) (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$35$$35$aiOS))))
(define-fun b$36$$35$$35$509 () Bool (= lq_anf$36$$35$$35$7205759403792867336$35$$35$djbi (< lq_anf$36$$35$$35$7205759403792867334$35$$35$djbg lq_anf$36$$35$$35$7205759403792867335$35$$35$djbh)))
(define-fun b$36$$35$$35$541 () Bool (= lq_anf$36$$35$$35$7205759403792867348$35$$35$djbu 0))
(define-fun b$36$$35$$35$1565 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11456) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$11456) 0)) (= VV$35$$35$11456 ts$35$$35$aiNX) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11456) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$11456) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$11456) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11456))))
(define-fun b$36$$35$$35$573 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) 0)) (= lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF ds_dj0Y) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867359$35$$35$djbF))))
(define-fun b$36$$35$$35$1789 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$128) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$128) 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$128) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867338$35$$35$djbk) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867339$35$$35$djbl))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$128) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867338$35$$35$djbk) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867339$35$$35$djbl))) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$128) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$128) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$128) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$128))))
(define-fun b$36$$35$$35$1821 () Bool (= VV$35$$35$F$35$$35$515 (+ lq_anf$36$$35$$35$7205759403792867205$35$$35$dj9b lq_anf$36$$35$$35$7205759403792867206$35$$35$dj9c)))
(define-fun b$36$$35$$35$1853 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Node Int) VV$35$$35$F$35$$35$455) (= VV$35$$35$F$35$$35$455 residual$35$$35$aiNU) (= VV$35$$35$F$35$$35$455 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x$35$$35$aiNN) lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E) ts$35$$35$aiNR) lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G)) (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$455) lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E) (= (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$455) x$35$$35$aiNN) (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$455) ts$35$$35$aiNR) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$455) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) ts$35$$35$aiNR) (smt_map_sto (smt_map_def 0) x$35$$35$aiNN (+ 1 (smt_map_sel (smt_map_def 0) x$35$$35$aiNN))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ts$35$$35$aiNR)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x$35$$35$aiNN) (- lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ts$35$$35$aiNR)) (- lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ts$35$$35$aiNR)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$455) lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$455) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$455)) (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$455) lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) VV$35$$35$F$35$$35$455) x$35$$35$aiNN) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) VV$35$$35$F$35$$35$455) lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$455) ts$35$$35$aiNR) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) VV$35$$35$F$35$$35$455) lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$455) 0)))
(define-fun b$36$$35$$35$1885 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$236) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$236)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$236) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$236) 0)) (= VV$35$$35$F$35$$35$236 lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= VV$35$$35$F$35$$35$236 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) ts1$35$$35$aiOb)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$236) (smt_map_cup (smt_map_sto (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF (+ 1 (smt_map_sel (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF))) (apply$35$$35$3 (as Binomial.listElts Int) ts1$35$$35$aiOb))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$236) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (apply$35$$35$3 (as Binomial.treeListElts Int) ts1$35$$35$aiOb))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$236) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$35$$35$aiOb))) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$236) (smt_map_sto (apply$35$$35$3 (as fromList Int) ts1$35$$35$aiOb) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ts1$35$$35$aiOb) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF)))) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$236) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$236) (+ 1 (apply$35$$35$0 (as len Int) ts1$35$$35$aiOb))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$236) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$236) ts1$35$$35$aiOb) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$236) ts1$35$$35$aiOb) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$236) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$236) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$236) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$236))))
(define-fun b$36$$35$$35$1917 () Bool (<= x$35$$35$aiNN VV$35$$35$F$35$$35$465))
(define-fun b$36$$35$$35$1949 () Bool (<= x1$35$$35$aiO9 VV$35$$35$F$35$$35$245))
(define-fun b$36$$35$$35$1981 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Heap Int) VV$35$$35$F$35$$35$153) (= VV$35$$35$F$35$$35$153 (apply$35$$35$0 (as Binomial.Heap Int) lq_anf$36$$35$$35$7205759403792867325$35$$35$djb7)) (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$F$35$$35$153) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867325$35$$35$djb7)) (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$F$35$$35$153) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$153))) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$153) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867325$35$$35$djb7)) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$153) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$153))) (= (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$153) lq_anf$36$$35$$35$7205759403792867325$35$$35$djb7) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Heap$35$$35$1 Int) VV$35$$35$F$35$$35$153) lq_anf$36$$35$$35$7205759403792867325$35$$35$djb7) (>= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$153) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$153)) (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$153))))
(define-fun b$36$$35$$35$2013 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$189) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$189) 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$189) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867316$35$$35$djaY) (apply$35$$35$3 (as Binomial.treeListElts Int) ts$39$$35$$35$aiOr))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$189) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867316$35$$35$djaY) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiOr))) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$189) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$189) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$189) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$189))))
(define-fun b$36$$35$$35$158 () Bool (and (= lq_anf$36$$35$$35$7205759403792867203$35$$35$dj99 ds_dj3y) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867203$35$$35$dj99) 0)))
(define-fun b$36$$35$$35$190 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj30) 0) (= (apply$35$$35$0 (as len Int) ds_dj30) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj30) 0) (>= (apply$35$$35$0 (as len Int) ds_dj30) 0) (>= (apply$35$$35$0 (as len Int) ds_dj30) 1) (<= (apply$35$$35$0 (as len Int) ds_dj30) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj30))))
(define-fun b$36$$35$$35$222 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj4K) 0) (= (apply$35$$35$0 (as len Int) ds_dj4K) 0)) (= (apply$35$$35$0 (as len Int) ds_dj4K) ds_dj4J) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj4K) 0) (>= (apply$35$$35$0 (as len Int) ds_dj4K) 0) (<= (apply$35$$35$0 (as len Int) ds_dj4K) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj4K))))
(define-fun b$36$$35$$35$286 () Bool (and (= lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q (apply$35$$35$0 (as Binomial.rank Int) t$35$$35$aiOF)) (= lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aiOF)) (>= lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q 0)))
(define-fun b$36$$35$$35$318 () Bool (>= r$35$$35$aiO5 0))
(define-fun b$36$$35$$35$350 () Bool (and (= (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as fst Int) ds_dj1U)) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as snd Int) ds_dj1U))) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj2p)) (= (+ (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as fst Int) ds_dj1U)) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as snd Int) ds_dj1U))) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj2p))))
(define-fun b$36$$35$$35$382 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Node Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_anf$36$$35$$35$7205759403792867278$35$$35$djam t1$35$$35$aiO8) (= lq_anf$36$$35$$35$7205759403792867278$35$$35$djam (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x1$35$$35$aiO9) r1$35$$35$aiOa) ts1$35$$35$aiOb) sz1$35$$35$aiOc)) (= (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) r1$35$$35$aiOa) (= (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) x1$35$$35$aiO9) (= (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) ts1$35$$35$aiOb) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) ts1$35$$35$aiOb) (smt_map_sto (smt_map_def 0) x1$35$$35$aiO9 (+ 1 (smt_map_sel (smt_map_def 0) x1$35$$35$aiO9))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ts1$35$$35$aiOb)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x1$35$$35$aiO9) (- r1$35$$35$aiOa 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ts1$35$$35$aiOb)) (- sz1$35$$35$aiOc (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ts1$35$$35$aiOb)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) r1$35$$35$aiOa) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam)) (= (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) sz1$35$$35$aiOc) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) x1$35$$35$aiO9) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) r1$35$$35$aiOa) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) ts1$35$$35$aiOb) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) sz1$35$$35$aiOc) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) 0)))
(define-fun b$36$$35$$35$1438 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_tmp$36$x$35$$35$2118) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$2118)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$2118) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$2118)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$2118))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$2118) (apply$35$$35$0 (as Binomial.rank Int) lq_tmp$36$x$35$$35$2118)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$2118) 0)))
(define-fun b$36$$35$$35$446 () Bool (and (= lq_anf$36$$35$$35$7205759403792867313$35$$35$djaV (apply$35$$35$0 (as Binomial.rank Int) t$39$$35$$35$aiOq)) (>= lq_anf$36$$35$$35$7205759403792867313$35$$35$djaV 0)))
(define-fun b$36$$35$$35$478 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj6F) 0) (= (apply$35$$35$0 (as len Int) ds_dj6F) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj6F) 0) (>= (apply$35$$35$0 (as len Int) ds_dj6F) 0) (<= (apply$35$$35$0 (as len Int) ds_dj6F) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj6F))))
(define-fun b$36$$35$$35$510 () Bool (and (= lq_anf$36$$35$$35$7205759403792867337$35$$35$djbj (< lq_anf$36$$35$$35$7205759403792867334$35$$35$djbg lq_anf$36$$35$$35$7205759403792867335$35$$35$djbh)) (= lq_anf$36$$35$$35$7205759403792867337$35$$35$djbj lq_anf$36$$35$$35$7205759403792867336$35$$35$djbi)))
(define-fun b$36$$35$$35$542 () Bool (= lq_anf$36$$35$$35$7205759403792867349$35$$35$djbv lq_anf$36$$35$$35$7205759403792867348$35$$35$djbu))
(define-fun b$36$$35$$35$574 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOJ) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$35$$35$aiOJ)) (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aiOJ) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$35$$35$aiOJ)) (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aiOJ))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aiOJ) (apply$35$$35$0 (as Binomial.rank Int) t$35$$35$aiOJ)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aiOJ) 0)))
(define-fun b$36$$35$$35$766 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Heap Int) VV$35$$35$7278) (= VV$35$$35$7278 lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN) (= VV$35$$35$7278 (apply$35$$35$0 (as Binomial.Heap Int) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM)) (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$7278) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM)) (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$7278) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$7278))) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$7278) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM)) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$7278) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$7278))) (= (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$7278) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Heap$35$$35$1 Int) VV$35$$35$7278) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM) (>= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$7278) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$7278)) (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$7278))))
(define-fun b$36$$35$$35$1854 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$487) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$487)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$487) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$487)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$487))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$487) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$487)) (> (- (apply$35$$35$0 (as len Int) ds_dj30) 1) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$487)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$487) 0)))
(define-fun b$36$$35$$35$894 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_tmp$36$x$35$$35$5593) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$5593)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$5593) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$5593)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$5593))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$5593) (apply$35$$35$0 (as Binomial.rank Int) lq_tmp$36$x$35$$35$5593)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$5593) 0)))
(define-fun b$36$$35$$35$1982 () Bool (and (= VV$35$$35$F$35$$35$249 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= VV$35$$35$F$35$$35$249 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$249) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$249)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$249) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$249)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$249))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$249) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$249)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$249) 0)))
(define-fun b$36$$35$$35$159 () Bool (and (= lq_anf$36$$35$$35$7205759403792867203$35$$35$dj99 ds_dj3y) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867203$35$$35$dj99) 0)))
(define-fun b$36$$35$$35$191 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) 0)) (= lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j ds_dj30) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) 1) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j))))
(define-fun b$36$$35$$35$223 () Bool (and (= ds_dj4L (+ 1 (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj4K))) (>= ds_dj4L 1)))
(define-fun b$36$$35$$35$287 () Bool (= lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R 1))
(define-fun b$36$$35$$35$319 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiO6) 0) (= (apply$35$$35$0 (as len Int) ts$35$$35$aiO6) 0)) (= (apply$35$$35$0 (as len Int) ts$35$$35$aiO6) r$35$$35$aiO5) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiO6) 0) (>= (apply$35$$35$0 (as len Int) ts$35$$35$aiO6) 0) (<= (apply$35$$35$0 (as len Int) ts$35$$35$aiO6) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiO6))))
(define-fun b$36$$35$$35$351 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) t$39$$35$$35$aiUT) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$39$$35$$35$aiUT)) (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$39$$35$$35$aiUT)) (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) t$39$$35$$35$aiUT) (apply$35$$35$0 (as Binomial.rank Int) t$39$$35$$35$aiUT)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) t$39$$35$$35$aiUT) 0)))
(define-fun b$36$$35$$35$383 () Bool (and (= lq_anf$36$$35$$35$7205759403792867279$35$$35$djan t2$35$$35$aiOd) (= (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (apply$35$$35$0 (as Binomial.rank Int) t1$35$$35$aiO8)) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan)) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) 0)))
(define-fun b$36$$35$$35$415 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) 0)) (= lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) ts1$35$$35$aiOb)) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (smt_map_cup (smt_map_sto (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF (+ 1 (smt_map_sel (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF))) (apply$35$$35$3 (as Binomial.listElts Int) ts1$35$$35$aiOb))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (apply$35$$35$3 (as Binomial.treeListElts Int) ts1$35$$35$aiOb))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$35$$35$aiOb))) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (smt_map_sto (apply$35$$35$3 (as fromList Int) ts1$35$$35$aiOb) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ts1$35$$35$aiOb) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF)))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (+ 1 (apply$35$$35$0 (as len Int) ts1$35$$35$aiOb))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) ts1$35$$35$aiOb) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) ts1$35$$35$aiOb) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG))))
(define-fun b$36$$35$$35$447 () Bool (= lq_anf$36$$35$$35$7205759403792867314$35$$35$djaW (> lq_anf$36$$35$$35$7205759403792867312$35$$35$djaU lq_anf$36$$35$$35$7205759403792867313$35$$35$djaV)))
(define-fun b$36$$35$$35$479 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) 0)) (= lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8 ds_dj6F) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867326$35$$35$djb8))))
(define-fun b$36$$35$$35$511 () Bool (and (= lq_anf$36$$35$$35$7205759403792867337$35$$35$djbj (< lq_anf$36$$35$$35$7205759403792867334$35$$35$djbg lq_anf$36$$35$$35$7205759403792867335$35$$35$djbh)) (= lq_anf$36$$35$$35$7205759403792867337$35$$35$djbj lq_anf$36$$35$$35$7205759403792867336$35$$35$djbi)))
(define-fun b$36$$35$$35$1567 () Bool (and (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_tmp$36$x$35$$35$956) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$956)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$956) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$956)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$956))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$956) (apply$35$$35$0 (as Binomial.rank Int) lq_tmp$36$x$35$$35$956)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$956) 0)))
(define-fun b$36$$35$$35$575 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOK) 0) (= (apply$35$$35$0 (as len Int) ts$35$$35$aiOK) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOK) 0) (>= (apply$35$$35$0 (as len Int) ts$35$$35$aiOK) 0) (<= (apply$35$$35$0 (as len Int) ts$35$$35$aiOK) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOK))))
(define-fun b$36$$35$$35$767 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7284) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$7284) 0)) (= VV$35$$35$7284 lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$7284) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL) (apply$35$$35$3 (as Binomial.treeListElts Int) ts2$35$$35$aj0b))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7284) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL) (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$35$$35$aj0b))) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7284) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$7284) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$7284) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7284))))
(define-fun b$36$$35$$35$1791 () Bool (and (= VV$35$$35$F$35$$35$192 t$39$$35$$35$aiOq) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$192) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$192)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$192) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$192)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$192))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$192) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$192)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$192) 0)))
(define-fun b$36$$35$$35$1823 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$68) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$68)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$68) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$68) 0)) (= VV$35$$35$F$35$$35$68 lq_anf$36$$35$$35$7205759403792867357$35$$35$djbD) (= VV$35$$35$F$35$$35$68 ts$35$$35$aiOz) (= VV$35$$35$F$35$$35$68 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_dj1s) ds_dj1t)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$68) (smt_map_cup (smt_map_sto (smt_map_def 0) ds_dj1s (+ 1 (smt_map_sel (smt_map_def 0) ds_dj1s))) (apply$35$$35$3 (as Binomial.listElts Int) ds_dj1t))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$68) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) ds_dj1s) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj1t))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$68) (+ (apply$35$$35$0 (as Binomial.treeSize Int) ds_dj1s) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj1t))) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$68) (smt_map_sto (apply$35$$35$3 (as fromList Int) ds_dj1t) ds_dj1s (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ds_dj1t) ds_dj1s)))) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$68) ds_dj1s) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$68) (+ 1 (apply$35$$35$0 (as len Int) ds_dj1t))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$68) ds_dj1s) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$68) ds_dj1t) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$68) ds_dj1t) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$68) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$68) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$68) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$68))))
(define-fun b$36$$35$$35$1855 () Bool (= VV$35$$35$F$35$$35$519 lq_anf$36$$35$$35$7205759403792867204$35$$35$dj9a))
(define-fun b$36$$35$$35$1919 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$50) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$50) 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$50) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) ts$35$$35$aiOH) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867361$35$$35$djbH))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$50) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOH) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867361$35$$35$djbH))) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$50) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$50) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$50) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$50))))
(define-fun b$36$$35$$35$1951 () Bool (and (apply$35$$35$1 (as is$36$Binomial.Node Int) VV$35$$35$F$35$$35$373) (= VV$35$$35$F$35$$35$373 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x$35$$35$aiO4) r$35$$35$aiO5) ts$35$$35$aiO6) sz$35$$35$aiO7)) (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$373) r$35$$35$aiO5) (= (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$373) x$35$$35$aiO4) (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$373) ts$35$$35$aiO6) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$373) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$373)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$373) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$373)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$373))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$373) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) ts$35$$35$aiO6) (smt_map_sto (smt_map_def 0) x$35$$35$aiO4 (+ 1 (smt_map_sel (smt_map_def 0) x$35$$35$aiO4))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ts$35$$35$aiO6)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x$35$$35$aiO4) (- r$35$$35$aiO5 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ts$35$$35$aiO6)) (- sz$35$$35$aiO7 (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ts$35$$35$aiO6)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$373) r$35$$35$aiO5) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$373) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$373)) (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$373) sz$35$$35$aiO7) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) VV$35$$35$F$35$$35$373) x$35$$35$aiO4) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) VV$35$$35$F$35$$35$373) r$35$$35$aiO5) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$373) ts$35$$35$aiO6) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) VV$35$$35$F$35$$35$373) sz$35$$35$aiO7) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$373) 0)))
(define-fun b$36$$35$$35$1983 () Bool (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) 0)) (= VV$35$$35$F$35$$35$345 ts$39$$35$$35$aiUV) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345))))
(define-fun b$36$$35$$35$2015 () Bool (and (apply$35$$35$1 (as is$36$GHC.Tuple.$40$$44$$41$ Int) VV$35$$35$F$35$$35$317) (= VV$35$$35$F$35$$35$317 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Tuple.$40$$44$$41$ Int) t$39$$35$$35$aiUT) lq_anf$36$$35$$35$7205759403792867272$35$$35$djag)) (= (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$317) t$39$$35$$35$aiUT) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 Int) VV$35$$35$F$35$$35$317) t$39$$35$$35$aiUT) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 Int) VV$35$$35$F$35$$35$317) lq_anf$36$$35$$35$7205759403792867272$35$$35$djag) (= (apply$35$$35$0 (as snd Int) VV$35$$35$F$35$$35$317) lq_anf$36$$35$$35$7205759403792867272$35$$35$djag) (= (apply$35$$35$0 (as x_Tuple21 Int) VV$35$$35$F$35$$35$317) t$39$$35$$35$aiUT) (= (apply$35$$35$0 (as x_Tuple22 Int) VV$35$$35$F$35$$35$317) lq_anf$36$$35$$35$7205759403792867272$35$$35$djag)))
(push 1)
(assert (and (exists ((lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6107 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6107 Int) (lq_karg$36$VV$35$$35$6106$35$$35$k_$35$$35$6107 Int)) (and (= lq_karg$36$VV$35$$35$6106$35$$35$k_$35$$35$6107 VV$35$$35$F$35$$35$44) (= lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6107 h$35$$35$aiOM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6107 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (exists ((VV$35$$35$F$35$$35$46 Int) (VV$35$$35$7399 Int) (VV$35$$35$7407 Int)) (and (exists ((lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6068 Int) (lq_karg$36$VV$35$$35$6067$35$$35$k_$35$$35$6068 Int)) (and (= lq_karg$36$VV$35$$35$6067$35$$35$k_$35$$35$6068 VV$35$$35$F$35$$35$46) (= lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6068 h$35$$35$aiOM) (exists ((VV$35$$35$F$35$$35$48 Int) (VV$35$$35$7418 Int)) (and (= VV$35$$35$7418 h$35$$35$aiOM) (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$7418) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$7418))) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$7418) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$7418))) (>= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$7418) 0) (< 0 (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$7418))) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$7418)) (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$7418)) (= lq_karg$36$VV$35$$35$6067$35$$35$k_$35$$35$6068 VV$35$$35$F$35$$35$48) (= lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6068 h$35$$35$aiOM))))) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7399) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$7399) 0)) (= VV$35$$35$7399 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$7399) (apply$35$$35$3 (as Binomial.elts Int) h$35$$35$aiOM)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7399) (apply$35$$35$0 (as Binomial.size Int) h$35$$35$aiOM)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7399) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$7399) 0) (< 0 (apply$35$$35$0 (as len Int) VV$35$$35$7399)) (<= (apply$35$$35$0 (as len Int) VV$35$$35$7399) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7399)) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$7407) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7407)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7407) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7407)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7407))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7407) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$7407)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7407) 0) (= lq_karg$36$VV$35$$35$6106$35$$35$k_$35$$35$6107 VV$35$$35$F$35$$35$46) (= lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6107 h$35$$35$aiOM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6107 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI))))) b$36$$35$$35$97 b$36$$35$$35$584 b$36$$35$$35$585 b$36$$35$$35$586 b$36$$35$$35$43 b$36$$35$$35$587 b$36$$35$$35$588 b$36$$35$$35$589 b$36$$35$$35$590 b$36$$35$$35$47 b$36$$35$$35$790 b$36$$35$$35$93))
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$44 (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7394))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as Binomial.root Int) (apply$35$$35$0 (as fst Int) ds_dj8u)) VV$35$$35$F$35$$35$44)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7394) VV$35$$35$F$35$$35$44)))
(check-sat)
(pop 1)
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$584 b$36$$35$$35$585 b$36$$35$$35$586 b$36$$35$$35$43 b$36$$35$$35$587 b$36$$35$$35$588 b$36$$35$$35$589 b$36$$35$$35$590 b$36$$35$$35$47 b$36$$35$$35$1875 b$36$$35$$35$93))
(push 1)
(assert (not (apply$35$$35$1 (as is$36$Binomial.Node Int) VV$35$$35$F$35$$35$43)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$43) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$43 (apply$35$$35$0 (as fst Int) ds_dj8u))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$43) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (= t$35$$35$aj09 (apply$35$$35$0 (as fst Int) ds_dj8u)) b$36$$35$$35$97 b$36$$35$$35$584 b$36$$35$$35$585 b$36$$35$$35$586 b$36$$35$$35$43 b$36$$35$$35$47 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aj09) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$35$$35$aj09)) (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aj09) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$35$$35$aj09)) (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aj09))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aj09) (apply$35$$35$0 (as Binomial.rank Int) t$35$$35$aj09)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aj09) 0)) b$36$$35$$35$1839 b$36$$35$$35$592 b$36$$35$$35$593 b$36$$35$$35$594 b$36$$35$$35$595 b$36$$35$$35$93))
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$38 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$38) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$38 (apply$35$$35$0 (as Binomial.subtrees Int) t$35$$35$aj09))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$38) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$38) (smt_map_cup (smt_map_sto (smt_map_def 0) t$35$$35$aj09 (+ 1 (smt_map_sel (smt_map_def 0) t$35$$35$aj09))) (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$38))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI VV$35$$35$F$35$$35$38)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$38) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$38 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$38) (smt_map_def 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$38) t$35$$35$aj09)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$38) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$38) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (smt_map_cup (smt_map_sto (smt_map_def 0) (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aj09) (+ 1 (smt_map_sel (smt_map_def 0) (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aj09)))) (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$38)) (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aj09))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$38) (apply$35$$35$0 (as Binomial.size Int) h$35$$35$aiOM))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$38) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$38) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI))))
(check-sat)
(pop 1)
(push 1)
(assert (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$38)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$38) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$38) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$38) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$38) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$38) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$38) (smt_map_def 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$38) t$35$$35$aj09)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$38 (apply$35$$35$0 (as Binomial.unheap Int) h$35$$35$aiOM))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$38 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$38) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$38 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$38) (apply$35$$35$0 (as Binomial.rank Int) t$35$$35$aj09))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$38) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$38 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI)))
(check-sat)
(pop 1)
(push 1)
(assert (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$38)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$38 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$38))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$38) (apply$35$$35$3 (as Binomial.elts Int) h$35$$35$aiOM))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$38) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aj09) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$38 (apply$35$$35$0 (as snd Int) ds_dj8u))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$38) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$38) (smt_map_sto (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) t$35$$35$aj09 (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) t$35$$35$aj09))))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (+ 1 (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$38)) (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aj09))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$38) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aj09) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< 0 (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$38))))
(check-sat)
(pop 1)
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (and (exists ((lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6107 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6107 Int) (lq_karg$36$VV$35$$35$6106$35$$35$k_$35$$35$6107 Int)) (and (= lq_karg$36$VV$35$$35$6106$35$$35$k_$35$$35$6107 VV$35$$35$F$35$$35$40) (= lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6107 h$35$$35$aiOM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6107 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (exists ((VV$35$$35$F$35$$35$46 Int) (VV$35$$35$7399 Int) (VV$35$$35$7407 Int)) (and (exists ((lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6068 Int) (lq_karg$36$VV$35$$35$6067$35$$35$k_$35$$35$6068 Int)) (and (= lq_karg$36$VV$35$$35$6067$35$$35$k_$35$$35$6068 VV$35$$35$F$35$$35$46) (= lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6068 h$35$$35$aiOM) (exists ((VV$35$$35$F$35$$35$48 Int) (VV$35$$35$7418 Int)) (and (= VV$35$$35$7418 h$35$$35$aiOM) (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$7418) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$7418))) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$7418) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$7418))) (>= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$7418) 0) (< 0 (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$7418))) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$7418)) (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$7418)) (= lq_karg$36$VV$35$$35$6067$35$$35$k_$35$$35$6068 VV$35$$35$F$35$$35$48) (= lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6068 h$35$$35$aiOM))))) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7399) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$7399) 0)) (= VV$35$$35$7399 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$7399) (apply$35$$35$3 (as Binomial.elts Int) h$35$$35$aiOM)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7399) (apply$35$$35$0 (as Binomial.size Int) h$35$$35$aiOM)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7399) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$7399) 0) (< 0 (apply$35$$35$0 (as len Int) VV$35$$35$7399)) (<= (apply$35$$35$0 (as len Int) VV$35$$35$7399) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7399)) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$7407) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7407)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7407) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7407)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7407))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7407) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$7407)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7407) 0) (= lq_karg$36$VV$35$$35$6106$35$$35$k_$35$$35$6107 VV$35$$35$F$35$$35$46) (= lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6107 h$35$$35$aiOM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6107 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI))))) (= t$35$$35$aj09 (apply$35$$35$0 (as fst Int) ds_dj8u))) (<= (apply$35$$35$0 (as Binomial.root Int) (apply$35$$35$0 (as fst Int) ds_dj8u)) VV$35$$35$F$35$$35$40) b$36$$35$$35$97 b$36$$35$$35$584 b$36$$35$$35$585 b$36$$35$$35$586 b$36$$35$$35$43 b$36$$35$$35$47 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aj09) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$35$$35$aj09)) (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aj09) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$35$$35$aj09)) (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aj09))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aj09) (apply$35$$35$0 (as Binomial.rank Int) t$35$$35$aj09)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aj09) 0)) b$36$$35$$35$592 b$36$$35$$35$593 b$36$$35$$35$594 b$36$$35$$35$786 b$36$$35$$35$595 b$36$$35$$35$787 b$36$$35$$35$93))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$40 (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7383))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as Binomial.root Int) (apply$35$$35$0 (as fst Int) ds_dj8u)) VV$35$$35$F$35$$35$40)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aj09) VV$35$$35$F$35$$35$40)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$40 (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aj09))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7383) VV$35$$35$F$35$$35$40)))
(check-sat)
(pop 1)
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (= t$35$$35$aj09 (apply$35$$35$0 (as fst Int) ds_dj8u)) b$36$$35$$35$97 b$36$$35$$35$584 b$36$$35$$35$585 b$36$$35$$35$586 b$36$$35$$35$43 b$36$$35$$35$47 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aj09) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$35$$35$aj09)) (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aj09) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$35$$35$aj09)) (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aj09))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aj09) (apply$35$$35$0 (as Binomial.rank Int) t$35$$35$aj09)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aj09) 0)) b$36$$35$$35$592 b$36$$35$$35$593 b$36$$35$$35$594 b$36$$35$$35$786 b$36$$35$$35$595 b$36$$35$$35$1846 b$36$$35$$35$93))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$39 t$35$$35$aj09)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$39) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aj09) (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aj09)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$39) VV$35$$35$7375)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= t$35$$35$aj09 VV$35$$35$F$35$$35$39)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$39) VV$35$$35$7375)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as Binomial.rank Int) t$35$$35$aj09) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$39))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$39 t$35$$35$aj09)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$39) (apply$35$$35$0 (as Binomial.rank Int) t$35$$35$aj09))))
(check-sat)
(pop 1)
(push 1)
(assert (not (apply$35$$35$1 (as is$36$Binomial.Node Int) VV$35$$35$F$35$$35$39)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$39 t$35$$35$aj09)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$39 (apply$35$$35$0 (as fst Int) ds_dj8u))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$39) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$39 t$35$$35$aj09)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$39 t$35$$35$aj09))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$39) (+ (apply$35$$35$0 (as Binomial.rank Int) t$35$$35$aj09) 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$39 t$35$$35$aj09)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$39) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aj09) (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aj09)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$39) lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI)))
(check-sat)
(pop 1)
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$2969 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$2969 Int) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$2969 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$2969 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$2969 Int) (lq_karg$36$VV$35$$35$2968$35$$35$k_$35$$35$2969 Int) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$2969 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$2969 Int)) (and (= lq_karg$36$VV$35$$35$2968$35$$35$k_$35$$35$2969 VV$35$$35$F$35$$35$351) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$2969 ds_dj1J) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$2969 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$2969 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$2969 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$2969 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$2969 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$2969 t$35$$35$aiOu) (exists ((VV$35$$35$F$35$$35$353 Int) (VV$35$$35$10253 Int) (VV$35$$35$10261 Int)) (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10253) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$10253) 0)) (= VV$35$$35$10253 ds_dj2p) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10253) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$10253) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$10253) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10253)) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10261) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10261)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10261) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10261)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10261))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10261) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10261)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10261) 0) (= lq_karg$36$VV$35$$35$2968$35$$35$k_$35$$35$2969 VV$35$$35$F$35$$35$353) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$2969 ds_dj1J) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$2969 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$2969 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$2969 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$2969 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$2969 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$2969 t$35$$35$aiOu))))) b$36$$35$$35$97 b$36$$35$$35$325 b$36$$35$$35$326 b$36$$35$$35$1322 b$36$$35$$35$330 b$36$$35$$35$43 b$36$$35$$35$331 b$36$$35$$35$332 b$36$$35$$35$333 b$36$$35$$35$334 b$36$$35$$35$47 b$36$$35$$35$340 b$36$$35$$35$341 b$36$$35$$35$342 b$36$$35$$35$343 b$36$$35$$35$344 b$36$$35$$35$345 b$36$$35$$35$346 b$36$$35$$35$347 b$36$$35$$35$348 b$36$$35$$35$93))
(push 1)
(assert (not (<= (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) VV$35$$35$F$35$$35$351)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$351 (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aiOu))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aiOu) VV$35$$35$F$35$$35$351)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$351 (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10248))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10248) VV$35$$35$F$35$$35$351)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as Binomial.root Int) (apply$35$$35$0 (as fst Int) ds_dj1U)) VV$35$$35$F$35$$35$351)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$351 (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$325 b$36$$35$$35$326 b$36$$35$$35$2023 b$36$$35$$35$330 b$36$$35$$35$43 b$36$$35$$35$331 b$36$$35$$35$332 b$36$$35$$35$333 b$36$$35$$35$334 b$36$$35$$35$47 b$36$$35$$35$340 b$36$$35$$35$341 b$36$$35$$35$342 b$36$$35$$35$343 b$36$$35$$35$344 b$36$$35$$35$345 b$36$$35$$35$346 b$36$$35$$35$347 b$36$$35$$35$348 b$36$$35$$35$93))
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$350) (+ (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$350) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOu) (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOu)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$350) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOu) (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$350) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as Binomial.rank Int) t$35$$35$aiOu) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$350))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$350 t$35$$35$aiOu)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$350) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$350 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$350) (+ (apply$35$$35$0 (as Binomial.rank Int) t$35$$35$aiOu) 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$350) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$350) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$350) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= t$35$$35$aiOu VV$35$$35$F$35$$35$350)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$350 (apply$35$$35$0 (as fst Int) ds_dj1U))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$350 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$350 t$35$$35$aiOu)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$350) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$350) (apply$35$$35$0 (as Binomial.rank Int) t$35$$35$aiOu))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$350) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOu)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (apply$35$$35$1 (as is$36$Binomial.Node Int) VV$35$$35$F$35$$35$350)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$350) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$350 t$35$$35$aiOu)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$350) ds_dj2p)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$350 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$350) ds_dj1J)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$350) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOu) (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOu)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$350 t$35$$35$aiOu)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$350 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$350 t$35$$35$aiOu)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$350) ds_dj1J)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$350))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$350) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$350) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$350 t$35$$35$aiOu))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$350) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOu) (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$350 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$350) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOu)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$350) ds_dj2p)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= lq_anf$36$$35$$35$7205759403792867276$35$$35$djak VV$35$$35$F$35$$35$350)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$350 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak)))
(check-sat)
(pop 1)
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (= t$39$$35$$35$aiUT (apply$35$$35$0 (as fst Int) ds_dj1U)) b$36$$35$$35$352 b$36$$35$$35$97 b$36$$35$$35$353 b$36$$35$$35$325 b$36$$35$$35$326 b$36$$35$$35$330 b$36$$35$$35$43 b$36$$35$$35$331 b$36$$35$$35$332 b$36$$35$$35$333 b$36$$35$$35$334 b$36$$35$$35$47 b$36$$35$$35$340 b$36$$35$$35$341 b$36$$35$$35$342 b$36$$35$$35$343 b$36$$35$$35$344 b$36$$35$$35$93 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) t$39$$35$$35$aiUT) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$39$$35$$35$aiUT)) (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$39$$35$$35$aiUT)) (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) t$39$$35$$35$aiUT) (apply$35$$35$0 (as Binomial.rank Int) t$39$$35$$35$aiUT)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) t$39$$35$$35$aiUT) 0)) b$36$$35$$35$350 b$36$$35$$35$351 b$36$$35$$35$1983))
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as len Int) ds_dj2p))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (smt_map_sto (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak (+ 1 (smt_map_sel (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak))) (apply$35$$35$3 (as Binomial.listElts Int) ds_dj1J)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj1J) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj1J)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (smt_map_sto (smt_map_def 0) t$35$$35$aiOu (+ 1 (smt_map_sel (smt_map_def 0) t$35$$35$aiOu))) (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOu) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$345) t$39$$35$$35$aiUT)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as len Int) ds_dj1J))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOu) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (smt_map_sto (smt_map_def 0) t$35$$35$aiOu (+ 1 (smt_map_sel (smt_map_def 0) t$35$$35$aiOu))) (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$345 ds_dj2p))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj2p)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$345 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOu) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$345 ds_dj1J)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$345 (apply$35$$35$0 (as Binomial.subtrees Int) t$35$$35$aiOu))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj2p)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$345 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$345))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as len Int) ds_dj1J))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$39$$35$$35$aiUT) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (smt_map_sto (smt_map_def 0) t$39$$35$$35$aiUT (+ 1 (smt_map_sel (smt_map_def 0) t$39$$35$$35$aiUT))) (apply$35$$35$3 (as Binomial.listElts Int) ds_dj2p)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$345 ds_dj2p)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$345 ds_dj1J)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (smt_map_sto (smt_map_def 0) t$39$$35$$35$aiUT (+ 1 (smt_map_sel (smt_map_def 0) t$39$$35$$35$aiUT))) (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$345) ds_dj1J)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj2p)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj1J)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$39$$35$$35$aiUT) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$345) (smt_map_def 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj1J)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$345 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj1J) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (smt_map_sto (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak (+ 1 (smt_map_sel (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak))) (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj2p))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as len Int) ds_dj1J))))
(check-sat)
(pop 1)
(push 1)
(assert (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$345)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as len Int) ds_dj1J))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$345) ds_dj2p)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$345 ds_dj2p)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$345) (smt_map_sto (apply$35$$35$3 (as fromList Int) ds_dj2p) t$39$$35$$35$aiUT (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ds_dj2p) t$39$$35$$35$aiUT))))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as Binomial.rank Int) t$35$$35$aiOu))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOu) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$345 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$345) (smt_map_sto (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) t$35$$35$aiOu (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) t$35$$35$aiOu))))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$345 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$345) (smt_map_sto (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) t$39$$35$$35$aiUT (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) t$39$$35$$35$aiUT))))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$345) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$345 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj2p) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj1J))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$345) ds_dj2p)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$345) (smt_map_sto (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) t$39$$35$$35$aiUT (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) t$39$$35$$35$aiUT))))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (+ 1 (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345)) (apply$35$$35$0 (as Binomial.treeSize Int) t$39$$35$$35$aiUT))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$345) (smt_map_sto (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) t$35$$35$aiOu (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) t$35$$35$aiOu))))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$345 ds_dj2p)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj1J)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (+ 1 (apply$35$$35$0 (as len Int) ds_dj1J)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOu) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj2p)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$345) t$39$$35$$35$aiUT)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8 VV$35$$35$F$35$$35$345)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (smt_map_sto (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak (+ 1 (smt_map_sel (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak))) (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$345) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$345) t$35$$35$aiOu)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj1J) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj1J) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as len Int) ds_dj1J))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj1J)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOu) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj1J)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$345) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (smt_map_sto (smt_map_def 0) t$35$$35$aiOu (+ 1 (smt_map_sel (smt_map_def 0) t$35$$35$aiOu))) (apply$35$$35$3 (as Binomial.listElts Int) ds_dj1J)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj2p) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj1J)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (+ 1 (apply$35$$35$0 (as len Int) ds_dj2p)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj1J)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj2p)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj1J) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$345))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj1J) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$345 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$345) (smt_map_sto (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak))))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$345) (smt_map_sto (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak))))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as len Int) ds_dj2p))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj2p) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj2p)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj2p) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$345) (smt_map_def 0))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (smt_map_sto (smt_map_def 0) t$39$$35$$35$aiUT (+ 1 (smt_map_sel (smt_map_def 0) t$39$$35$$35$aiUT))) (apply$35$$35$3 (as Binomial.listElts Int) ds_dj1J)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$345 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj2p))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj2p) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$345) t$35$$35$aiOu)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj2p) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj1J) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj1J)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (smt_map_cup (smt_map_sto (smt_map_def 0) (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aiOu) (+ 1 (smt_map_sel (smt_map_def 0) (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aiOu)))) (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345)) (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOu))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj2p) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa VV$35$$35$F$35$$35$345)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj1J) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj2p)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as Binomial.rank Int) t$39$$35$$35$aiUT))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (smt_map_sto (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak (+ 1 (smt_map_sel (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak))) (apply$35$$35$3 (as Binomial.listElts Int) ds_dj2p)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$345 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj1J))))
(check-sat)
(pop 1)
(push 1)
(assert (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$345)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as len Int) ds_dj2p))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj1J)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$345 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj1J) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj1J)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (smt_map_sto (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak (+ 1 (smt_map_sel (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak))) (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$39$$35$$35$aiUT) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$345) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$345 ds_dj2p)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (smt_map_sto (smt_map_def 0) t$39$$35$$35$aiUT (+ 1 (smt_map_sel (smt_map_def 0) t$39$$35$$35$aiUT))) (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< 0 (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= lq_anf$36$$35$$35$7205759403792867277$35$$35$djal VV$35$$35$F$35$$35$345)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$345) (smt_map_sto (apply$35$$35$3 (as fromList Int) ds_dj2p) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ds_dj2p) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak))))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= ds_dj1J VV$35$$35$F$35$$35$345)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$345 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$39$$35$$35$aiUT) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj2p)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$345) (smt_map_sto (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) t$35$$35$aiOu (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) t$35$$35$aiOu))))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$345) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$39$$35$$35$aiUT) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$345) ds_dj1J)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$345 ds_dj2p)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj2p)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$345) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$345 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$345 (apply$35$$35$0 (as snd Int) ds_dj1U))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$345 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj1J)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj2p)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$345 ds_dj1J)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$39$$35$$35$aiUT) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj1J)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj2p) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (smt_map_cup (smt_map_sto (smt_map_def 0) (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT) (+ 1 (smt_map_sel (smt_map_def 0) (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT)))) (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345)) (apply$35$$35$3 (as Binomial.treeElts Int) t$39$$35$$35$aiUT))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$345) (smt_map_sto (apply$35$$35$3 (as fromList Int) ds_dj1J) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ds_dj1J) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak))))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$345) (smt_map_sto (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak))))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$345) (smt_map_sto (apply$35$$35$3 (as fromList Int) ds_dj1J) t$35$$35$aiOu (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ds_dj1J) t$35$$35$aiOu))))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$39$$35$$35$aiUT) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj1J)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$345 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (smt_map_cup (smt_map_sto (smt_map_def 0) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (+ 1 (smt_map_sel (smt_map_def 0) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak)))) (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345)) (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (+ 1 (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345)) (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOu))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$345 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOu) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$345) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as len Int) ds_dj2p))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$345 ds_dj1J)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$345 (apply$35$$35$0 (as Binomial.subtrees Int) t$39$$35$$35$aiUT))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$345 (apply$35$$35$0 (as Binomial.subtrees Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj2p) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj2p)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$345) (smt_map_sto (apply$35$$35$3 (as fromList Int) ds_dj1J) t$39$$35$$35$aiUT (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ds_dj1J) t$39$$35$$35$aiUT))))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj2p)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$345 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (smt_map_sto (smt_map_def 0) t$39$$35$$35$aiUT (+ 1 (smt_map_sel (smt_map_def 0) t$39$$35$$35$aiUT))) (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$345) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$39$$35$$35$aiUT) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj2p)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$345) (smt_map_sto (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) t$39$$35$$35$aiUT (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) t$39$$35$$35$aiUT))))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$39$$35$$35$aiUT) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj2p) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj1J)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$345 ds_dj1J)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$345 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= ds_dj2p VV$35$$35$F$35$$35$345)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (+ 1 (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345)) (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOu) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj1J)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$39$$35$$35$aiUT) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj1J) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj2p)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$345 ds_dj1J))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$345) (smt_map_sto (apply$35$$35$3 (as fromList Int) ds_dj2p) t$35$$35$aiOu (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ds_dj2p) t$35$$35$aiOu))))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as len Int) ds_dj2p))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (smt_map_sto (smt_map_def 0) t$35$$35$aiOu (+ 1 (smt_map_sel (smt_map_def 0) t$35$$35$aiOu))) (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$345) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (smt_map_sto (smt_map_def 0) t$35$$35$aiOu (+ 1 (smt_map_sel (smt_map_def 0) t$35$$35$aiOu))) (apply$35$$35$3 (as Binomial.listElts Int) ds_dj2p)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOu) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj2p)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj2p)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$345 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$345) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$345) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOu) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal)))))
(check-sat)
(pop 1)
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (and (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$2969 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$2969 Int) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$2969 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$2969 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$2969 Int) (lq_karg$36$VV$35$$35$2968$35$$35$k_$35$$35$2969 Int) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$2969 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$2969 Int)) (and (= lq_karg$36$VV$35$$35$2968$35$$35$k_$35$$35$2969 VV$35$$35$F$35$$35$347) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$2969 ds_dj1J) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$2969 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$2969 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$2969 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$2969 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$2969 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$2969 t$35$$35$aiOu) (exists ((VV$35$$35$F$35$$35$353 Int) (VV$35$$35$10253 Int) (VV$35$$35$10261 Int)) (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10253) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$10253) 0)) (= VV$35$$35$10253 ds_dj2p) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10253) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$10253) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$10253) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10253)) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10261) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10261)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10261) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10261)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10261))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10261) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10261)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10261) 0) (= lq_karg$36$VV$35$$35$2968$35$$35$k_$35$$35$2969 VV$35$$35$F$35$$35$353) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$2969 ds_dj1J) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$2969 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$2969 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$2969 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$2969 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$2969 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$2969 t$35$$35$aiOu))))) (= t$39$$35$$35$aiUT (apply$35$$35$0 (as fst Int) ds_dj1U))) b$36$$35$$35$352 b$36$$35$$35$97 b$36$$35$$35$353 b$36$$35$$35$325 b$36$$35$$35$1318 b$36$$35$$35$326 b$36$$35$$35$1319 b$36$$35$$35$330 b$36$$35$$35$43 b$36$$35$$35$331 b$36$$35$$35$332 b$36$$35$$35$333 b$36$$35$$35$334 (<= (apply$35$$35$0 (as Binomial.root Int) (apply$35$$35$0 (as fst Int) ds_dj1U)) VV$35$$35$F$35$$35$347) b$36$$35$$35$47 b$36$$35$$35$340 b$36$$35$$35$341 b$36$$35$$35$342 b$36$$35$$35$343 b$36$$35$$35$344 b$36$$35$$35$93 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) t$39$$35$$35$aiUT) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$39$$35$$35$aiUT)) (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$39$$35$$35$aiUT)) (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) t$39$$35$$35$aiUT) (apply$35$$35$0 (as Binomial.rank Int) t$39$$35$$35$aiUT)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) t$39$$35$$35$aiUT) 0)) b$36$$35$$35$350 b$36$$35$$35$351))
(push 1)
(assert (not (<= (apply$35$$35$0 (as Binomial.root Int) (apply$35$$35$0 (as fst Int) ds_dj1U)) VV$35$$35$F$35$$35$347)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10237) VV$35$$35$F$35$$35$347)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aiOu) VV$35$$35$F$35$$35$347)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$347 (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10237))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$347 (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) VV$35$$35$F$35$$35$347)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$347 (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT) VV$35$$35$F$35$$35$347)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$347 (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aiOu))))
(check-sat)
(pop 1)
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (= t$39$$35$$35$aiUT (apply$35$$35$0 (as fst Int) ds_dj1U)) b$36$$35$$35$352 b$36$$35$$35$97 b$36$$35$$35$353 b$36$$35$$35$325 b$36$$35$$35$1318 b$36$$35$$35$326 b$36$$35$$35$1991 b$36$$35$$35$330 b$36$$35$$35$43 b$36$$35$$35$331 b$36$$35$$35$332 b$36$$35$$35$333 b$36$$35$$35$334 b$36$$35$$35$47 b$36$$35$$35$340 b$36$$35$$35$341 b$36$$35$$35$342 b$36$$35$$35$343 b$36$$35$$35$344 b$36$$35$$35$93 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) t$39$$35$$35$aiUT) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$39$$35$$35$aiUT)) (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$39$$35$$35$aiUT)) (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) t$39$$35$$35$aiUT) (apply$35$$35$0 (as Binomial.rank Int) t$39$$35$$35$aiUT)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) t$39$$35$$35$aiUT) 0)) b$36$$35$$35$350 b$36$$35$$35$351))
(push 1)
(assert (not (<= lq_anf$36$$35$$35$7205759403792867276$35$$35$djak VV$35$$35$F$35$$35$346)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$346 t$35$$35$aiOu)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$346 t$39$$35$$35$aiUT)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$346) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$346) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$346 t$39$$35$$35$aiUT)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$346) (apply$35$$35$0 (as Binomial.rank Int) t$39$$35$$35$aiUT))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$346) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOu) (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOu)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$346) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$39$$35$$35$aiUT) (apply$35$$35$0 (as Binomial.treeSize Int) t$39$$35$$35$aiUT)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$346) lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$346 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= t$35$$35$aiOu VV$35$$35$F$35$$35$346)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$346) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$346 t$39$$35$$35$aiUT))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$346) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOu) (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$346 t$35$$35$aiOu)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$346) VV$35$$35$10229)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$346) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$39$$35$$35$aiUT) (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOu)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$346) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$39$$35$$35$aiUT) (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$346) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOu) (apply$35$$35$3 (as Binomial.treeElts Int) t$39$$35$$35$aiUT)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$346) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$39$$35$$35$aiUT) (apply$35$$35$3 (as Binomial.treeElts Int) t$39$$35$$35$aiUT)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$346 t$39$$35$$35$aiUT)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$346) (+ (apply$35$$35$0 (as Binomial.rank Int) t$39$$35$$35$aiUT) 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$346) ds_dj2p)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$346) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOu) (apply$35$$35$0 (as Binomial.treeSize Int) t$39$$35$$35$aiUT)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$346) (+ (apply$35$$35$0 (as Binomial.rank Int) t$35$$35$aiOu) 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$346) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOu) (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOu)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$346 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as Binomial.rank Int) t$35$$35$aiOu) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$346))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$346) ds_dj1J)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$346 t$39$$35$$35$aiUT)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$346 (apply$35$$35$0 (as fst Int) ds_dj1U))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$346 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$346) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$39$$35$$35$aiUT) (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOu)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$346 t$35$$35$aiOu)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= t$39$$35$$35$aiUT VV$35$$35$F$35$$35$346)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$346) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOu) (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$346) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOu)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$346) (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$346 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$346 t$39$$35$$35$aiUT)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$346) VV$35$$35$10229)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$346) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$346) ds_dj2p)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$346) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$346) lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$346 t$35$$35$aiOu)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$346) (apply$35$$35$0 (as Binomial.rank Int) t$35$$35$aiOu))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$346) lq_anf$36$$35$$35$7205759403792867277$35$$35$djal)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$346) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (apply$35$$35$3 (as Binomial.treeElts Int) t$39$$35$$35$aiUT)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$346) ds_dj1J)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$346) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$39$$35$$35$aiUT) (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$346 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$346 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak)))
(check-sat)
(pop 1)
(push 1)
(assert (not (apply$35$$35$1 (as is$36$Binomial.Node Int) VV$35$$35$F$35$$35$346)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$346 t$35$$35$aiOu)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as Binomial.rank Int) t$39$$35$$35$aiUT) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$346))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$346) (+ (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$346 t$35$$35$aiOu))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$346) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (apply$35$$35$0 (as Binomial.treeSize Int) t$39$$35$$35$aiUT)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as Binomial.rank Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$346))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$346) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOu)))))
(check-sat)
(pop 1)
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
(pop 1)
(push 1)
(push 1)
(assert (and true b$36$$35$$35$512 b$36$$35$$35$97 b$36$$35$$35$513 b$36$$35$$35$482 b$36$$35$$35$514 b$36$$35$$35$483 b$36$$35$$35$484 b$36$$35$$35$485 b$36$$35$$35$486 b$36$$35$$35$489 b$36$$35$$35$490 b$36$$35$$35$43 b$36$$35$$35$491 b$36$$35$$35$492 b$36$$35$$35$493 b$36$$35$$35$47 b$36$$35$$35$497 b$36$$35$$35$498 b$36$$35$$35$499 b$36$$35$$35$500 b$36$$35$$35$501 b$36$$35$$35$502 b$36$$35$$35$503 b$36$$35$$35$504 b$36$$35$$35$505 b$36$$35$$35$506 b$36$$35$$35$507 b$36$$35$$35$508 b$36$$35$$35$93 b$36$$35$$35$477 b$36$$35$$35$509 b$36$$35$$35$1789 b$36$$35$$35$478 b$36$$35$$35$510 b$36$$35$$35$479 b$36$$35$$35$511))
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$128) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) ts1$35$$35$aiOS) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj6F)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$97 b$36$$35$$35$43 b$36$$35$$35$1067 b$36$$35$$35$461 b$36$$35$$35$462 b$36$$35$$35$47 b$36$$35$$35$463 b$36$$35$$35$464 b$36$$35$$35$465 b$36$$35$$35$466 b$36$$35$$35$467 b$36$$35$$35$469 b$36$$35$$35$470 b$36$$35$$35$471 b$36$$35$$35$93 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$160) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$160)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$160) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$160)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$160))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$160) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$160)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$160) 0))))
(push 1)
(assert (not (> lq_anf$36$$35$$35$7205759403792867320$35$$35$djb2 (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$160))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$448 b$36$$35$$35$97 b$36$$35$$35$449 b$36$$35$$35$450 b$36$$35$$35$43 b$36$$35$$35$427 b$36$$35$$35$428 b$36$$35$$35$429 b$36$$35$$35$47 b$36$$35$$35$435 b$36$$35$$35$436 b$36$$35$$35$437 b$36$$35$$35$438 b$36$$35$$35$439 b$36$$35$$35$440 b$36$$35$$35$441 b$36$$35$$35$442 b$36$$35$$35$443 b$36$$35$$35$444 b$36$$35$$35$93 b$36$$35$$35$445 b$36$$35$$35$446 b$36$$35$$35$447 b$36$$35$$35$1791))
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$192) (apply$35$$35$0 (as Binomial.rank Int) t$35$$35$aiOn))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$1794 b$36$$35$$35$325 b$36$$35$$35$326 b$36$$35$$35$330 b$36$$35$$35$43 b$36$$35$$35$331 b$36$$35$$35$332 b$36$$35$$35$333 b$36$$35$$35$334 b$36$$35$$35$47 b$36$$35$$35$340 b$36$$35$$35$341 b$36$$35$$35$342 b$36$$35$$35$343 b$36$$35$$35$93))
(push 1)
(assert (not (< 0 (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$352))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$1795 b$36$$35$$35$168 b$36$$35$$35$169 b$36$$35$$35$170 b$36$$35$$35$43 b$36$$35$$35$171 b$36$$35$$35$172 b$36$$35$$35$47 b$36$$35$$35$93))
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) ds_dj3J)) VV$35$$35$F$35$$35$512)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$1797 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$568 b$36$$35$$35$569 b$36$$35$$35$570 b$36$$35$$35$571 b$36$$35$$35$572 b$36$$35$$35$93))
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$65) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj0Y) (apply$35$$35$3 (as Binomial.treeListElts Int) acc$35$$35$aiOI)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$512 b$36$$35$$35$97 b$36$$35$$35$513 b$36$$35$$35$482 b$36$$35$$35$514 b$36$$35$$35$483 b$36$$35$$35$484 b$36$$35$$35$485 b$36$$35$$35$486 b$36$$35$$35$1798 b$36$$35$$35$489 b$36$$35$$35$490 b$36$$35$$35$43 b$36$$35$$35$491 b$36$$35$$35$492 b$36$$35$$35$493 b$36$$35$$35$47 b$36$$35$$35$497 b$36$$35$$35$498 b$36$$35$$35$499 b$36$$35$$35$500 b$36$$35$$35$501 b$36$$35$$35$502 b$36$$35$$35$503 b$36$$35$$35$504 b$36$$35$$35$505 b$36$$35$$35$506 b$36$$35$$35$507 b$36$$35$$35$508 b$36$$35$$35$93 b$36$$35$$35$477 b$36$$35$$35$509 b$36$$35$$35$478 b$36$$35$$35$510 b$36$$35$$35$479 b$36$$35$$35$511))
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$129) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$35$$35$aiOS) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj6F)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$97 b$36$$35$$35$43 b$36$$35$$35$1067 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$8881) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$8881)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$8881) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$8881)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$8881))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$8881) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$8881)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$8881) 0)) b$36$$35$$35$461 b$36$$35$$35$462 b$36$$35$$35$47 b$36$$35$$35$463 b$36$$35$$35$464 b$36$$35$$35$465 b$36$$35$$35$466 b$36$$35$$35$467 b$36$$35$$35$469 b$36$$35$$35$470 b$36$$35$$35$471 b$36$$35$$35$93))
(push 1)
(assert (not (<= x$35$$35$aiOs VV$35$$35$F$35$$35$161)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$288 b$36$$35$$35$97 b$36$$35$$35$289 b$36$$35$$35$290 b$36$$35$$35$292 b$36$$35$$35$293 b$36$$35$$35$294 b$36$$35$$35$295 b$36$$35$$35$296 b$36$$35$$35$43 b$36$$35$$35$1803 b$36$$35$$35$269 b$36$$35$$35$270 b$36$$35$$35$47 b$36$$35$$35$271 b$36$$35$$35$273 b$36$$35$$35$274 b$36$$35$$35$275 b$36$$35$$35$276 b$36$$35$$35$277 b$36$$35$$35$281 b$36$$35$$35$282 b$36$$35$$35$283 b$36$$35$$35$284 b$36$$35$$35$93 b$36$$35$$35$285 b$36$$35$$35$286 b$36$$35$$35$287))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$417 (+ 1 (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOD)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$43 b$36$$35$$35$1805 b$36$$35$$35$47 b$36$$35$$35$568 b$36$$35$$35$569 b$36$$35$$35$570 b$36$$35$$35$571 b$36$$35$$35$572 b$36$$35$$35$93))
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$66) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj0Y) (apply$35$$35$0 (as Binomial.treeListSize Int) acc$35$$35$aiOI)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$325 b$36$$35$$35$326 b$36$$35$$35$330 b$36$$35$$35$43 b$36$$35$$35$331 b$36$$35$$35$332 b$36$$35$$35$333 b$36$$35$$35$334 b$36$$35$$35$47 b$36$$35$$35$335 b$36$$35$$35$336 b$36$$35$$35$1808 b$36$$35$$35$338 b$36$$35$$35$93))
(push 1)
(assert (not (= (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$354)) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as snd Int) VV$35$$35$F$35$$35$354))) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj1J))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$288 b$36$$35$$35$97 b$36$$35$$35$289 b$36$$35$$35$290 b$36$$35$$35$292 b$36$$35$$35$293 b$36$$35$$35$294 b$36$$35$$35$295 b$36$$35$$35$296 b$36$$35$$35$43 b$36$$35$$35$269 b$36$$35$$35$270 b$36$$35$$35$47 b$36$$35$$35$271 b$36$$35$$35$273 b$36$$35$$35$1809 b$36$$35$$35$274 b$36$$35$$35$275 b$36$$35$$35$276 b$36$$35$$35$277 b$36$$35$$35$281 b$36$$35$$35$282 b$36$$35$$35$283 b$36$$35$$35$284 b$36$$35$$35$93 b$36$$35$$35$285 b$36$$35$$35$286 b$36$$35$$35$287))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$418 1)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$ds_dj3v$35$$35$k_$35$$35$1252 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l$35$$35$k_$35$$35$1252 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j$35$$35$k_$35$$35$1252 Int) (lq_karg$36$ds_dj3t$35$$35$k_$35$$35$1252 Int) (lq_karg$36$ds_dj3u$35$$35$k_$35$$35$1252 Int) (lq_karg$36$ds_dj30$35$$35$k_$35$$35$1252 Int) (lq_karg$36$VV$35$$35$1251$35$$35$k_$35$$35$1252 Int) (lq_tmp$36$x$35$$35$1265 Int) (lq_karg$36$t$35$$35$aiNY$35$$35$k_$35$$35$1252 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m$35$$35$k_$35$$35$1252 Int)) (and (= lq_karg$36$VV$35$$35$1251$35$$35$k_$35$$35$1252 lq_anf$36$$35$$35$7205759403792867219$35$$35$dj9p) (= lq_karg$36$ds_dj30$35$$35$k_$35$$35$1252 ds_dj30) (= lq_karg$36$ds_dj3t$35$$35$k_$35$$35$1252 ds_dj3t) (= lq_karg$36$ds_dj3u$35$$35$k_$35$$35$1252 ds_dj3u) (= lq_karg$36$ds_dj3v$35$$35$k_$35$$35$1252 ds_dj3v) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j$35$$35$k_$35$$35$1252 lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l$35$$35$k_$35$$35$1252 lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m$35$$35$k_$35$$35$1252 lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m) (= lq_karg$36$t$35$$35$aiNY$35$$35$k_$35$$35$1252 t$35$$35$aiNY) (= lq_tmp$36$x$35$$35$1265 lq_anf$36$$35$$35$7205759403792867219$35$$35$dj9p) (exists ((VV$35$$35$F$35$$35$488 Int) (VV$35$$35$11353 Int) (VV$35$$35$11361 Int)) (and (exists ((lq_karg$36$ds_dj3t$35$$35$k_$35$$35$1229 Int) (lq_karg$36$t$35$$35$aiNY$35$$35$k_$35$$35$1229 Int) (lq_karg$36$ds_dj3u$35$$35$k_$35$$35$1229 Int) (lq_karg$36$ds_dj30$35$$35$k_$35$$35$1229 Int) (lq_karg$36$VV$35$$35$1228$35$$35$k_$35$$35$1229 Int) (lq_karg$36$ds_dj3v$35$$35$k_$35$$35$1229 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j$35$$35$k_$35$$35$1229 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l$35$$35$k_$35$$35$1229 Int)) (and (= lq_karg$36$VV$35$$35$1228$35$$35$k_$35$$35$1229 VV$35$$35$F$35$$35$488) (= lq_karg$36$ds_dj30$35$$35$k_$35$$35$1229 ds_dj30) (= lq_karg$36$ds_dj3t$35$$35$k_$35$$35$1229 ds_dj3t) (= lq_karg$36$ds_dj3u$35$$35$k_$35$$35$1229 ds_dj3u) (= lq_karg$36$ds_dj3v$35$$35$k_$35$$35$1229 ds_dj3v) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j$35$$35$k_$35$$35$1229 lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l$35$$35$k_$35$$35$1229 lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) (= lq_karg$36$t$35$$35$aiNY$35$$35$k_$35$$35$1229 t$35$$35$aiNY) (exists ((VV$35$$35$F$35$$35$492 Int) (VV$35$$35$11372 Int) (VV$35$$35$11380 Int)) (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11372) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$11372) 0)) (= VV$35$$35$11372 ds_dj30) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11372) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$11372) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$11372) 1) (<= (apply$35$$35$0 (as len Int) VV$35$$35$11372) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11372)) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$11380) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$11380)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$11380) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$11380)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$11380))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$11380) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$11380)) (> (apply$35$$35$0 (as len Int) VV$35$$35$11372) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$11380)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$11380) 0) (= lq_karg$36$VV$35$$35$1228$35$$35$k_$35$$35$1229 VV$35$$35$F$35$$35$492) (= lq_karg$36$ds_dj30$35$$35$k_$35$$35$1229 ds_dj30) (= lq_karg$36$ds_dj3t$35$$35$k_$35$$35$1229 ds_dj3t) (= lq_karg$36$ds_dj3u$35$$35$k_$35$$35$1229 ds_dj3u) (= lq_karg$36$ds_dj3v$35$$35$k_$35$$35$1229 ds_dj3v) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j$35$$35$k_$35$$35$1229 lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l$35$$35$k_$35$$35$1229 lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) (= lq_karg$36$t$35$$35$aiNY$35$$35$k_$35$$35$1229 t$35$$35$aiNY))))) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11353) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$11353) 0)) (= VV$35$$35$11353 lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m) (= VV$35$$35$11353 (apply$35$$35$0 (as Binomial.rankOfTailDecreases Int) ds_dj30)) (= VV$35$$35$11353 (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_dj30)) (= VV$35$$35$11353 (apply$35$$35$0 (as tail Int) ds_dj30)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11353) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$11353) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$11353) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11353)) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$11361) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$11361)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$11361) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$11361)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$11361))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$11361) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$11361)) (> (- (apply$35$$35$0 (as len Int) ds_dj30) 1) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$11361)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$11361) 0) (= lq_karg$36$VV$35$$35$1251$35$$35$k_$35$$35$1252 VV$35$$35$F$35$$35$488) (= lq_karg$36$ds_dj30$35$$35$k_$35$$35$1252 ds_dj30) (= lq_karg$36$ds_dj3t$35$$35$k_$35$$35$1252 ds_dj3t) (= lq_karg$36$ds_dj3u$35$$35$k_$35$$35$1252 ds_dj3u) (= lq_karg$36$ds_dj3v$35$$35$k_$35$$35$1252 ds_dj3v) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j$35$$35$k_$35$$35$1252 lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l$35$$35$k_$35$$35$1252 lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m$35$$35$k_$35$$35$1252 lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m) (= lq_karg$36$t$35$$35$aiNY$35$$35$k_$35$$35$1252 t$35$$35$aiNY))))) b$36$$35$$35$97 b$36$$35$$35$195 b$36$$35$$35$196 b$36$$35$$35$197 b$36$$35$$35$198 b$36$$35$$35$199 b$36$$35$$35$202 b$36$$35$$35$43 b$36$$35$$35$203 b$36$$35$$35$204 b$36$$35$$35$205 b$36$$35$$35$206 b$36$$35$$35$47 b$36$$35$$35$207 b$36$$35$$35$208 b$36$$35$$35$209 b$36$$35$$35$211 b$36$$35$$35$1811 b$36$$35$$35$212 b$36$$35$$35$213 b$36$$35$$35$214 b$36$$35$$35$93 b$36$$35$$35$190 b$36$$35$$35$191))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$482 (apply$35$$35$0 (as head Int) ds_dj30))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$162 b$36$$35$$35$163 b$36$$35$$35$164 b$36$$35$$35$165 b$36$$35$$35$166 b$36$$35$$35$167 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$1812 b$36$$35$$35$93 b$36$$35$$35$157 b$36$$35$$35$158))
(push 1)
(assert (not (= (= VV$35$$35$F$35$$35$514 0) (= (apply$35$$35$0 (as len Int) ds_dj3y) 0))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$553 b$36$$35$$35$554 b$36$$35$$35$43 b$36$$35$$35$555 b$36$$35$$35$556 b$36$$35$$35$557 b$36$$35$$35$558 b$36$$35$$35$47 b$36$$35$$35$562 b$36$$35$$35$563 b$36$$35$$35$564 b$36$$35$$35$565 b$36$$35$$35$1814 b$36$$35$$35$93))
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$67) (apply$35$$35$3 (as Binomial.elts Int) ds_dj19))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$43 b$36$$35$$35$524 b$36$$35$$35$525 b$36$$35$$35$526 b$36$$35$$35$47 b$36$$35$$35$527 b$36$$35$$35$528 b$36$$35$$35$529 b$36$$35$$35$530 b$36$$35$$35$531 b$36$$35$$35$532 b$36$$35$$35$533 b$36$$35$$35$534 b$36$$35$$35$1815 b$36$$35$$35$93))
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$F$35$$35$99) (smt_map_cup (apply$35$$35$3 (as Binomial.elts Int) ds_dj7z) (apply$35$$35$3 (as Binomial.elts Int) ds_dj7A)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$97 b$36$$35$$35$43 b$36$$35$$35$1067 b$36$$35$$35$1069 b$36$$35$$35$461 b$36$$35$$35$462 b$36$$35$$35$47 b$36$$35$$35$463 b$36$$35$$35$464 b$36$$35$$35$465 b$36$$35$$35$466 b$36$$35$$35$467 b$36$$35$$35$469 b$36$$35$$35$470 b$36$$35$$35$471 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$163) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$163)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$163) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$163)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$163))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$163) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$163)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$163) 0)) b$36$$35$$35$93))
(push 1)
(assert (not (> (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$4621) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$163))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$325 b$36$$35$$35$326 b$36$$35$$35$330 b$36$$35$$35$43 b$36$$35$$35$331 b$36$$35$$35$332 b$36$$35$$35$333 b$36$$35$$35$334 b$36$$35$$35$47 b$36$$35$$35$335 b$36$$35$$35$336 b$36$$35$$35$338 b$36$$35$$35$1818 b$36$$35$$35$93))
(push 1)
(assert (not (= (+ (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$355)) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as snd Int) VV$35$$35$F$35$$35$355))) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj1J))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$288 b$36$$35$$35$97 b$36$$35$$35$289 b$36$$35$$35$290 b$36$$35$$35$292 b$36$$35$$35$293 b$36$$35$$35$294 b$36$$35$$35$295 b$36$$35$$35$296 b$36$$35$$35$43 b$36$$35$$35$269 b$36$$35$$35$270 b$36$$35$$35$47 b$36$$35$$35$271 b$36$$35$$35$273 b$36$$35$$35$274 b$36$$35$$35$275 b$36$$35$$35$276 b$36$$35$$35$277 b$36$$35$$35$281 b$36$$35$$35$282 b$36$$35$$35$283 b$36$$35$$35$1819 b$36$$35$$35$284 b$36$$35$$35$93 b$36$$35$$35$285 b$36$$35$$35$286 b$36$$35$$35$287))
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$419) lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$ds_dj3v$35$$35$k_$35$$35$1252 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l$35$$35$k_$35$$35$1252 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j$35$$35$k_$35$$35$1252 Int) (lq_karg$36$ds_dj3t$35$$35$k_$35$$35$1252 Int) (lq_karg$36$ds_dj3u$35$$35$k_$35$$35$1252 Int) (lq_karg$36$ds_dj30$35$$35$k_$35$$35$1252 Int) (lq_karg$36$VV$35$$35$1251$35$$35$k_$35$$35$1252 Int) (lq_tmp$36$x$35$$35$1265 Int) (lq_karg$36$t$35$$35$aiNY$35$$35$k_$35$$35$1252 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m$35$$35$k_$35$$35$1252 Int)) (and (= lq_karg$36$VV$35$$35$1251$35$$35$k_$35$$35$1252 lq_anf$36$$35$$35$7205759403792867219$35$$35$dj9p) (= lq_karg$36$ds_dj30$35$$35$k_$35$$35$1252 ds_dj30) (= lq_karg$36$ds_dj3t$35$$35$k_$35$$35$1252 ds_dj3t) (= lq_karg$36$ds_dj3u$35$$35$k_$35$$35$1252 ds_dj3u) (= lq_karg$36$ds_dj3v$35$$35$k_$35$$35$1252 ds_dj3v) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j$35$$35$k_$35$$35$1252 lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l$35$$35$k_$35$$35$1252 lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m$35$$35$k_$35$$35$1252 lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m) (= lq_karg$36$t$35$$35$aiNY$35$$35$k_$35$$35$1252 t$35$$35$aiNY) (= lq_tmp$36$x$35$$35$1265 lq_anf$36$$35$$35$7205759403792867219$35$$35$dj9p) (exists ((VV$35$$35$F$35$$35$488 Int) (VV$35$$35$11353 Int) (VV$35$$35$11361 Int)) (and (exists ((lq_karg$36$ds_dj3t$35$$35$k_$35$$35$1229 Int) (lq_karg$36$t$35$$35$aiNY$35$$35$k_$35$$35$1229 Int) (lq_karg$36$ds_dj3u$35$$35$k_$35$$35$1229 Int) (lq_karg$36$ds_dj30$35$$35$k_$35$$35$1229 Int) (lq_karg$36$VV$35$$35$1228$35$$35$k_$35$$35$1229 Int) (lq_karg$36$ds_dj3v$35$$35$k_$35$$35$1229 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j$35$$35$k_$35$$35$1229 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l$35$$35$k_$35$$35$1229 Int)) (and (= lq_karg$36$VV$35$$35$1228$35$$35$k_$35$$35$1229 VV$35$$35$F$35$$35$488) (= lq_karg$36$ds_dj30$35$$35$k_$35$$35$1229 ds_dj30) (= lq_karg$36$ds_dj3t$35$$35$k_$35$$35$1229 ds_dj3t) (= lq_karg$36$ds_dj3u$35$$35$k_$35$$35$1229 ds_dj3u) (= lq_karg$36$ds_dj3v$35$$35$k_$35$$35$1229 ds_dj3v) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j$35$$35$k_$35$$35$1229 lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l$35$$35$k_$35$$35$1229 lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) (= lq_karg$36$t$35$$35$aiNY$35$$35$k_$35$$35$1229 t$35$$35$aiNY) (exists ((VV$35$$35$F$35$$35$492 Int) (VV$35$$35$11372 Int) (VV$35$$35$11380 Int)) (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11372) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$11372) 0)) (= VV$35$$35$11372 ds_dj30) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11372) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$11372) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$11372) 1) (<= (apply$35$$35$0 (as len Int) VV$35$$35$11372) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11372)) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$11380) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$11380)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$11380) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$11380)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$11380))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$11380) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$11380)) (> (apply$35$$35$0 (as len Int) VV$35$$35$11372) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$11380)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$11380) 0) (= lq_karg$36$VV$35$$35$1228$35$$35$k_$35$$35$1229 VV$35$$35$F$35$$35$492) (= lq_karg$36$ds_dj30$35$$35$k_$35$$35$1229 ds_dj30) (= lq_karg$36$ds_dj3t$35$$35$k_$35$$35$1229 ds_dj3t) (= lq_karg$36$ds_dj3u$35$$35$k_$35$$35$1229 ds_dj3u) (= lq_karg$36$ds_dj3v$35$$35$k_$35$$35$1229 ds_dj3v) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j$35$$35$k_$35$$35$1229 lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l$35$$35$k_$35$$35$1229 lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) (= lq_karg$36$t$35$$35$aiNY$35$$35$k_$35$$35$1229 t$35$$35$aiNY))))) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11353) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$11353) 0)) (= VV$35$$35$11353 lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m) (= VV$35$$35$11353 (apply$35$$35$0 (as Binomial.rankOfTailDecreases Int) ds_dj30)) (= VV$35$$35$11353 (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ds_dj30)) (= VV$35$$35$11353 (apply$35$$35$0 (as tail Int) ds_dj30)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11353) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$11353) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$11353) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11353)) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$11361) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$11361)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$11361) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$11361)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$11361))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$11361) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$11361)) (> (- (apply$35$$35$0 (as len Int) ds_dj30) 1) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$11361)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$11361) 0) (= lq_karg$36$VV$35$$35$1251$35$$35$k_$35$$35$1252 VV$35$$35$F$35$$35$488) (= lq_karg$36$ds_dj30$35$$35$k_$35$$35$1252 ds_dj30) (= lq_karg$36$ds_dj3t$35$$35$k_$35$$35$1252 ds_dj3t) (= lq_karg$36$ds_dj3u$35$$35$k_$35$$35$1252 ds_dj3u) (= lq_karg$36$ds_dj3v$35$$35$k_$35$$35$1252 ds_dj3v) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j$35$$35$k_$35$$35$1252 lq_anf$36$$35$$35$7205759403792867213$35$$35$dj9j) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l$35$$35$k_$35$$35$1252 lq_anf$36$$35$$35$7205759403792867215$35$$35$dj9l) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m$35$$35$k_$35$$35$1252 lq_anf$36$$35$$35$7205759403792867216$35$$35$dj9m) (= lq_karg$36$t$35$$35$aiNY$35$$35$k_$35$$35$1252 t$35$$35$aiNY))))) b$36$$35$$35$97 b$36$$35$$35$195 b$36$$35$$35$196 b$36$$35$$35$197 b$36$$35$$35$198 b$36$$35$$35$199 b$36$$35$$35$202 b$36$$35$$35$43 b$36$$35$$35$203 b$36$$35$$35$204 b$36$$35$$35$205 b$36$$35$$35$206 b$36$$35$$35$47 b$36$$35$$35$207 b$36$$35$$35$208 b$36$$35$$35$209 b$36$$35$$35$211 b$36$$35$$35$212 b$36$$35$$35$213 b$36$$35$$35$214 b$36$$35$$35$1820 b$36$$35$$35$93 b$36$$35$$35$190 b$36$$35$$35$191))
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$483) (- (apply$35$$35$0 (as len Int) ds_dj30) 1))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$162 b$36$$35$$35$163 b$36$$35$$35$164 b$36$$35$$35$165 b$36$$35$$35$166 b$36$$35$$35$167 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$93 b$36$$35$$35$157 b$36$$35$$35$1821 b$36$$35$$35$158))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$515 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$553 b$36$$35$$35$554 b$36$$35$$35$43 b$36$$35$$35$555 b$36$$35$$35$556 b$36$$35$$35$557 b$36$$35$$35$558 b$36$$35$$35$47 b$36$$35$$35$562 b$36$$35$$35$563 b$36$$35$$35$564 b$36$$35$$35$565 b$36$$35$$35$93 b$36$$35$$35$1823))
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$68) (apply$35$$35$0 (as Binomial.size Int) ds_dj19))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$1824 b$36$$35$$35$97 b$36$$35$$35$43 b$36$$35$$35$524 b$36$$35$$35$525 b$36$$35$$35$526 b$36$$35$$35$47 b$36$$35$$35$527 b$36$$35$$35$528 b$36$$35$$35$529 b$36$$35$$35$530 b$36$$35$$35$531 b$36$$35$$35$532 b$36$$35$$35$533 b$36$$35$$35$534 b$36$$35$$35$93))
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$100) (+ (apply$35$$35$0 (as Binomial.size Int) ds_dj7z) (apply$35$$35$0 (as Binomial.size Int) ds_dj7A)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$1825 b$36$$35$$35$43 b$36$$35$$35$461 b$36$$35$$35$462 b$36$$35$$35$47 b$36$$35$$35$463 b$36$$35$$35$464 b$36$$35$$35$465 b$36$$35$$35$466 b$36$$35$$35$467 b$36$$35$$35$469 b$36$$35$$35$470 b$36$$35$$35$471 b$36$$35$$35$93))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$164 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (exists ((lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$2859 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$2859 Int) (lq_karg$36$VV$35$$35$2860$35$$35$k_$35$$35$2859 Int) (lq_karg$36$VV$35$$35$2867$35$$35$k_$35$$35$2859 Int) (lq_karg$36$VV$35$$35$2858$35$$35$k_$35$$35$2859 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$2859 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj$35$$35$k_$35$$35$2859 Int) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$2859 Int) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$2859 Int)) (and (= lq_karg$36$VV$35$$35$2858$35$$35$k_$35$$35$2859 VV$35$$35$F$35$$35$356) (= lq_karg$36$VV$35$$35$2860$35$$35$k_$35$$35$2859 VV$35$$35$10303) (= lq_karg$36$VV$35$$35$2867$35$$35$k_$35$$35$2859 VV$35$$35$10295) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$2859 ds_dj1J) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$2859 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$2859 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$2859 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj$35$$35$k_$35$$35$2859 lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$2859 t$35$$35$aiOu) (exists ((VV$35$$35$F$35$$35$361 Int) (VV$35$$35$10334 Int) (VV$35$$35$10342 Int)) (and false (= lq_karg$36$VV$35$$35$2858$35$$35$k_$35$$35$2859 VV$35$$35$F$35$$35$361) (= lq_karg$36$VV$35$$35$2860$35$$35$k_$35$$35$2859 VV$35$$35$10342) (= lq_karg$36$VV$35$$35$2867$35$$35$k_$35$$35$2859 VV$35$$35$10334) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$2859 ds_dj1J) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$2859 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$2859 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$2859 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj$35$$35$k_$35$$35$2859 lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$2859 t$35$$35$aiOu))))) (exists ((lq_karg$36$VV$35$$35$2867$35$$35$k_$35$$35$2868 Int) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$2868 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$2868 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$2868 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$2868 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj$35$$35$k_$35$$35$2868 Int) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$2868 Int)) (and (= lq_karg$36$VV$35$$35$2867$35$$35$k_$35$$35$2868 VV$35$$35$10295) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$2868 ds_dj1J) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$2868 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$2868 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$2868 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj$35$$35$k_$35$$35$2868 lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$2868 t$35$$35$aiOu) (exists ((VV$35$$35$F$35$$35$357 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$357) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$357)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$357) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$357) 0)) (= VV$35$$35$F$35$$35$357 (as GHC.Types.$91$$93$ Int)) (= VV$35$$35$F$35$$35$357 lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$357) (smt_map_def 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$357) (smt_map_def 0)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$357) 0) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$357) (smt_map_def 0)) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$357) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$357) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$357) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$357) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$357)) (= lq_karg$36$VV$35$$35$2867$35$$35$k_$35$$35$2868 VV$35$$35$F$35$$35$357) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$2868 ds_dj1J) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$2868 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$2868 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$2868 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj$35$$35$k_$35$$35$2868 lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$2868 t$35$$35$aiOu))))) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$2861 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$2861 Int) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$2861 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$2861 Int) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$2861 Int) (lq_karg$36$VV$35$$35$2860$35$$35$k_$35$$35$2861 Int) (lq_karg$36$VV$35$$35$2867$35$$35$k_$35$$35$2861 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj$35$$35$k_$35$$35$2861 Int)) (and (= lq_karg$36$VV$35$$35$2860$35$$35$k_$35$$35$2861 VV$35$$35$10303) (= lq_karg$36$VV$35$$35$2867$35$$35$k_$35$$35$2861 VV$35$$35$10295) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$2861 ds_dj1J) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$2861 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$2861 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$2861 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj$35$$35$k_$35$$35$2861 lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$2861 t$35$$35$aiOu) (exists ((VV$35$$35$10334 Int) (VV$35$$35$F$35$$35$359 Int)) (and false (= lq_karg$36$VV$35$$35$2860$35$$35$k_$35$$35$2861 VV$35$$35$F$35$$35$359) (= lq_karg$36$VV$35$$35$2867$35$$35$k_$35$$35$2861 VV$35$$35$10334) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$2861 ds_dj1J) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$2861 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$2861 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$2861 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj$35$$35$k_$35$$35$2861 lq_anf$36$$35$$35$7205759403792867275$35$$35$djaj) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$2861 t$35$$35$aiOu)))))) b$36$$35$$35$97 b$36$$35$$35$325 b$36$$35$$35$326 b$36$$35$$35$330 b$36$$35$$35$43 b$36$$35$$35$331 b$36$$35$$35$332 b$36$$35$$35$333 b$36$$35$$35$334 b$36$$35$$35$47 b$36$$35$$35$1327 b$36$$35$$35$335 b$36$$35$$35$336 (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10295) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$10295) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10295) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$10295) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$10295) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10295))) (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10303) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10303)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10303) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10303)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10303))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10303) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10303)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10303) 0)) b$36$$35$$35$338 b$36$$35$$35$93))
(push 1)
(assert (not (<= (apply$35$$35$0 (as Binomial.root Int) (apply$35$$35$0 (as fst Int) VV$35$$35$10272)) VV$35$$35$F$35$$35$356)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$288 b$36$$35$$35$97 b$36$$35$$35$289 b$36$$35$$35$290 b$36$$35$$35$292 b$36$$35$$35$1828 b$36$$35$$35$293 b$36$$35$$35$294 b$36$$35$$35$295 b$36$$35$$35$296 b$36$$35$$35$1418 b$36$$35$$35$43 b$36$$35$$35$269 b$36$$35$$35$270 b$36$$35$$35$47 b$36$$35$$35$271 b$36$$35$$35$273 b$36$$35$$35$274 b$36$$35$$35$275 b$36$$35$$35$276 b$36$$35$$35$277 b$36$$35$$35$281 b$36$$35$$35$282 b$36$$35$$35$283 b$36$$35$$35$284 b$36$$35$$35$93 b$36$$35$$35$285 b$36$$35$$35$286 b$36$$35$$35$287))
(push 1)
(assert (not (> lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$420))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$195 b$36$$35$$35$196 b$36$$35$$35$197 b$36$$35$$35$1829 b$36$$35$$35$198 b$36$$35$$35$199 b$36$$35$$35$202 b$36$$35$$35$43 b$36$$35$$35$203 b$36$$35$$35$204 b$36$$35$$35$205 b$36$$35$$35$206 b$36$$35$$35$47 b$36$$35$$35$93 b$36$$35$$35$190 b$36$$35$$35$191))
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$484) 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$162 b$36$$35$$35$163 b$36$$35$$35$164 b$36$$35$$35$165 b$36$$35$$35$166 b$36$$35$$35$1830 b$36$$35$$35$167 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$93 b$36$$35$$35$157 b$36$$35$$35$158))
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) ds_dj3y) VV$35$$35$F$35$$35$516)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$1832 b$36$$35$$35$553 b$36$$35$$35$554 b$36$$35$$35$43 b$36$$35$$35$555 b$36$$35$$35$556 b$36$$35$$35$557 b$36$$35$$35$558 b$36$$35$$35$47 b$36$$35$$35$562 b$36$$35$$35$563 b$36$$35$$35$564 b$36$$35$$35$565 b$36$$35$$35$93))
(push 1)
(assert (not (< 0 (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$69))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$384 b$36$$35$$35$97 b$36$$35$$35$386 b$36$$35$$35$387 b$36$$35$$35$388 b$36$$35$$35$389 b$36$$35$$35$390 b$36$$35$$35$391 b$36$$35$$35$392 b$36$$35$$35$393 b$36$$35$$35$1833 b$36$$35$$35$394 b$36$$35$$35$43 b$36$$35$$35$395 b$36$$35$$35$396 b$36$$35$$35$397 b$36$$35$$35$47 b$36$$35$$35$399 b$36$$35$$35$400 b$36$$35$$35$401 b$36$$35$$35$402 b$36$$35$$35$403 b$36$$35$$35$404 b$36$$35$$35$405 b$36$$35$$35$374 b$36$$35$$35$406 b$36$$35$$35$375 b$36$$35$$35$376 b$36$$35$$35$377 b$36$$35$$35$379 b$36$$35$$35$380 b$36$$35$$35$93 b$36$$35$$35$381 b$36$$35$$35$382 b$36$$35$$35$383))
(push 1)
(assert (not VV$35$$35$F$35$$35$261))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (= ts$39$$35$$35$aiUV (apply$35$$35$0 (as snd Int) ds_dj1U)) (>= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV) 0) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3101 Int) (lq_tmp$36$x$35$$35$3102 Int) (lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3101 Int) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3101 Int) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3101 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3101 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3101 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3101 Int) (lq_karg$36$VV$35$$35$3100$35$$35$k_$35$$35$3101 Int) (lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3101 Int) (lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3101 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3101 Int)) (and (= lq_karg$36$VV$35$$35$3100$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3101 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3101 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3101 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3101 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3101 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3101 ts$39$$35$$35$aiUV) (= lq_tmp$36$x$35$$35$3102 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (exists ((VV$35$$35$10224 Int) (VV$35$$35$F$35$$35$344 Int)) (and (= VV$35$$35$10224 t$35$$35$aiOu) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10224) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10224)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10224) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10224)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10224))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10224) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10224)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10224) 0) (= lq_karg$36$VV$35$$35$3100$35$$35$k_$35$$35$3101 VV$35$$35$F$35$$35$344) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3101 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3101 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3101 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3101 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3101 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3101 ts$39$$35$$35$aiUV))))) (exists ((lq_karg$36$VV$35$$35$3111$35$$35$k_$35$$35$3112 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3112 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3112 Int) (lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3112 Int) (lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3112 Int) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3112 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3112 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3112 Int) (lq_tmp$36$x$35$$35$3113 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3112 Int) (lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3112 Int) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3112 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3112 Int)) (and (= lq_karg$36$VV$35$$35$3111$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3112 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3112 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3112 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3112 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3112 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3112 ts$39$$35$$35$aiUV) (= lq_tmp$36$x$35$$35$3113 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (exists ((VV$35$$35$10219 Int) (VV$35$$35$F$35$$35$343 Int)) (and (= VV$35$$35$10219 (apply$35$$35$0 (as fst Int) ds_dj1U)) (= VV$35$$35$10219 t$39$$35$$35$aiUT) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10219) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10219)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10219) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10219)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10219))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10219) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10219)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10219) 0) (= lq_karg$36$VV$35$$35$3111$35$$35$k_$35$$35$3112 VV$35$$35$F$35$$35$343) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3112 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3112 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3112 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3112 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3112 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3112 ts$39$$35$$35$aiUV))))) (= t$39$$35$$35$aiUT (apply$35$$35$0 (as fst Int) ds_dj1U))) b$36$$35$$35$97 (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV) 0) (= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV) 0) (>= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV) 0) (<= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV))) (= lq_anf$36$$35$$35$7205759403792867267$35$$35$djab (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aiOu)) (= lq_anf$36$$35$$35$7205759403792867268$35$$35$djac (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT)) b$36$$35$$35$325 b$36$$35$$35$357 b$36$$35$$35$326 b$36$$35$$35$358 b$36$$35$$35$330 b$36$$35$$35$1834 b$36$$35$$35$43 b$36$$35$$35$331 b$36$$35$$35$332 b$36$$35$$35$333 b$36$$35$$35$365 b$36$$35$$35$334 b$36$$35$$35$366 b$36$$35$$35$47 b$36$$35$$35$367 b$36$$35$$35$369 b$36$$35$$35$340 b$36$$35$$35$341 b$36$$35$$35$342 b$36$$35$$35$343 b$36$$35$$35$344 b$36$$35$$35$93 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) t$39$$35$$35$aiUT) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$39$$35$$35$aiUT)) (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$39$$35$$35$aiUT)) (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) t$39$$35$$35$aiUT) (apply$35$$35$0 (as Binomial.rank Int) t$39$$35$$35$aiUT)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) t$39$$35$$35$aiUT) 0))))
(push 1)
(assert (not (= (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$293)) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as snd Int) VV$35$$35$F$35$$35$293))) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj1J))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y$35$$35$k_$35$$35$2394 Int) (lq_karg$36$ds_dj8n$35$$35$k_$35$$35$2394 Int) (lq_karg$36$ts$35$$35$aiOD$35$$35$k_$35$$35$2394 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T$35$$35$k_$35$$35$2394 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X$35$$35$k_$35$$35$2394 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0$35$$35$k_$35$$35$2394 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W$35$$35$k_$35$$35$2394 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U$35$$35$k_$35$$35$2394 Bool) (lq_karg$36$t$35$$35$aiOF$35$$35$k_$35$$35$2394 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S$35$$35$k_$35$$35$2394 Int) (lq_karg$36$VV$35$$35$2393$35$$35$k_$35$$35$2394 Int) (lq_karg$36$residual$35$$35$aiOG$35$$35$k_$35$$35$2394 Int) (lq_karg$36$ds_dj7T$35$$35$k_$35$$35$2394 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1$35$$35$k_$35$$35$2394 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q$35$$35$k_$35$$35$2394 Int) (lq_karg$36$ds_dj8m$35$$35$k_$35$$35$2394 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z$35$$35$k_$35$$35$2394 Int) (lq_karg$36$ds_dj8q$35$$35$k_$35$$35$2394 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2$35$$35$k_$35$$35$2394 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O$35$$35$k_$35$$35$2394 Int) (lq_karg$36$ds_dj8o$35$$35$k_$35$$35$2394 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R$35$$35$k_$35$$35$2394 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P$35$$35$k_$35$$35$2394 Int) (lq_karg$36$ds_dj8p$35$$35$k_$35$$35$2394 Int)) (and (= lq_karg$36$VV$35$$35$2393$35$$35$k_$35$$35$2394 VV$35$$35$F$35$$35$389) (= lq_karg$36$ds_dj7T$35$$35$k_$35$$35$2394 ds_dj7T) (= lq_karg$36$ds_dj8m$35$$35$k_$35$$35$2394 ds_dj8m) (= lq_karg$36$ds_dj8n$35$$35$k_$35$$35$2394 ds_dj8n) (= lq_karg$36$ds_dj8o$35$$35$k_$35$$35$2394 ds_dj8o) (= lq_karg$36$ds_dj8p$35$$35$k_$35$$35$2394 ds_dj8p) (= lq_karg$36$ds_dj8q$35$$35$k_$35$$35$2394 ds_dj8q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2) (= lq_karg$36$residual$35$$35$aiOG$35$$35$k_$35$$35$2394 residual$35$$35$aiOG) (= lq_karg$36$t$35$$35$aiOF$35$$35$k_$35$$35$2394 t$35$$35$aiOF) (= lq_karg$36$ts$35$$35$aiOD$35$$35$k_$35$$35$2394 ts$35$$35$aiOD) (exists ((VV$35$$35$F$35$$35$401 Int) (lq_tmp$36$x$35$$35$2361 Int)) (and (exists ((lq_karg$36$ds_dj7T$35$$35$k_$35$$35$2202 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S$35$$35$k_$35$$35$2202 Int) (lq_karg$36$t$35$$35$aiOF$35$$35$k_$35$$35$2202 Int) (lq_karg$36$ts$35$$35$aiOD$35$$35$k_$35$$35$2202 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T$35$$35$k_$35$$35$2202 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U$35$$35$k_$35$$35$2202 Bool) (lq_karg$36$VV$35$$35$2201$35$$35$k_$35$$35$2202 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P$35$$35$k_$35$$35$2202 Int) (lq_karg$36$ds_dj8o$35$$35$k_$35$$35$2202 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R$35$$35$k_$35$$35$2202 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O$35$$35$k_$35$$35$2202 Int) (lq_karg$36$ds_dj8q$35$$35$k_$35$$35$2202 Int) (lq_karg$36$ds_dj8n$35$$35$k_$35$$35$2202 Int) (lq_karg$36$ds_dj8p$35$$35$k_$35$$35$2202 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q$35$$35$k_$35$$35$2202 Int) (lq_karg$36$ds_dj8m$35$$35$k_$35$$35$2202 Int)) (and (= lq_karg$36$VV$35$$35$2201$35$$35$k_$35$$35$2202 VV$35$$35$F$35$$35$401) (= lq_karg$36$ds_dj7T$35$$35$k_$35$$35$2202 ds_dj7T) (= lq_karg$36$ds_dj8m$35$$35$k_$35$$35$2202 ds_dj8m) (= lq_karg$36$ds_dj8n$35$$35$k_$35$$35$2202 ds_dj8n) (= lq_karg$36$ds_dj8o$35$$35$k_$35$$35$2202 ds_dj8o) (= lq_karg$36$ds_dj8p$35$$35$k_$35$$35$2202 ds_dj8p) (= lq_karg$36$ds_dj8q$35$$35$k_$35$$35$2202 ds_dj8q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O$35$$35$k_$35$$35$2202 lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P$35$$35$k_$35$$35$2202 lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q$35$$35$k_$35$$35$2202 lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R$35$$35$k_$35$$35$2202 lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S$35$$35$k_$35$$35$2202 lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T$35$$35$k_$35$$35$2202 lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U$35$$35$k_$35$$35$2202 lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U) (= lq_karg$36$t$35$$35$aiOF$35$$35$k_$35$$35$2202 t$35$$35$aiOF) (= lq_karg$36$ts$35$$35$aiOD$35$$35$k_$35$$35$2202 ts$35$$35$aiOD) (exists ((VV$35$$35$F$35$$35$396 Int)) (and (exists ((lq_karg$36$ds_dj7T$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y$35$$35$k_$35$$35$2377 Int) (lq_karg$36$ds_dj8n$35$$35$k_$35$$35$2377 Int) (lq_karg$36$residual$35$$35$aiOG$35$$35$k_$35$$35$2377 Int) (lq_karg$36$t$35$$35$aiOF$35$$35$k_$35$$35$2377 Int) (lq_karg$36$ds_dj8q$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2$35$$35$k_$35$$35$2377 Int) (lq_karg$36$ts$35$$35$aiOD$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q$35$$35$k_$35$$35$2377 Int) (lq_karg$36$ds_dj8m$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P$35$$35$k_$35$$35$2377 Int) (lq_karg$36$ds_dj8o$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R$35$$35$k_$35$$35$2377 Int) (lq_karg$36$ds_dj8p$35$$35$k_$35$$35$2377 Int) (lq_karg$36$VV$35$$35$2376$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U$35$$35$k_$35$$35$2377 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0$35$$35$k_$35$$35$2377 Int)) (and (= lq_karg$36$VV$35$$35$2376$35$$35$k_$35$$35$2377 VV$35$$35$F$35$$35$396) (= lq_karg$36$ds_dj7T$35$$35$k_$35$$35$2377 ds_dj7T) (= lq_karg$36$ds_dj8m$35$$35$k_$35$$35$2377 ds_dj8m) (= lq_karg$36$ds_dj8n$35$$35$k_$35$$35$2377 ds_dj8n) (= lq_karg$36$ds_dj8o$35$$35$k_$35$$35$2377 ds_dj8o) (= lq_karg$36$ds_dj8p$35$$35$k_$35$$35$2377 ds_dj8p) (= lq_karg$36$ds_dj8q$35$$35$k_$35$$35$2377 ds_dj8q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2) (= lq_karg$36$residual$35$$35$aiOG$35$$35$k_$35$$35$2377 residual$35$$35$aiOG) (= lq_karg$36$t$35$$35$aiOF$35$$35$k_$35$$35$2377 t$35$$35$aiOF) (= lq_karg$36$ts$35$$35$aiOD$35$$35$k_$35$$35$2377 ts$35$$35$aiOD) (exists ((VV$35$$35$F$35$$35$391 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$391) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$391)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$391) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$391) 0)) (= VV$35$$35$F$35$$35$391 lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2) (= VV$35$$35$F$35$$35$391 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) t$35$$35$aiOF) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$391) (smt_map_cup (smt_map_sto (smt_map_def 0) t$35$$35$aiOF (+ 1 (smt_map_sel (smt_map_def 0) t$35$$35$aiOF))) (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$391) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOF) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$391) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOF) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1))) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$391) (smt_map_sto (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) t$35$$35$aiOF (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) t$35$$35$aiOF)))) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$391) t$35$$35$aiOF) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$391) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$391) t$35$$35$aiOF) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$391) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$391) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$391) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$391) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$391) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$391)) (= lq_karg$36$VV$35$$35$2376$35$$35$k_$35$$35$2377 VV$35$$35$F$35$$35$391) (= lq_karg$36$ds_dj7T$35$$35$k_$35$$35$2377 ds_dj7T) (= lq_karg$36$ds_dj8m$35$$35$k_$35$$35$2377 ds_dj8m) (= lq_karg$36$ds_dj8n$35$$35$k_$35$$35$2377 ds_dj8n) (= lq_karg$36$ds_dj8o$35$$35$k_$35$$35$2377 ds_dj8o) (= lq_karg$36$ds_dj8p$35$$35$k_$35$$35$2377 ds_dj8p) (= lq_karg$36$ds_dj8q$35$$35$k_$35$$35$2377 ds_dj8q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2) (= lq_karg$36$residual$35$$35$aiOG$35$$35$k_$35$$35$2377 residual$35$$35$aiOG) (= lq_karg$36$t$35$$35$aiOF$35$$35$k_$35$$35$2377 t$35$$35$aiOF) (= lq_karg$36$ts$35$$35$aiOD$35$$35$k_$35$$35$2377 ts$35$$35$aiOD))))) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$396) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$396) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$396) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$396) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$396) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$396)) (= lq_karg$36$VV$35$$35$2201$35$$35$k_$35$$35$2202 VV$35$$35$F$35$$35$396) (= lq_karg$36$ds_dj7T$35$$35$k_$35$$35$2202 ds_dj7T) (= lq_karg$36$ds_dj8m$35$$35$k_$35$$35$2202 ds_dj8m) (= lq_karg$36$ds_dj8n$35$$35$k_$35$$35$2202 ds_dj8n) (= lq_karg$36$ds_dj8o$35$$35$k_$35$$35$2202 ds_dj8o) (= lq_karg$36$ds_dj8p$35$$35$k_$35$$35$2202 ds_dj8p) (= lq_karg$36$ds_dj8q$35$$35$k_$35$$35$2202 ds_dj8q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O$35$$35$k_$35$$35$2202 lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P$35$$35$k_$35$$35$2202 lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q$35$$35$k_$35$$35$2202 lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R$35$$35$k_$35$$35$2202 lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S$35$$35$k_$35$$35$2202 lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T$35$$35$k_$35$$35$2202 lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U$35$$35$k_$35$$35$2202 lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U) (= lq_karg$36$t$35$$35$aiOF$35$$35$k_$35$$35$2202 t$35$$35$aiOF) (= lq_karg$36$ts$35$$35$aiOD$35$$35$k_$35$$35$2202 ts$35$$35$aiOD))))) (exists ((lq_karg$36$ds_dj7T$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y$35$$35$k_$35$$35$2377 Int) (lq_karg$36$ds_dj8n$35$$35$k_$35$$35$2377 Int) (lq_karg$36$residual$35$$35$aiOG$35$$35$k_$35$$35$2377 Int) (lq_karg$36$t$35$$35$aiOF$35$$35$k_$35$$35$2377 Int) (lq_tmp$36$x$35$$35$2383 Int) (lq_karg$36$ds_dj8q$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2$35$$35$k_$35$$35$2377 Int) (lq_karg$36$ts$35$$35$aiOD$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q$35$$35$k_$35$$35$2377 Int) (lq_karg$36$ds_dj8m$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P$35$$35$k_$35$$35$2377 Int) (lq_karg$36$ds_dj8o$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R$35$$35$k_$35$$35$2377 Int) (lq_karg$36$ds_dj8p$35$$35$k_$35$$35$2377 Int) (lq_karg$36$VV$35$$35$2376$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U$35$$35$k_$35$$35$2377 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0$35$$35$k_$35$$35$2377 Int)) (and (= lq_karg$36$VV$35$$35$2376$35$$35$k_$35$$35$2377 lq_tmp$36$x$35$$35$2361) (= lq_karg$36$ds_dj7T$35$$35$k_$35$$35$2377 ds_dj7T) (= lq_karg$36$ds_dj8m$35$$35$k_$35$$35$2377 ds_dj8m) (= lq_karg$36$ds_dj8n$35$$35$k_$35$$35$2377 ds_dj8n) (= lq_karg$36$ds_dj8o$35$$35$k_$35$$35$2377 ds_dj8o) (= lq_karg$36$ds_dj8p$35$$35$k_$35$$35$2377 ds_dj8p) (= lq_karg$36$ds_dj8q$35$$35$k_$35$$35$2377 ds_dj8q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2) (= lq_karg$36$residual$35$$35$aiOG$35$$35$k_$35$$35$2377 residual$35$$35$aiOG) (= lq_karg$36$t$35$$35$aiOF$35$$35$k_$35$$35$2377 t$35$$35$aiOF) (= lq_karg$36$ts$35$$35$aiOD$35$$35$k_$35$$35$2377 ts$35$$35$aiOD) (= lq_tmp$36$x$35$$35$2383 lq_tmp$36$x$35$$35$2361) (exists ((VV$35$$35$F$35$$35$391 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$391) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$391)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$391) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$391) 0)) (= VV$35$$35$F$35$$35$391 lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2) (= VV$35$$35$F$35$$35$391 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) t$35$$35$aiOF) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$391) (smt_map_cup (smt_map_sto (smt_map_def 0) t$35$$35$aiOF (+ 1 (smt_map_sel (smt_map_def 0) t$35$$35$aiOF))) (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$391) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOF) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$391) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOF) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1))) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$391) (smt_map_sto (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) t$35$$35$aiOF (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) t$35$$35$aiOF)))) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$391) t$35$$35$aiOF) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$391) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$391) t$35$$35$aiOF) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$391) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$391) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$391) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$391) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$391) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$391)) (= lq_karg$36$VV$35$$35$2376$35$$35$k_$35$$35$2377 VV$35$$35$F$35$$35$391) (= lq_karg$36$ds_dj7T$35$$35$k_$35$$35$2377 ds_dj7T) (= lq_karg$36$ds_dj8m$35$$35$k_$35$$35$2377 ds_dj8m) (= lq_karg$36$ds_dj8n$35$$35$k_$35$$35$2377 ds_dj8n) (= lq_karg$36$ds_dj8o$35$$35$k_$35$$35$2377 ds_dj8o) (= lq_karg$36$ds_dj8p$35$$35$k_$35$$35$2377 ds_dj8p) (= lq_karg$36$ds_dj8q$35$$35$k_$35$$35$2377 ds_dj8q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2) (= lq_karg$36$residual$35$$35$aiOG$35$$35$k_$35$$35$2377 residual$35$$35$aiOG) (= lq_karg$36$t$35$$35$aiOF$35$$35$k_$35$$35$2377 t$35$$35$aiOF) (= lq_karg$36$ts$35$$35$aiOD$35$$35$k_$35$$35$2377 ts$35$$35$aiOD))))) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$401) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$401) 0)) (= VV$35$$35$F$35$$35$401 lq_tmp$36$x$35$$35$2361) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$401) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$401) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$401) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$401)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_tmp$36$x$35$$35$2361) 0) (= (apply$35$$35$0 (as len Int) lq_tmp$36$x$35$$35$2361) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_tmp$36$x$35$$35$2361) 0) (>= (apply$35$$35$0 (as len Int) lq_tmp$36$x$35$$35$2361) 0) (<= (apply$35$$35$0 (as len Int) lq_tmp$36$x$35$$35$2361) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_tmp$36$x$35$$35$2361)) (= lq_karg$36$VV$35$$35$2393$35$$35$k_$35$$35$2394 VV$35$$35$F$35$$35$401) (= lq_karg$36$ds_dj7T$35$$35$k_$35$$35$2394 ds_dj7T) (= lq_karg$36$ds_dj8m$35$$35$k_$35$$35$2394 ds_dj8m) (= lq_karg$36$ds_dj8n$35$$35$k_$35$$35$2394 ds_dj8n) (= lq_karg$36$ds_dj8o$35$$35$k_$35$$35$2394 ds_dj8o) (= lq_karg$36$ds_dj8p$35$$35$k_$35$$35$2394 ds_dj8p) (= lq_karg$36$ds_dj8q$35$$35$k_$35$$35$2394 ds_dj8q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2) (= lq_karg$36$residual$35$$35$aiOG$35$$35$k_$35$$35$2394 residual$35$$35$aiOG) (= lq_karg$36$t$35$$35$aiOF$35$$35$k_$35$$35$2394 t$35$$35$aiOF) (= lq_karg$36$ts$35$$35$aiOD$35$$35$k_$35$$35$2394 ts$35$$35$aiOD))))) b$36$$35$$35$288 b$36$$35$$35$97 b$36$$35$$35$289 b$36$$35$$35$290 b$36$$35$$35$292 b$36$$35$$35$293 b$36$$35$$35$294 b$36$$35$$35$295 b$36$$35$$35$296 b$36$$35$$35$297 b$36$$35$$35$298 b$36$$35$$35$43 b$36$$35$$35$300 (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$389) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$389) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$389) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$389) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$389) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$389))) b$36$$35$$35$269 b$36$$35$$35$270 b$36$$35$$35$47 b$36$$35$$35$271 b$36$$35$$35$273 b$36$$35$$35$274 b$36$$35$$35$275 b$36$$35$$35$276 b$36$$35$$35$277 b$36$$35$$35$281 b$36$$35$$35$282 b$36$$35$$35$283 b$36$$35$$35$284 b$36$$35$$35$93 b$36$$35$$35$285 b$36$$35$$35$286 b$36$$35$$35$287))
(push 1)
(assert (not (= (smt_map_cup (smt_map_sto (smt_map_def 0) (apply$35$$35$0 (as Binomial.root Int) ds_dj7T) (+ 1 (smt_map_sel (smt_map_def 0) (apply$35$$35$0 (as Binomial.root Int) ds_dj7T)))) (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$389)) (apply$35$$35$3 (as Binomial.treeElts Int) ds_dj7T))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$288 b$36$$35$$35$97 b$36$$35$$35$289 b$36$$35$$35$290 b$36$$35$$35$292 b$36$$35$$35$293 b$36$$35$$35$294 b$36$$35$$35$295 b$36$$35$$35$296 b$36$$35$$35$1418 b$36$$35$$35$43 b$36$$35$$35$1419 b$36$$35$$35$269 b$36$$35$$35$1837 b$36$$35$$35$270 b$36$$35$$35$47 b$36$$35$$35$271 b$36$$35$$35$273 b$36$$35$$35$274 b$36$$35$$35$275 b$36$$35$$35$276 b$36$$35$$35$277 b$36$$35$$35$281 b$36$$35$$35$282 b$36$$35$$35$283 b$36$$35$$35$284 b$36$$35$$35$93 b$36$$35$$35$285 b$36$$35$$35$286 b$36$$35$$35$287))
(push 1)
(assert (not (<= ds_dj8m VV$35$$35$F$35$$35$421)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$195 b$36$$35$$35$196 b$36$$35$$35$197 b$36$$35$$35$198 b$36$$35$$35$199 b$36$$35$$35$202 b$36$$35$$35$43 b$36$$35$$35$203 b$36$$35$$35$204 b$36$$35$$35$205 b$36$$35$$35$206 b$36$$35$$35$1838 b$36$$35$$35$47 b$36$$35$$35$93 b$36$$35$$35$190 b$36$$35$$35$191))
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$485) 1)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$97 b$36$$35$$35$553 b$36$$35$$35$554 b$36$$35$$35$43 b$36$$35$$35$555 b$36$$35$$35$556 b$36$$35$$35$557 b$36$$35$$35$558 b$36$$35$$35$47 b$36$$35$$35$559 b$36$$35$$35$560 (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$70) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$70) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$70) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$70) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$70) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$70))) b$36$$35$$35$561 b$36$$35$$35$93))
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$70) (apply$35$$35$3 (as Binomial.elts Int) ds_dj19))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$512 b$36$$35$$35$97 b$36$$35$$35$482 b$36$$35$$35$483 b$36$$35$$35$484 b$36$$35$$35$485 b$36$$35$$35$486 b$36$$35$$35$489 b$36$$35$$35$490 b$36$$35$$35$43 b$36$$35$$35$491 b$36$$35$$35$492 b$36$$35$$35$493 b$36$$35$$35$47 b$36$$35$$35$497 b$36$$35$$35$1841 b$36$$35$$35$498 b$36$$35$$35$499 b$36$$35$$35$500 b$36$$35$$35$501 b$36$$35$$35$502 b$36$$35$$35$503 b$36$$35$$35$504 b$36$$35$$35$505 b$36$$35$$35$506 b$36$$35$$35$507 b$36$$35$$35$508 b$36$$35$$35$93 b$36$$35$$35$477 b$36$$35$$35$509 b$36$$35$$35$478 b$36$$35$$35$510 b$36$$35$$35$479 b$36$$35$$35$511))
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$134) (apply$35$$35$0 (as Binomial.rank Int) t1$35$$35$aiOV))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$456 b$36$$35$$35$457 b$36$$35$$35$43 b$36$$35$$35$427 b$36$$35$$35$428 b$36$$35$$35$429 b$36$$35$$35$47 b$36$$35$$35$1842 b$36$$35$$35$435 b$36$$35$$35$436 b$36$$35$$35$437 b$36$$35$$35$438 b$36$$35$$35$439 b$36$$35$$35$440 b$36$$35$$35$441 b$36$$35$$35$442 b$36$$35$$35$93))
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$166) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOn) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj5Q)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (= ts$39$$35$$35$aiUV (apply$35$$35$0 (as snd Int) ds_dj1U)) (>= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV) 0) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3101 Int) (lq_tmp$36$x$35$$35$3102 Int) (lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3101 Int) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3101 Int) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3101 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3101 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3101 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3101 Int) (lq_karg$36$VV$35$$35$3100$35$$35$k_$35$$35$3101 Int) (lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3101 Int) (lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3101 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3101 Int)) (and (= lq_karg$36$VV$35$$35$3100$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3101 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3101 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3101 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3101 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3101 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3101 ts$39$$35$$35$aiUV) (= lq_tmp$36$x$35$$35$3102 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (exists ((VV$35$$35$10224 Int) (VV$35$$35$F$35$$35$344 Int)) (and (= VV$35$$35$10224 t$35$$35$aiOu) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10224) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10224)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10224) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10224)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10224))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10224) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10224)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10224) 0) (= lq_karg$36$VV$35$$35$3100$35$$35$k_$35$$35$3101 VV$35$$35$F$35$$35$344) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3101 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3101 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3101 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3101 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3101 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3101 ts$39$$35$$35$aiUV))))) (exists ((lq_karg$36$VV$35$$35$3111$35$$35$k_$35$$35$3112 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3112 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3112 Int) (lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3112 Int) (lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3112 Int) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3112 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3112 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3112 Int) (lq_tmp$36$x$35$$35$3113 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3112 Int) (lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3112 Int) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3112 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3112 Int)) (and (= lq_karg$36$VV$35$$35$3111$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3112 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3112 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3112 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3112 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3112 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3112 ts$39$$35$$35$aiUV) (= lq_tmp$36$x$35$$35$3113 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (exists ((VV$35$$35$10219 Int) (VV$35$$35$F$35$$35$343 Int)) (and (= VV$35$$35$10219 (apply$35$$35$0 (as fst Int) ds_dj1U)) (= VV$35$$35$10219 t$39$$35$$35$aiUT) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10219) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10219)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10219) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10219)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10219))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10219) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10219)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10219) 0) (= lq_karg$36$VV$35$$35$3111$35$$35$k_$35$$35$3112 VV$35$$35$F$35$$35$343) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3112 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3112 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3112 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3112 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3112 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3112 ts$39$$35$$35$aiUV))))) (= t$39$$35$$35$aiUT (apply$35$$35$0 (as fst Int) ds_dj1U))) b$36$$35$$35$97 (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV) 0) (= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV) 0) (>= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV) 0) (<= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV))) (= lq_anf$36$$35$$35$7205759403792867267$35$$35$djab (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aiOu)) (= lq_anf$36$$35$$35$7205759403792867268$35$$35$djac (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT)) b$36$$35$$35$325 b$36$$35$$35$357 b$36$$35$$35$326 b$36$$35$$35$358 b$36$$35$$35$330 b$36$$35$$35$43 b$36$$35$$35$331 b$36$$35$$35$332 b$36$$35$$35$333 b$36$$35$$35$365 b$36$$35$$35$334 b$36$$35$$35$366 b$36$$35$$35$47 b$36$$35$$35$367 b$36$$35$$35$369 b$36$$35$$35$1843 b$36$$35$$35$340 b$36$$35$$35$341 b$36$$35$$35$342 b$36$$35$$35$343 b$36$$35$$35$344 b$36$$35$$35$93 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) t$39$$35$$35$aiUT) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$39$$35$$35$aiUT)) (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$39$$35$$35$aiUT)) (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) t$39$$35$$35$aiUT) (apply$35$$35$0 (as Binomial.rank Int) t$39$$35$$35$aiUT)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) t$39$$35$$35$aiUT) 0))))
(push 1)
(assert (not (= (+ (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$294)) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as snd Int) VV$35$$35$F$35$$35$294))) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj1J))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y$35$$35$k_$35$$35$2394 Int) (lq_karg$36$ds_dj8n$35$$35$k_$35$$35$2394 Int) (lq_karg$36$ts$35$$35$aiOD$35$$35$k_$35$$35$2394 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T$35$$35$k_$35$$35$2394 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X$35$$35$k_$35$$35$2394 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0$35$$35$k_$35$$35$2394 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W$35$$35$k_$35$$35$2394 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U$35$$35$k_$35$$35$2394 Bool) (lq_karg$36$t$35$$35$aiOF$35$$35$k_$35$$35$2394 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S$35$$35$k_$35$$35$2394 Int) (lq_karg$36$VV$35$$35$2393$35$$35$k_$35$$35$2394 Int) (lq_karg$36$residual$35$$35$aiOG$35$$35$k_$35$$35$2394 Int) (lq_karg$36$ds_dj7T$35$$35$k_$35$$35$2394 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1$35$$35$k_$35$$35$2394 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q$35$$35$k_$35$$35$2394 Int) (lq_karg$36$ds_dj8m$35$$35$k_$35$$35$2394 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z$35$$35$k_$35$$35$2394 Int) (lq_karg$36$ds_dj8q$35$$35$k_$35$$35$2394 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2$35$$35$k_$35$$35$2394 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O$35$$35$k_$35$$35$2394 Int) (lq_karg$36$ds_dj8o$35$$35$k_$35$$35$2394 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R$35$$35$k_$35$$35$2394 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P$35$$35$k_$35$$35$2394 Int) (lq_karg$36$ds_dj8p$35$$35$k_$35$$35$2394 Int)) (and (= lq_karg$36$VV$35$$35$2393$35$$35$k_$35$$35$2394 VV$35$$35$F$35$$35$390) (= lq_karg$36$ds_dj7T$35$$35$k_$35$$35$2394 ds_dj7T) (= lq_karg$36$ds_dj8m$35$$35$k_$35$$35$2394 ds_dj8m) (= lq_karg$36$ds_dj8n$35$$35$k_$35$$35$2394 ds_dj8n) (= lq_karg$36$ds_dj8o$35$$35$k_$35$$35$2394 ds_dj8o) (= lq_karg$36$ds_dj8p$35$$35$k_$35$$35$2394 ds_dj8p) (= lq_karg$36$ds_dj8q$35$$35$k_$35$$35$2394 ds_dj8q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2) (= lq_karg$36$residual$35$$35$aiOG$35$$35$k_$35$$35$2394 residual$35$$35$aiOG) (= lq_karg$36$t$35$$35$aiOF$35$$35$k_$35$$35$2394 t$35$$35$aiOF) (= lq_karg$36$ts$35$$35$aiOD$35$$35$k_$35$$35$2394 ts$35$$35$aiOD) (exists ((VV$35$$35$F$35$$35$401 Int) (lq_tmp$36$x$35$$35$2361 Int)) (and (exists ((lq_karg$36$ds_dj7T$35$$35$k_$35$$35$2202 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S$35$$35$k_$35$$35$2202 Int) (lq_karg$36$t$35$$35$aiOF$35$$35$k_$35$$35$2202 Int) (lq_karg$36$ts$35$$35$aiOD$35$$35$k_$35$$35$2202 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T$35$$35$k_$35$$35$2202 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U$35$$35$k_$35$$35$2202 Bool) (lq_karg$36$VV$35$$35$2201$35$$35$k_$35$$35$2202 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P$35$$35$k_$35$$35$2202 Int) (lq_karg$36$ds_dj8o$35$$35$k_$35$$35$2202 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R$35$$35$k_$35$$35$2202 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O$35$$35$k_$35$$35$2202 Int) (lq_karg$36$ds_dj8q$35$$35$k_$35$$35$2202 Int) (lq_karg$36$ds_dj8n$35$$35$k_$35$$35$2202 Int) (lq_karg$36$ds_dj8p$35$$35$k_$35$$35$2202 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q$35$$35$k_$35$$35$2202 Int) (lq_karg$36$ds_dj8m$35$$35$k_$35$$35$2202 Int)) (and (= lq_karg$36$VV$35$$35$2201$35$$35$k_$35$$35$2202 VV$35$$35$F$35$$35$401) (= lq_karg$36$ds_dj7T$35$$35$k_$35$$35$2202 ds_dj7T) (= lq_karg$36$ds_dj8m$35$$35$k_$35$$35$2202 ds_dj8m) (= lq_karg$36$ds_dj8n$35$$35$k_$35$$35$2202 ds_dj8n) (= lq_karg$36$ds_dj8o$35$$35$k_$35$$35$2202 ds_dj8o) (= lq_karg$36$ds_dj8p$35$$35$k_$35$$35$2202 ds_dj8p) (= lq_karg$36$ds_dj8q$35$$35$k_$35$$35$2202 ds_dj8q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O$35$$35$k_$35$$35$2202 lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P$35$$35$k_$35$$35$2202 lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q$35$$35$k_$35$$35$2202 lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R$35$$35$k_$35$$35$2202 lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S$35$$35$k_$35$$35$2202 lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T$35$$35$k_$35$$35$2202 lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U$35$$35$k_$35$$35$2202 lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U) (= lq_karg$36$t$35$$35$aiOF$35$$35$k_$35$$35$2202 t$35$$35$aiOF) (= lq_karg$36$ts$35$$35$aiOD$35$$35$k_$35$$35$2202 ts$35$$35$aiOD) (exists ((VV$35$$35$F$35$$35$396 Int)) (and (exists ((lq_karg$36$ds_dj7T$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y$35$$35$k_$35$$35$2377 Int) (lq_karg$36$ds_dj8n$35$$35$k_$35$$35$2377 Int) (lq_karg$36$residual$35$$35$aiOG$35$$35$k_$35$$35$2377 Int) (lq_karg$36$t$35$$35$aiOF$35$$35$k_$35$$35$2377 Int) (lq_karg$36$ds_dj8q$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2$35$$35$k_$35$$35$2377 Int) (lq_karg$36$ts$35$$35$aiOD$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q$35$$35$k_$35$$35$2377 Int) (lq_karg$36$ds_dj8m$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P$35$$35$k_$35$$35$2377 Int) (lq_karg$36$ds_dj8o$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R$35$$35$k_$35$$35$2377 Int) (lq_karg$36$ds_dj8p$35$$35$k_$35$$35$2377 Int) (lq_karg$36$VV$35$$35$2376$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U$35$$35$k_$35$$35$2377 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0$35$$35$k_$35$$35$2377 Int)) (and (= lq_karg$36$VV$35$$35$2376$35$$35$k_$35$$35$2377 VV$35$$35$F$35$$35$396) (= lq_karg$36$ds_dj7T$35$$35$k_$35$$35$2377 ds_dj7T) (= lq_karg$36$ds_dj8m$35$$35$k_$35$$35$2377 ds_dj8m) (= lq_karg$36$ds_dj8n$35$$35$k_$35$$35$2377 ds_dj8n) (= lq_karg$36$ds_dj8o$35$$35$k_$35$$35$2377 ds_dj8o) (= lq_karg$36$ds_dj8p$35$$35$k_$35$$35$2377 ds_dj8p) (= lq_karg$36$ds_dj8q$35$$35$k_$35$$35$2377 ds_dj8q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2) (= lq_karg$36$residual$35$$35$aiOG$35$$35$k_$35$$35$2377 residual$35$$35$aiOG) (= lq_karg$36$t$35$$35$aiOF$35$$35$k_$35$$35$2377 t$35$$35$aiOF) (= lq_karg$36$ts$35$$35$aiOD$35$$35$k_$35$$35$2377 ts$35$$35$aiOD) (exists ((VV$35$$35$F$35$$35$391 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$391) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$391)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$391) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$391) 0)) (= VV$35$$35$F$35$$35$391 lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2) (= VV$35$$35$F$35$$35$391 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) t$35$$35$aiOF) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$391) (smt_map_cup (smt_map_sto (smt_map_def 0) t$35$$35$aiOF (+ 1 (smt_map_sel (smt_map_def 0) t$35$$35$aiOF))) (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$391) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOF) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$391) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOF) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1))) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$391) (smt_map_sto (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) t$35$$35$aiOF (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) t$35$$35$aiOF)))) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$391) t$35$$35$aiOF) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$391) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$391) t$35$$35$aiOF) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$391) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$391) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$391) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$391) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$391) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$391)) (= lq_karg$36$VV$35$$35$2376$35$$35$k_$35$$35$2377 VV$35$$35$F$35$$35$391) (= lq_karg$36$ds_dj7T$35$$35$k_$35$$35$2377 ds_dj7T) (= lq_karg$36$ds_dj8m$35$$35$k_$35$$35$2377 ds_dj8m) (= lq_karg$36$ds_dj8n$35$$35$k_$35$$35$2377 ds_dj8n) (= lq_karg$36$ds_dj8o$35$$35$k_$35$$35$2377 ds_dj8o) (= lq_karg$36$ds_dj8p$35$$35$k_$35$$35$2377 ds_dj8p) (= lq_karg$36$ds_dj8q$35$$35$k_$35$$35$2377 ds_dj8q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2) (= lq_karg$36$residual$35$$35$aiOG$35$$35$k_$35$$35$2377 residual$35$$35$aiOG) (= lq_karg$36$t$35$$35$aiOF$35$$35$k_$35$$35$2377 t$35$$35$aiOF) (= lq_karg$36$ts$35$$35$aiOD$35$$35$k_$35$$35$2377 ts$35$$35$aiOD))))) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$396) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$396) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$396) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$396) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$396) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$396)) (= lq_karg$36$VV$35$$35$2201$35$$35$k_$35$$35$2202 VV$35$$35$F$35$$35$396) (= lq_karg$36$ds_dj7T$35$$35$k_$35$$35$2202 ds_dj7T) (= lq_karg$36$ds_dj8m$35$$35$k_$35$$35$2202 ds_dj8m) (= lq_karg$36$ds_dj8n$35$$35$k_$35$$35$2202 ds_dj8n) (= lq_karg$36$ds_dj8o$35$$35$k_$35$$35$2202 ds_dj8o) (= lq_karg$36$ds_dj8p$35$$35$k_$35$$35$2202 ds_dj8p) (= lq_karg$36$ds_dj8q$35$$35$k_$35$$35$2202 ds_dj8q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O$35$$35$k_$35$$35$2202 lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P$35$$35$k_$35$$35$2202 lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q$35$$35$k_$35$$35$2202 lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R$35$$35$k_$35$$35$2202 lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S$35$$35$k_$35$$35$2202 lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T$35$$35$k_$35$$35$2202 lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U$35$$35$k_$35$$35$2202 lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U) (= lq_karg$36$t$35$$35$aiOF$35$$35$k_$35$$35$2202 t$35$$35$aiOF) (= lq_karg$36$ts$35$$35$aiOD$35$$35$k_$35$$35$2202 ts$35$$35$aiOD))))) (exists ((lq_karg$36$ds_dj7T$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y$35$$35$k_$35$$35$2377 Int) (lq_karg$36$ds_dj8n$35$$35$k_$35$$35$2377 Int) (lq_karg$36$residual$35$$35$aiOG$35$$35$k_$35$$35$2377 Int) (lq_karg$36$t$35$$35$aiOF$35$$35$k_$35$$35$2377 Int) (lq_tmp$36$x$35$$35$2383 Int) (lq_karg$36$ds_dj8q$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2$35$$35$k_$35$$35$2377 Int) (lq_karg$36$ts$35$$35$aiOD$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q$35$$35$k_$35$$35$2377 Int) (lq_karg$36$ds_dj8m$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P$35$$35$k_$35$$35$2377 Int) (lq_karg$36$ds_dj8o$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R$35$$35$k_$35$$35$2377 Int) (lq_karg$36$ds_dj8p$35$$35$k_$35$$35$2377 Int) (lq_karg$36$VV$35$$35$2376$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U$35$$35$k_$35$$35$2377 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z$35$$35$k_$35$$35$2377 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0$35$$35$k_$35$$35$2377 Int)) (and (= lq_karg$36$VV$35$$35$2376$35$$35$k_$35$$35$2377 lq_tmp$36$x$35$$35$2361) (= lq_karg$36$ds_dj7T$35$$35$k_$35$$35$2377 ds_dj7T) (= lq_karg$36$ds_dj8m$35$$35$k_$35$$35$2377 ds_dj8m) (= lq_karg$36$ds_dj8n$35$$35$k_$35$$35$2377 ds_dj8n) (= lq_karg$36$ds_dj8o$35$$35$k_$35$$35$2377 ds_dj8o) (= lq_karg$36$ds_dj8p$35$$35$k_$35$$35$2377 ds_dj8p) (= lq_karg$36$ds_dj8q$35$$35$k_$35$$35$2377 ds_dj8q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2) (= lq_karg$36$residual$35$$35$aiOG$35$$35$k_$35$$35$2377 residual$35$$35$aiOG) (= lq_karg$36$t$35$$35$aiOF$35$$35$k_$35$$35$2377 t$35$$35$aiOF) (= lq_karg$36$ts$35$$35$aiOD$35$$35$k_$35$$35$2377 ts$35$$35$aiOD) (= lq_tmp$36$x$35$$35$2383 lq_tmp$36$x$35$$35$2361) (exists ((VV$35$$35$F$35$$35$391 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$391) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$391)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$391) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$391) 0)) (= VV$35$$35$F$35$$35$391 lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2) (= VV$35$$35$F$35$$35$391 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) t$35$$35$aiOF) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$391) (smt_map_cup (smt_map_sto (smt_map_def 0) t$35$$35$aiOF (+ 1 (smt_map_sel (smt_map_def 0) t$35$$35$aiOF))) (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$391) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOF) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$391) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOF) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1))) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$391) (smt_map_sto (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) t$35$$35$aiOF (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) t$35$$35$aiOF)))) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$391) t$35$$35$aiOF) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$391) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$391) t$35$$35$aiOF) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$391) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$391) lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$391) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$391) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$391) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$391)) (= lq_karg$36$VV$35$$35$2376$35$$35$k_$35$$35$2377 VV$35$$35$F$35$$35$391) (= lq_karg$36$ds_dj7T$35$$35$k_$35$$35$2377 ds_dj7T) (= lq_karg$36$ds_dj8m$35$$35$k_$35$$35$2377 ds_dj8m) (= lq_karg$36$ds_dj8n$35$$35$k_$35$$35$2377 ds_dj8n) (= lq_karg$36$ds_dj8o$35$$35$k_$35$$35$2377 ds_dj8o) (= lq_karg$36$ds_dj8p$35$$35$k_$35$$35$2377 ds_dj8p) (= lq_karg$36$ds_dj8q$35$$35$k_$35$$35$2377 ds_dj8q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2$35$$35$k_$35$$35$2377 lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2) (= lq_karg$36$residual$35$$35$aiOG$35$$35$k_$35$$35$2377 residual$35$$35$aiOG) (= lq_karg$36$t$35$$35$aiOF$35$$35$k_$35$$35$2377 t$35$$35$aiOF) (= lq_karg$36$ts$35$$35$aiOD$35$$35$k_$35$$35$2377 ts$35$$35$aiOD))))) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$401) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$401) 0)) (= VV$35$$35$F$35$$35$401 lq_tmp$36$x$35$$35$2361) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$401) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$401) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$401) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$401)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_tmp$36$x$35$$35$2361) 0) (= (apply$35$$35$0 (as len Int) lq_tmp$36$x$35$$35$2361) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_tmp$36$x$35$$35$2361) 0) (>= (apply$35$$35$0 (as len Int) lq_tmp$36$x$35$$35$2361) 0) (<= (apply$35$$35$0 (as len Int) lq_tmp$36$x$35$$35$2361) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_tmp$36$x$35$$35$2361)) (= lq_karg$36$VV$35$$35$2393$35$$35$k_$35$$35$2394 VV$35$$35$F$35$$35$401) (= lq_karg$36$ds_dj7T$35$$35$k_$35$$35$2394 ds_dj7T) (= lq_karg$36$ds_dj8m$35$$35$k_$35$$35$2394 ds_dj8m) (= lq_karg$36$ds_dj8n$35$$35$k_$35$$35$2394 ds_dj8n) (= lq_karg$36$ds_dj8o$35$$35$k_$35$$35$2394 ds_dj8o) (= lq_karg$36$ds_dj8p$35$$35$k_$35$$35$2394 ds_dj8p) (= lq_karg$36$ds_dj8q$35$$35$k_$35$$35$2394 ds_dj8q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867244$35$$35$dj9O) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867245$35$$35$dj9P) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867246$35$$35$dj9Q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867247$35$$35$dj9R) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867248$35$$35$dj9S) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867249$35$$35$dj9T) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867250$35$$35$dj9U) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867252$35$$35$dj9W) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867253$35$$35$dj9X) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867254$35$$35$dj9Y) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867255$35$$35$dj9Z) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867256$35$$35$dja0) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867257$35$$35$dja1) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2$35$$35$k_$35$$35$2394 lq_anf$36$$35$$35$7205759403792867258$35$$35$dja2) (= lq_karg$36$residual$35$$35$aiOG$35$$35$k_$35$$35$2394 residual$35$$35$aiOG) (= lq_karg$36$t$35$$35$aiOF$35$$35$k_$35$$35$2394 t$35$$35$aiOF) (= lq_karg$36$ts$35$$35$aiOD$35$$35$k_$35$$35$2394 ts$35$$35$aiOD))))) b$36$$35$$35$288 b$36$$35$$35$97 b$36$$35$$35$289 b$36$$35$$35$290 b$36$$35$$35$292 b$36$$35$$35$293 b$36$$35$$35$294 b$36$$35$$35$295 b$36$$35$$35$296 b$36$$35$$35$297 b$36$$35$$35$298 b$36$$35$$35$43 b$36$$35$$35$300 b$36$$35$$35$269 b$36$$35$$35$270 b$36$$35$$35$47 b$36$$35$$35$271 b$36$$35$$35$273 b$36$$35$$35$274 b$36$$35$$35$275 b$36$$35$$35$276 (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$390) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$390) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$390) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$390) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$390) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$390))) b$36$$35$$35$277 b$36$$35$$35$281 b$36$$35$$35$282 b$36$$35$$35$283 b$36$$35$$35$284 b$36$$35$$35$93 b$36$$35$$35$285 b$36$$35$$35$286 b$36$$35$$35$287))
(push 1)
(assert (not (= (+ 1 (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$390)) (apply$35$$35$0 (as Binomial.treeSize Int) ds_dj7T))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$195 b$36$$35$$35$196 b$36$$35$$35$197 b$36$$35$$35$198 b$36$$35$$35$199 b$36$$35$$35$202 b$36$$35$$35$43 b$36$$35$$35$203 b$36$$35$$35$204 b$36$$35$$35$205 b$36$$35$$35$206 b$36$$35$$35$47 b$36$$35$$35$1845 b$36$$35$$35$93 b$36$$35$$35$190 b$36$$35$$35$191))
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$486) (apply$35$$35$0 (as len Int) ds_dj30))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$97 b$36$$35$$35$553 b$36$$35$$35$554 b$36$$35$$35$43 b$36$$35$$35$555 b$36$$35$$35$556 b$36$$35$$35$557 b$36$$35$$35$558 b$36$$35$$35$47 b$36$$35$$35$559 b$36$$35$$35$560 b$36$$35$$35$561 (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$71) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$71) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$71) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$71) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$71) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$71))) b$36$$35$$35$93))
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$71) (apply$35$$35$0 (as Binomial.size Int) ds_dj19))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$456 b$36$$35$$35$457 b$36$$35$$35$43 b$36$$35$$35$427 b$36$$35$$35$428 b$36$$35$$35$429 b$36$$35$$35$47 b$36$$35$$35$435 b$36$$35$$35$436 b$36$$35$$35$437 b$36$$35$$35$438 b$36$$35$$35$439 b$36$$35$$35$440 b$36$$35$$35$1848 b$36$$35$$35$441 b$36$$35$$35$442 b$36$$35$$35$93))
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$167) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOn) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj5Q)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (= ts$39$$35$$35$aiUV (apply$35$$35$0 (as snd Int) ds_dj1U)) (>= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV) 0) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3101 Int) (lq_tmp$36$x$35$$35$3102 Int) (lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3101 Int) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3101 Int) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3101 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3101 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3101 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3101 Int) (lq_karg$36$VV$35$$35$3100$35$$35$k_$35$$35$3101 Int) (lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3101 Int) (lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3101 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3101 Int)) (and (= lq_karg$36$VV$35$$35$3100$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3101 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3101 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3101 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3101 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3101 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3101 ts$39$$35$$35$aiUV) (= lq_tmp$36$x$35$$35$3102 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (exists ((VV$35$$35$10224 Int) (VV$35$$35$F$35$$35$344 Int)) (and (= VV$35$$35$10224 t$35$$35$aiOu) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10224) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10224)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10224) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10224)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10224))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10224) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10224)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10224) 0) (= lq_karg$36$VV$35$$35$3100$35$$35$k_$35$$35$3101 VV$35$$35$F$35$$35$344) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3101 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3101 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3101 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3101 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3101 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3101 ts$39$$35$$35$aiUV))))) (exists ((lq_karg$36$VV$35$$35$3111$35$$35$k_$35$$35$3112 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3112 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3112 Int) (lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3112 Int) (lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3112 Int) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3112 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3112 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3112 Int) (lq_tmp$36$x$35$$35$3113 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3112 Int) (lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3112 Int) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3112 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3112 Int)) (and (= lq_karg$36$VV$35$$35$3111$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3112 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3112 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3112 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3112 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3112 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3112 ts$39$$35$$35$aiUV) (= lq_tmp$36$x$35$$35$3113 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (exists ((VV$35$$35$10219 Int) (VV$35$$35$F$35$$35$343 Int)) (and (= VV$35$$35$10219 (apply$35$$35$0 (as fst Int) ds_dj1U)) (= VV$35$$35$10219 t$39$$35$$35$aiUT) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10219) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10219)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10219) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10219)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10219))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10219) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10219)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10219) 0) (= lq_karg$36$VV$35$$35$3111$35$$35$k_$35$$35$3112 VV$35$$35$F$35$$35$343) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3112 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3112 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3112 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3112 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3112 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3112 ts$39$$35$$35$aiUV))))) (exists ((lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3324 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3324 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3324 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3324 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867273$35$$35$djah$35$$35$k_$35$$35$3324 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3324 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3324 Int) (lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3324 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867274$35$$35$djai$35$$35$k_$35$$35$3324 Int) (lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3324 Int) (lq_karg$36$VV$35$$35$3332$35$$35$k_$35$$35$3324 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3324 Bool) (lq_karg$36$VV$35$$35$3325$35$$35$k_$35$$35$3324 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3324 Int) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3324 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3324 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3324 Int) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3324 Int) (lq_karg$36$VV$35$$35$3323$35$$35$k_$35$$35$3324 Int)) (and (= lq_karg$36$VV$35$$35$3323$35$$35$k_$35$$35$3324 VV$35$$35$F$35$$35$295) (= lq_karg$36$VV$35$$35$3325$35$$35$k_$35$$35$3324 VV$35$$35$10018) (= lq_karg$36$VV$35$$35$3332$35$$35$k_$35$$35$3324 VV$35$$35$10010) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3324 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3324 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3324 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3324 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3324 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3324 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3324 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3324 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3324 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867273$35$$35$djah$35$$35$k_$35$$35$3324 lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867274$35$$35$djai$35$$35$k_$35$$35$3324 lq_anf$36$$35$$35$7205759403792867274$35$$35$djai) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3324 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3324 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3324 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3324 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3324 ts$39$$35$$35$aiUV) (exists ((VV$35$$35$10049 Int) (VV$35$$35$10057 Int) (VV$35$$35$F$35$$35$300 Int)) (and (or (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3286 Bool) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3286 Int) (lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3286 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3286 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3286 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3286 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3286 Int) (lq_karg$36$VV$35$$35$3285$35$$35$k_$35$$35$3286 Int) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3286 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3286 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3286 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867273$35$$35$djah$35$$35$k_$35$$35$3286 Int) (lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3286 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3286 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3286 Bool) (lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3286 Int)) (and (= lq_karg$36$VV$35$$35$3285$35$$35$k_$35$$35$3286 VV$35$$35$10057) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3286 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3286 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3286 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867273$35$$35$djah$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3286 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3286 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3286 ts$39$$35$$35$aiUV) (exists ((VV$35$$35$F$35$$35$314 Int)) (and (= VV$35$$35$F$35$$35$314 lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= VV$35$$35$F$35$$35$314 t$39$$35$$35$aiUT) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$314) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$314)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$314) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$314)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$314))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$314) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$314)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$314) 0) (= lq_karg$36$VV$35$$35$3285$35$$35$k_$35$$35$3286 VV$35$$35$F$35$$35$314) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3286 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3286 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3286 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867273$35$$35$djah$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3286 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3286 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3286 ts$39$$35$$35$aiUV))))) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3286 Bool) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3286 Int) (lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3286 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3286 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3286 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3286 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3286 Int) (lq_karg$36$VV$35$$35$3285$35$$35$k_$35$$35$3286 Int) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3286 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3286 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3286 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867273$35$$35$djah$35$$35$k_$35$$35$3286 Int) (lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3286 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3286 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3286 Bool) (lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3286 Int)) (and (= lq_karg$36$VV$35$$35$3285$35$$35$k_$35$$35$3286 VV$35$$35$10057) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3286 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3286 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3286 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867273$35$$35$djah$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3286 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3286 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3286 ts$39$$35$$35$aiUV) (exists ((VV$35$$35$10073 Int) (VV$35$$35$F$35$$35$308 Int)) (and (= VV$35$$35$10073 (apply$35$$35$0 (as snd Int) ds_dj1U)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$10073) 0) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10073) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$10073) 0)) (= VV$35$$35$10073 ts$39$$35$$35$aiUV) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10073) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$10073) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$10073) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10073)) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$308) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$308)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$308) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$308)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$308))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$308) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$308)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$308) 0) (= lq_karg$36$VV$35$$35$3285$35$$35$k_$35$$35$3286 VV$35$$35$F$35$$35$308) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3286 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3286 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3286 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867273$35$$35$djah$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3286 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3286 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3286 ts$39$$35$$35$aiUV)))))) (or (exists ((lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3284 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3284 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3284 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867273$35$$35$djah$35$$35$k_$35$$35$3284 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3284 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3284 Int) (lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3284 Int) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3284 Int) (lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3284 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3284 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3284 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3284 Int) (lq_karg$36$VV$35$$35$3285$35$$35$k_$35$$35$3284 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3284 Bool) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3284 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3284 Int) (lq_karg$36$VV$35$$35$3283$35$$35$k_$35$$35$3284 Int)) (and (= lq_karg$36$VV$35$$35$3283$35$$35$k_$35$$35$3284 VV$35$$35$F$35$$35$300) (= lq_karg$36$VV$35$$35$3285$35$$35$k_$35$$35$3284 VV$35$$35$10057) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3284 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3284 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3284 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867273$35$$35$djah$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3284 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3284 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3284 ts$39$$35$$35$aiUV) (exists ((VV$35$$35$10092 Int) (VV$35$$35$F$35$$35$315 Int)) (and (exists ((lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3262 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3262 Bool) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3262 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3262 Int) (lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3262 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3262 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3262 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3262 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3262 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3262 Int) (lq_karg$36$VV$35$$35$3261$35$$35$k_$35$$35$3262 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3262 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3262 Int) (lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3262 Int) (lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3262 Int)) (and (= lq_karg$36$VV$35$$35$3261$35$$35$k_$35$$35$3262 VV$35$$35$F$35$$35$315) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3262 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3262 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3262 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3262 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3262 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3262 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3262 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3262 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3262 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3262 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3262 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3262 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3262 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3262 ts$39$$35$$35$aiUV) (exists ((VV$35$$35$10097 Int) (VV$35$$35$F$35$$35$316 Int)) (and (= VV$35$$35$10097 (apply$35$$35$0 (as fst Int) ds_dj1U)) (= VV$35$$35$10097 t$39$$35$$35$aiUT) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10097) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10097)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10097) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10097)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10097))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10097) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10097)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10097) 0) (= lq_karg$36$VV$35$$35$3261$35$$35$k_$35$$35$3262 VV$35$$35$F$35$$35$316) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3262 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3262 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3262 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3262 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3262 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3262 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3262 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3262 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3262 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3262 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3262 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3262 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3262 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3262 ts$39$$35$$35$aiUV))))) (= VV$35$$35$10092 lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= VV$35$$35$10092 t$39$$35$$35$aiUT) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10092) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10092)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10092) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10092)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10092))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10092) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10092)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10092) 0) (<= (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT) VV$35$$35$F$35$$35$315) (= lq_karg$36$VV$35$$35$3283$35$$35$k_$35$$35$3284 VV$35$$35$F$35$$35$315) (= lq_karg$36$VV$35$$35$3285$35$$35$k_$35$$35$3284 VV$35$$35$10092) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3284 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3284 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3284 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867273$35$$35$djah$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3284 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3284 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3284 ts$39$$35$$35$aiUV))))) (exists ((lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3284 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3284 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3284 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867273$35$$35$djah$35$$35$k_$35$$35$3284 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3284 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3284 Int) (lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3284 Int) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3284 Int) (lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3284 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3284 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3284 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3284 Int) (lq_karg$36$VV$35$$35$3285$35$$35$k_$35$$35$3284 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3284 Bool) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3284 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3284 Int) (lq_karg$36$VV$35$$35$3283$35$$35$k_$35$$35$3284 Int)) (and (= lq_karg$36$VV$35$$35$3283$35$$35$k_$35$$35$3284 VV$35$$35$F$35$$35$300) (= lq_karg$36$VV$35$$35$3285$35$$35$k_$35$$35$3284 VV$35$$35$10057) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3284 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3284 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3284 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867273$35$$35$djah$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3284 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3284 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3284 ts$39$$35$$35$aiUV) (exists ((VV$35$$35$F$35$$35$310 Int) (VV$35$$35$10073 Int) (VV$35$$35$10081 Int)) (and (<= (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT) VV$35$$35$F$35$$35$310) (<= (apply$35$$35$0 (as Binomial.root Int) (apply$35$$35$0 (as fst Int) ds_dj1U)) VV$35$$35$F$35$$35$310) (= VV$35$$35$10073 (apply$35$$35$0 (as snd Int) ds_dj1U)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$10073) 0) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10073) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$10073) 0)) (= VV$35$$35$10073 ts$39$$35$$35$aiUV) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10073) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$10073) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$10073) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10073)) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10081) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10081)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10081) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10081)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10081))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10081) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10081)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10081) 0) (= lq_karg$36$VV$35$$35$3283$35$$35$k_$35$$35$3284 VV$35$$35$F$35$$35$310) (= lq_karg$36$VV$35$$35$3285$35$$35$k_$35$$35$3284 VV$35$$35$10081) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3284 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3284 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3284 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867273$35$$35$djah$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3284 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3284 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3284 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3284 ts$39$$35$$35$aiUV)))))) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$10049) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$10049)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10049) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$10049) 0)) (= VV$35$$35$10049 lq_anf$36$$35$$35$7205759403792867274$35$$35$djai) (= VV$35$$35$10049 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) ts$39$$35$$35$aiUV)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$10049) (smt_map_cup (smt_map_sto (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah (+ 1 (smt_map_sel (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah))) (apply$35$$35$3 (as Binomial.listElts Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$10049) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (apply$35$$35$3 (as Binomial.treeListElts Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10049) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$10049) (smt_map_sto (apply$35$$35$3 (as fromList Int) ts$39$$35$$35$aiUV) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ts$39$$35$$35$aiUV) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah)))) (= (apply$35$$35$0 (as head Int) VV$35$$35$10049) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= (apply$35$$35$0 (as len Int) VV$35$$35$10049) (+ 1 (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$10049) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$10049) ts$39$$35$$35$aiUV) (= (apply$35$$35$0 (as tail Int) VV$35$$35$10049) ts$39$$35$$35$aiUV) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10049) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$10049) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$10049) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10049)) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10057) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10057)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10057) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10057)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10057))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10057) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10057)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10057) 0) (= lq_karg$36$VV$35$$35$3323$35$$35$k_$35$$35$3324 VV$35$$35$F$35$$35$300) (= lq_karg$36$VV$35$$35$3325$35$$35$k_$35$$35$3324 VV$35$$35$10057) (= lq_karg$36$VV$35$$35$3332$35$$35$k_$35$$35$3324 VV$35$$35$10049) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3324 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3324 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3324 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3324 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3324 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3324 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3324 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3324 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3324 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867273$35$$35$djah$35$$35$k_$35$$35$3324 lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867274$35$$35$djai$35$$35$k_$35$$35$3324 lq_anf$36$$35$$35$7205759403792867274$35$$35$djai) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3324 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3324 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3324 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3324 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3324 ts$39$$35$$35$aiUV))))) (exists ((lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3333 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3333 Bool) (lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3333 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3333 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3333 Bool) (lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3333 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3333 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867273$35$$35$djah$35$$35$k_$35$$35$3333 Int) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3333 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3333 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3333 Int) (lq_karg$36$VV$35$$35$3332$35$$35$k_$35$$35$3333 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3333 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3333 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867274$35$$35$djai$35$$35$k_$35$$35$3333 Int) (lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3333 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3333 Int)) (and (= lq_karg$36$VV$35$$35$3332$35$$35$k_$35$$35$3333 VV$35$$35$10010) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3333 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3333 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3333 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3333 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3333 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3333 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3333 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3333 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3333 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867273$35$$35$djah$35$$35$k_$35$$35$3333 lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867274$35$$35$djai$35$$35$k_$35$$35$3333 lq_anf$36$$35$$35$7205759403792867274$35$$35$djai) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3333 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3333 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3333 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3333 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3333 ts$39$$35$$35$aiUV) (exists ((VV$35$$35$F$35$$35$296 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$296) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$296)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$296) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$296) 0)) (= VV$35$$35$F$35$$35$296 lq_anf$36$$35$$35$7205759403792867274$35$$35$djai) (= VV$35$$35$F$35$$35$296 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) ts$39$$35$$35$aiUV)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$296) (smt_map_cup (smt_map_sto (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah (+ 1 (smt_map_sel (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah))) (apply$35$$35$3 (as Binomial.listElts Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$296) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (apply$35$$35$3 (as Binomial.treeListElts Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$296) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$296) (smt_map_sto (apply$35$$35$3 (as fromList Int) ts$39$$35$$35$aiUV) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ts$39$$35$$35$aiUV) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah)))) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$296) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$296) (+ 1 (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$296) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$296) ts$39$$35$$35$aiUV) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$296) ts$39$$35$$35$aiUV) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$296) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$296) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$296) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$296)) (= lq_karg$36$VV$35$$35$3332$35$$35$k_$35$$35$3333 VV$35$$35$F$35$$35$296) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3333 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3333 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3333 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3333 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3333 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3333 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3333 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3333 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3333 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867273$35$$35$djah$35$$35$k_$35$$35$3333 lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867274$35$$35$djai$35$$35$k_$35$$35$3333 lq_anf$36$$35$$35$7205759403792867274$35$$35$djai) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3333 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3333 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3333 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3333 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3333 ts$39$$35$$35$aiUV))))) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3326 Bool) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3326 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3326 Int) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3326 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3326 Int) (lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3326 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867274$35$$35$djai$35$$35$k_$35$$35$3326 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3326 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867273$35$$35$djah$35$$35$k_$35$$35$3326 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3326 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3326 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3326 Bool) (lq_karg$36$VV$35$$35$3325$35$$35$k_$35$$35$3326 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3326 Int) (lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3326 Int) (lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3326 Int) (lq_karg$36$VV$35$$35$3332$35$$35$k_$35$$35$3326 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3326 Int)) (and (= lq_karg$36$VV$35$$35$3325$35$$35$k_$35$$35$3326 VV$35$$35$10018) (= lq_karg$36$VV$35$$35$3332$35$$35$k_$35$$35$3326 VV$35$$35$10010) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3326 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3326 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3326 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3326 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3326 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3326 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3326 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3326 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3326 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867273$35$$35$djah$35$$35$k_$35$$35$3326 lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867274$35$$35$djai$35$$35$k_$35$$35$3326 lq_anf$36$$35$$35$7205759403792867274$35$$35$djai) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3326 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3326 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3326 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3326 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3326 ts$39$$35$$35$aiUV) (exists ((VV$35$$35$10049 Int) (VV$35$$35$F$35$$35$298 Int)) (and (or (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3286 Bool) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3286 Int) (lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3286 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3286 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3286 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3286 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3286 Int) (lq_karg$36$VV$35$$35$3285$35$$35$k_$35$$35$3286 Int) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3286 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3286 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3286 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867273$35$$35$djah$35$$35$k_$35$$35$3286 Int) (lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3286 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3286 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3286 Bool) (lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3286 Int)) (and (= lq_karg$36$VV$35$$35$3285$35$$35$k_$35$$35$3286 VV$35$$35$F$35$$35$298) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3286 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3286 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3286 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867273$35$$35$djah$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3286 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3286 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3286 ts$39$$35$$35$aiUV) (exists ((VV$35$$35$F$35$$35$314 Int)) (and (= VV$35$$35$F$35$$35$314 lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= VV$35$$35$F$35$$35$314 t$39$$35$$35$aiUT) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$314) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$314)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$314) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$314)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$314))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$314) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$314)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$314) 0) (= lq_karg$36$VV$35$$35$3285$35$$35$k_$35$$35$3286 VV$35$$35$F$35$$35$314) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3286 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3286 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3286 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867273$35$$35$djah$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3286 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3286 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3286 ts$39$$35$$35$aiUV))))) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3286 Bool) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3286 Int) (lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3286 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3286 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3286 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3286 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3286 Int) (lq_karg$36$VV$35$$35$3285$35$$35$k_$35$$35$3286 Int) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3286 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3286 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3286 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867273$35$$35$djah$35$$35$k_$35$$35$3286 Int) (lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3286 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3286 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3286 Bool) (lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3286 Int)) (and (= lq_karg$36$VV$35$$35$3285$35$$35$k_$35$$35$3286 VV$35$$35$F$35$$35$298) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3286 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3286 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3286 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867273$35$$35$djah$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3286 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3286 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3286 ts$39$$35$$35$aiUV) (exists ((VV$35$$35$10073 Int) (VV$35$$35$F$35$$35$308 Int)) (and (= VV$35$$35$10073 (apply$35$$35$0 (as snd Int) ds_dj1U)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$10073) 0) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10073) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$10073) 0)) (= VV$35$$35$10073 ts$39$$35$$35$aiUV) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10073) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$10073) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$10073) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10073)) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$308) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$308)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$308) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$308)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$308))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$308) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$308)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$308) 0) (= lq_karg$36$VV$35$$35$3285$35$$35$k_$35$$35$3286 VV$35$$35$F$35$$35$308) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3286 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3286 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3286 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867273$35$$35$djah$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3286 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3286 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3286 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3286 ts$39$$35$$35$aiUV)))))) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$10049) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$10049)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10049) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$10049) 0)) (= VV$35$$35$10049 lq_anf$36$$35$$35$7205759403792867274$35$$35$djai) (= VV$35$$35$10049 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) ts$39$$35$$35$aiUV)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$10049) (smt_map_cup (smt_map_sto (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah (+ 1 (smt_map_sel (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah))) (apply$35$$35$3 (as Binomial.listElts Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$10049) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (apply$35$$35$3 (as Binomial.treeListElts Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10049) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$10049) (smt_map_sto (apply$35$$35$3 (as fromList Int) ts$39$$35$$35$aiUV) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ts$39$$35$$35$aiUV) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah)))) (= (apply$35$$35$0 (as head Int) VV$35$$35$10049) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= (apply$35$$35$0 (as len Int) VV$35$$35$10049) (+ 1 (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$10049) lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$10049) ts$39$$35$$35$aiUV) (= (apply$35$$35$0 (as tail Int) VV$35$$35$10049) ts$39$$35$$35$aiUV) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10049) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$10049) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$10049) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10049)) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$298) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$298)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$298) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$298)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$298))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$298) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$298)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$298) 0) (= lq_karg$36$VV$35$$35$3325$35$$35$k_$35$$35$3326 VV$35$$35$F$35$$35$298) (= lq_karg$36$VV$35$$35$3332$35$$35$k_$35$$35$3326 VV$35$$35$10049) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3326 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3326 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3326 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3326 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3326 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3326 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3326 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3326 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3326 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867273$35$$35$djah$35$$35$k_$35$$35$3326 lq_anf$36$$35$$35$7205759403792867273$35$$35$djah) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867274$35$$35$djai$35$$35$k_$35$$35$3326 lq_anf$36$$35$$35$7205759403792867274$35$$35$djai) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3326 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3326 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3326 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3326 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3326 ts$39$$35$$35$aiUV))))) (= t$39$$35$$35$aiUT (apply$35$$35$0 (as fst Int) ds_dj1U))) b$36$$35$$35$97 (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV) 0) (= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV) 0) (>= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV) 0) (<= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV))) (= lq_anf$36$$35$$35$7205759403792867267$35$$35$djab (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aiOu)) (= lq_anf$36$$35$$35$7205759403792867268$35$$35$djac (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT)) b$36$$35$$35$325 b$36$$35$$35$357 b$36$$35$$35$326 b$36$$35$$35$358 b$36$$35$$35$330 b$36$$35$$35$43 b$36$$35$$35$331 b$36$$35$$35$332 b$36$$35$$35$333 b$36$$35$$35$365 b$36$$35$$35$334 b$36$$35$$35$366 b$36$$35$$35$47 b$36$$35$$35$367 b$36$$35$$35$369 b$36$$35$$35$340 b$36$$35$$35$341 b$36$$35$$35$342 b$36$$35$$35$343 b$36$$35$$35$1272 b$36$$35$$35$344 (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10010) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$10010) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10010) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$10010) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$10010) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10010))) (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10018) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10018)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10018) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10018)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10018))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10018) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10018)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10018) 0)) b$36$$35$$35$93 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) t$39$$35$$35$aiUT) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$39$$35$$35$aiUT)) (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$39$$35$$35$aiUT)) (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) t$39$$35$$35$aiUT) (apply$35$$35$0 (as Binomial.rank Int) t$39$$35$$35$aiUT)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) t$39$$35$$35$aiUT) 0))))
(push 1)
(assert (not (<= (apply$35$$35$0 (as Binomial.root Int) (apply$35$$35$0 (as fst Int) VV$35$$35$9987)) VV$35$$35$F$35$$35$295)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$288 b$36$$35$$35$97 b$36$$35$$35$289 b$36$$35$$35$290 b$36$$35$$35$292 b$36$$35$$35$293 b$36$$35$$35$294 b$36$$35$$35$295 b$36$$35$$35$296 b$36$$35$$35$1418 b$36$$35$$35$43 b$36$$35$$35$1420 b$36$$35$$35$269 b$36$$35$$35$270 b$36$$35$$35$47 b$36$$35$$35$271 b$36$$35$$35$273 b$36$$35$$35$274 b$36$$35$$35$275 b$36$$35$$35$276 b$36$$35$$35$277 b$36$$35$$35$281 b$36$$35$$35$282 b$36$$35$$35$283 b$36$$35$$35$284 b$36$$35$$35$1852 b$36$$35$$35$93 b$36$$35$$35$285 b$36$$35$$35$286 b$36$$35$$35$287))
(push 1)
(assert (not (> (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$2284) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$423))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$224 b$36$$35$$35$97 b$36$$35$$35$225 b$36$$35$$35$229 b$36$$35$$35$230 b$36$$35$$35$231 b$36$$35$$35$232 b$36$$35$$35$233 b$36$$35$$35$234 b$36$$35$$35$43 b$36$$35$$35$235 b$36$$35$$35$236 b$36$$35$$35$237 b$36$$35$$35$238 b$36$$35$$35$47 b$36$$35$$35$240 b$36$$35$$35$241 b$36$$35$$35$242 b$36$$35$$35$243 b$36$$35$$35$244 b$36$$35$$35$245 b$36$$35$$35$246 b$36$$35$$35$217 b$36$$35$$35$218 b$36$$35$$35$219 b$36$$35$$35$93 b$36$$35$$35$221 b$36$$35$$35$1853 b$36$$35$$35$222 b$36$$35$$35$223))
(push 1)
(assert (not (>= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$455) 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$195 b$36$$35$$35$196 b$36$$35$$35$197 b$36$$35$$35$198 b$36$$35$$35$199 b$36$$35$$35$1545 b$36$$35$$35$202 b$36$$35$$35$43 b$36$$35$$35$203 b$36$$35$$35$204 b$36$$35$$35$205 b$36$$35$$35$206 b$36$$35$$35$47 b$36$$35$$35$93 b$36$$35$$35$190 b$36$$35$$35$1854 b$36$$35$$35$191))
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$11353) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$487))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$160 b$36$$35$$35$97 b$36$$35$$35$161 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$93 b$36$$35$$35$157 b$36$$35$$35$158 b$36$$35$$35$159 b$36$$35$$35$1855))
(push 1)
(assert (not (= (= VV$35$$35$F$35$$35$519 0) (= (apply$35$$35$0 (as len Int) ds_dj3y) 0))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$97 (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$72) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$72) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$72) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$72) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$72) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$72))) b$36$$35$$35$553 b$36$$35$$35$554 b$36$$35$$35$43 b$36$$35$$35$555 b$36$$35$$35$556 b$36$$35$$35$557 b$36$$35$$35$558 b$36$$35$$35$47 b$36$$35$$35$559 b$36$$35$$35$560 b$36$$35$$35$561 b$36$$35$$35$93))
(push 1)
(assert (not (< 0 (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$72))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$482 b$36$$35$$35$1858 b$36$$35$$35$483 b$36$$35$$35$484 b$36$$35$$35$485 b$36$$35$$35$486 b$36$$35$$35$519 b$36$$35$$35$520 b$36$$35$$35$489 b$36$$35$$35$521 b$36$$35$$35$490 b$36$$35$$35$43 b$36$$35$$35$491 b$36$$35$$35$492 b$36$$35$$35$493 b$36$$35$$35$47 b$36$$35$$35$497 b$36$$35$$35$498 b$36$$35$$35$499 b$36$$35$$35$500 b$36$$35$$35$501 b$36$$35$$35$502 b$36$$35$$35$503 b$36$$35$$35$504 b$36$$35$$35$93 b$36$$35$$35$477 b$36$$35$$35$478 b$36$$35$$35$479))
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$104) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) ts1$35$$35$aiOS) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj6F)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$288 b$36$$35$$35$97 b$36$$35$$35$289 b$36$$35$$35$290 b$36$$35$$35$292 b$36$$35$$35$1860 b$36$$35$$35$293 b$36$$35$$35$294 b$36$$35$$35$295 b$36$$35$$35$296 b$36$$35$$35$43 b$36$$35$$35$269 b$36$$35$$35$270 b$36$$35$$35$47 b$36$$35$$35$271 b$36$$35$$35$273 b$36$$35$$35$274 b$36$$35$$35$275 b$36$$35$$35$276 b$36$$35$$35$277 b$36$$35$$35$281 b$36$$35$$35$282 b$36$$35$$35$283 b$36$$35$$35$284 b$36$$35$$35$93 b$36$$35$$35$285 b$36$$35$$35$286 b$36$$35$$35$287))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$424 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$224 b$36$$35$$35$97 b$36$$35$$35$225 b$36$$35$$35$229 b$36$$35$$35$1861 b$36$$35$$35$230 b$36$$35$$35$231 b$36$$35$$35$232 b$36$$35$$35$233 b$36$$35$$35$234 b$36$$35$$35$43 b$36$$35$$35$235 b$36$$35$$35$236 b$36$$35$$35$237 b$36$$35$$35$238 b$36$$35$$35$47 b$36$$35$$35$240 b$36$$35$$35$241 b$36$$35$$35$242 b$36$$35$$35$243 b$36$$35$$35$244 b$36$$35$$35$245 b$36$$35$$35$246 b$36$$35$$35$217 b$36$$35$$35$218 b$36$$35$$35$219 b$36$$35$$35$93 b$36$$35$$35$221 b$36$$35$$35$222 b$36$$35$$35$223))
(push 1)
(assert (not (< (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$456) (apply$35$$35$0 (as Binomial.rank Int) ds_dj4a))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$160 b$36$$35$$35$97 b$36$$35$$35$161 b$36$$35$$35$1863 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$93 b$36$$35$$35$157 b$36$$35$$35$158 b$36$$35$$35$159))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$520 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$1864 b$36$$35$$35$553 b$36$$35$$35$554 b$36$$35$$35$43 b$36$$35$$35$555 b$36$$35$$35$556 b$36$$35$$35$557 b$36$$35$$35$558 b$36$$35$$35$47 b$36$$35$$35$559 b$36$$35$$35$560 b$36$$35$$35$561 b$36$$35$$35$93))
(push 1)
(assert (not (apply$35$$35$11 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$482 b$36$$35$$35$483 b$36$$35$$35$484 b$36$$35$$35$485 b$36$$35$$35$486 b$36$$35$$35$519 b$36$$35$$35$520 b$36$$35$$35$489 b$36$$35$$35$521 b$36$$35$$35$1865 b$36$$35$$35$490 b$36$$35$$35$43 b$36$$35$$35$491 b$36$$35$$35$492 b$36$$35$$35$493 b$36$$35$$35$47 b$36$$35$$35$497 b$36$$35$$35$498 b$36$$35$$35$499 b$36$$35$$35$500 b$36$$35$$35$501 b$36$$35$$35$502 b$36$$35$$35$503 b$36$$35$$35$504 b$36$$35$$35$93 b$36$$35$$35$477 b$36$$35$$35$478 b$36$$35$$35$479))
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$105) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$35$$35$aiOS) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj6F)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$195 b$36$$35$$35$196 b$36$$35$$35$197 b$36$$35$$35$198 b$36$$35$$35$199 b$36$$35$$35$1545 b$36$$35$$35$202 b$36$$35$$35$43 b$36$$35$$35$203 b$36$$35$$35$1547 b$36$$35$$35$1867 b$36$$35$$35$204 b$36$$35$$35$205 b$36$$35$$35$206 b$36$$35$$35$47 b$36$$35$$35$93 b$36$$35$$35$190 b$36$$35$$35$191))
(push 1)
(assert (not (> (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$1062) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$489))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$160 b$36$$35$$35$97 b$36$$35$$35$161 b$36$$35$$35$43 b$36$$35$$35$1868 b$36$$35$$35$47 b$36$$35$$35$93 b$36$$35$$35$157 b$36$$35$$35$158 b$36$$35$$35$159))
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) ds_dj3y) VV$35$$35$F$35$$35$521)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$544 b$36$$35$$35$97 b$36$$35$$35$545 b$36$$35$$35$546 b$36$$35$$35$547 b$36$$35$$35$549 b$36$$35$$35$551 b$36$$35$$35$43 b$36$$35$$35$1869 b$36$$35$$35$47 b$36$$35$$35$93 b$36$$35$$35$541 b$36$$35$$35$542))
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$F$35$$35$74) (smt_map_sto (smt_map_def 0) x$35$$35$aiOm (+ 1 (smt_map_sel (smt_map_def 0) x$35$$35$aiOm))))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$384 b$36$$35$$35$416 b$36$$35$$35$97 b$36$$35$$35$386 b$36$$35$$35$387 b$36$$35$$35$388 b$36$$35$$35$389 b$36$$35$$35$390 b$36$$35$$35$391 b$36$$35$$35$43 b$36$$35$$35$1870 b$36$$35$$35$47 b$36$$35$$35$374 b$36$$35$$35$375 b$36$$35$$35$376 b$36$$35$$35$408 b$36$$35$$35$377 b$36$$35$$35$409 b$36$$35$$35$410 b$36$$35$$35$379 b$36$$35$$35$411 b$36$$35$$35$380 b$36$$35$$35$412 b$36$$35$$35$93 b$36$$35$$35$381 b$36$$35$$35$413 b$36$$35$$35$382 b$36$$35$$35$383 b$36$$35$$35$415))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$234 (+ 1 (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$224 b$36$$35$$35$97 b$36$$35$$35$225 b$36$$35$$35$229 b$36$$35$$35$230 b$36$$35$$35$231 b$36$$35$$35$232 b$36$$35$$35$233 b$36$$35$$35$234 b$36$$35$$35$43 b$36$$35$$35$235 b$36$$35$$35$236 b$36$$35$$35$237 b$36$$35$$35$238 b$36$$35$$35$47 b$36$$35$$35$240 b$36$$35$$35$1872 b$36$$35$$35$241 b$36$$35$$35$242 b$36$$35$$35$243 b$36$$35$$35$244 b$36$$35$$35$245 b$36$$35$$35$217 b$36$$35$$35$218 b$36$$35$$35$219 b$36$$35$$35$93 b$36$$35$$35$221 b$36$$35$$35$222 b$36$$35$$35$223))
(push 1)
(assert (not (>= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$458) 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$195 b$36$$35$$35$196 b$36$$35$$35$197 b$36$$35$$35$198 b$36$$35$$35$199 b$36$$35$$35$202 b$36$$35$$35$43 b$36$$35$$35$203 b$36$$35$$35$204 b$36$$35$$35$205 b$36$$35$$35$47 b$36$$35$$35$1873 b$36$$35$$35$93 b$36$$35$$35$190 b$36$$35$$35$191))
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$490) 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$1874 b$36$$35$$35$147 b$36$$35$$35$148 b$36$$35$$35$149 b$36$$35$$35$151 b$36$$35$$35$152 b$36$$35$$35$153 b$36$$35$$35$154 b$36$$35$$35$93))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$522 (apply$35$$35$0 (as Binomial.rank Int) ds_dj3Q))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$544 b$36$$35$$35$97 b$36$$35$$35$545 b$36$$35$$35$546 b$36$$35$$35$547 b$36$$35$$35$549 b$36$$35$$35$551 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$1876 b$36$$35$$35$93 b$36$$35$$35$541 b$36$$35$$35$542))
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$75) 1)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$43 b$36$$35$$35$427 b$36$$35$$35$428 b$36$$35$$35$429 b$36$$35$$35$430 b$36$$35$$35$47 b$36$$35$$35$431 b$36$$35$$35$433 b$36$$35$$35$1877 b$36$$35$$35$93))
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$203) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOn) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj5Q)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$384 b$36$$35$$35$416 b$36$$35$$35$97 b$36$$35$$35$386 b$36$$35$$35$387 b$36$$35$$35$388 b$36$$35$$35$389 b$36$$35$$35$390 b$36$$35$$35$391 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$374 b$36$$35$$35$1878 b$36$$35$$35$375 b$36$$35$$35$376 b$36$$35$$35$408 b$36$$35$$35$377 b$36$$35$$35$409 b$36$$35$$35$410 b$36$$35$$35$379 b$36$$35$$35$411 b$36$$35$$35$380 b$36$$35$$35$412 b$36$$35$$35$93 b$36$$35$$35$381 b$36$$35$$35$413 b$36$$35$$35$382 b$36$$35$$35$383 b$36$$35$$35$415))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$235 1)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$288 b$36$$35$$35$97 b$36$$35$$35$289 b$36$$35$$35$290 b$36$$35$$35$43 b$36$$35$$35$269 b$36$$35$$35$270 b$36$$35$$35$47 b$36$$35$$35$271 b$36$$35$$35$273 b$36$$35$$35$274 b$36$$35$$35$275 b$36$$35$$35$276 b$36$$35$$35$277 b$36$$35$$35$1879 b$36$$35$$35$281 b$36$$35$$35$282 b$36$$35$$35$283 b$36$$35$$35$284 b$36$$35$$35$93 b$36$$35$$35$285 b$36$$35$$35$286 b$36$$35$$35$287))
(push 1)
(assert (not VV$35$$35$F$35$$35$427))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$224 b$36$$35$$35$97 b$36$$35$$35$225 b$36$$35$$35$229 b$36$$35$$35$230 b$36$$35$$35$231 b$36$$35$$35$232 b$36$$35$$35$233 b$36$$35$$35$234 b$36$$35$$35$43 b$36$$35$$35$235 b$36$$35$$35$236 b$36$$35$$35$237 b$36$$35$$35$238 b$36$$35$$35$47 b$36$$35$$35$240 b$36$$35$$35$241 b$36$$35$$35$242 b$36$$35$$35$243 b$36$$35$$35$244 b$36$$35$$35$245 b$36$$35$$35$1880 b$36$$35$$35$217 b$36$$35$$35$218 b$36$$35$$35$219 b$36$$35$$35$93 b$36$$35$$35$221 b$36$$35$$35$222 b$36$$35$$35$223))
(push 1)
(assert (not (< (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$459) (apply$35$$35$0 (as Binomial.rank Int) ds_dj4a))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$195 b$36$$35$$35$196 b$36$$35$$35$197 b$36$$35$$35$198 b$36$$35$$35$199 b$36$$35$$35$202 b$36$$35$$35$43 b$36$$35$$35$203 b$36$$35$$35$204 b$36$$35$$35$205 b$36$$35$$35$1549 b$36$$35$$35$47 b$36$$35$$35$1881 b$36$$35$$35$93 b$36$$35$$35$190 b$36$$35$$35$191))
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$11372) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$491))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$147 b$36$$35$$35$148 b$36$$35$$35$149 b$36$$35$$35$151 b$36$$35$$35$152 b$36$$35$$35$153 b$36$$35$$35$154 b$36$$35$$35$1882 b$36$$35$$35$93))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$523 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$43 b$36$$35$$35$427 b$36$$35$$35$428 b$36$$35$$35$429 b$36$$35$$35$430 b$36$$35$$35$47 b$36$$35$$35$431 b$36$$35$$35$433 b$36$$35$$35$1884 b$36$$35$$35$93))
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$204) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOn) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj5Q)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$384 b$36$$35$$35$416 b$36$$35$$35$97 b$36$$35$$35$386 b$36$$35$$35$387 b$36$$35$$35$388 b$36$$35$$35$389 b$36$$35$$35$390 b$36$$35$$35$391 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$374 b$36$$35$$35$375 b$36$$35$$35$376 b$36$$35$$35$408 b$36$$35$$35$377 b$36$$35$$35$409 b$36$$35$$35$410 b$36$$35$$35$379 b$36$$35$$35$411 b$36$$35$$35$380 b$36$$35$$35$412 b$36$$35$$35$93 b$36$$35$$35$381 b$36$$35$$35$413 b$36$$35$$35$1885 b$36$$35$$35$382 b$36$$35$$35$383 b$36$$35$$35$415))
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$236) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$1890 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$144 b$36$$35$$35$93))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$524 a$35$$35$aiNJ)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$1891 b$36$$35$$35$584 b$36$$35$$35$585 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$93))
(push 1)
(assert (not (< 0 (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$45))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (or (exists ((lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3877 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$3877 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$3877 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3877 Int) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3877 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$3877 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3877 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3877 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3877 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3877 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3877 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3877 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3877 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3877 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3877 Int) (lq_karg$36$VV$35$$35$3876$35$$35$k_$35$$35$3877 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$3877 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3877 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3877 Int)) (and (= lq_karg$36$VV$35$$35$3876$35$$35$k_$35$$35$3877 VV$35$$35$F$35$$35$237) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3877 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3877 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3877 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3877 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3877 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3877 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3877 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3877 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3877 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3877 x2$35$$35$aiOe) (exists ((VV$35$$35$F$35$$35$249 Int)) (and (= VV$35$$35$F$35$$35$249 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= VV$35$$35$F$35$$35$249 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$249) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$249)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$249) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$249)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$249))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$249) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$249)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$249) 0) (= lq_karg$36$VV$35$$35$3876$35$$35$k_$35$$35$3877 VV$35$$35$F$35$$35$249) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3877 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3877 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3877 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3877 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3877 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3877 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3877 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3877 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3877 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3877 x2$35$$35$aiOe))))) (exists ((lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3877 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$3877 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$3877 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3877 Int) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3877 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$3877 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3877 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3877 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3877 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3877 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3877 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3877 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3877 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3877 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3877 Int) (lq_karg$36$VV$35$$35$3876$35$$35$k_$35$$35$3877 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$3877 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3877 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3877 Int)) (and (= lq_karg$36$VV$35$$35$3876$35$$35$k_$35$$35$3877 VV$35$$35$F$35$$35$237) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3877 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3877 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3877 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3877 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3877 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3877 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3877 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3877 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3877 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3877 x2$35$$35$aiOe) (exists ((VV$35$$35$F$35$$35$243 Int) (VV$35$$35$9560 Int)) (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$243) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$243)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$243) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$243)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$243))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$243) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$243)) (> r1$35$$35$aiOa (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$243)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$243) 0) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9560) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$9560) 0)) (= VV$35$$35$9560 ts1$35$$35$aiOb) (= (apply$35$$35$0 (as len Int) VV$35$$35$9560) r1$35$$35$aiOa) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9560) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$9560) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$9560) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9560)) (= lq_karg$36$VV$35$$35$3876$35$$35$k_$35$$35$3877 VV$35$$35$F$35$$35$243) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3877 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3877 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3877 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3877 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3877 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3877 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3877 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3877 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3877 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3877 x2$35$$35$aiOe)))))) b$36$$35$$35$384 b$36$$35$$35$416 b$36$$35$$35$97 b$36$$35$$35$386 b$36$$35$$35$387 b$36$$35$$35$388 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$237) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$237)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$237) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$237)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$237))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$237) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$237)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$237) 0)) b$36$$35$$35$1189 b$36$$35$$35$389 b$36$$35$$35$390 b$36$$35$$35$391 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$374 b$36$$35$$35$375 b$36$$35$$35$376 b$36$$35$$35$408 b$36$$35$$35$377 b$36$$35$$35$409 b$36$$35$$35$410 b$36$$35$$35$379 b$36$$35$$35$411 b$36$$35$$35$380 b$36$$35$$35$412 b$36$$35$$35$93 b$36$$35$$35$381 b$36$$35$$35$413 b$36$$35$$35$382 b$36$$35$$35$383 b$36$$35$$35$415))
(push 1)
(assert (not (> lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$237))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$224 b$36$$35$$35$97 b$36$$35$$35$225 b$36$$35$$35$229 b$36$$35$$35$1893 b$36$$35$$35$230 b$36$$35$$35$231 b$36$$35$$35$232 b$36$$35$$35$233 b$36$$35$$35$234 b$36$$35$$35$43 b$36$$35$$35$235 b$36$$35$$35$236 b$36$$35$$35$237 b$36$$35$$35$238 b$36$$35$$35$47 b$36$$35$$35$240 b$36$$35$$35$241 b$36$$35$$35$242 b$36$$35$$35$243 b$36$$35$$35$244 b$36$$35$$35$217 b$36$$35$$35$218 b$36$$35$$35$219 b$36$$35$$35$93 b$36$$35$$35$221 b$36$$35$$35$222 b$36$$35$$35$223))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$461 (+ 1 (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiNR)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$195 b$36$$35$$35$196 b$36$$35$$35$197 b$36$$35$$35$198 b$36$$35$$35$1894 b$36$$35$$35$199 b$36$$35$$35$202 b$36$$35$$35$43 b$36$$35$$35$203 b$36$$35$$35$204 b$36$$35$$35$205 b$36$$35$$35$1549 b$36$$35$$35$47 b$36$$35$$35$1551 b$36$$35$$35$93 b$36$$35$$35$190 b$36$$35$$35$191))
(push 1)
(assert (not (> (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$1226) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$493))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (or (exists ((lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3877 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$3877 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$3877 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3877 Int) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3877 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$3877 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3877 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3877 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3877 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3877 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3877 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3877 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3877 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3877 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3877 Int) (lq_karg$36$VV$35$$35$3876$35$$35$k_$35$$35$3877 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$3877 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3877 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3877 Int)) (and (= lq_karg$36$VV$35$$35$3876$35$$35$k_$35$$35$3877 VV$35$$35$9539) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3877 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3877 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3877 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3877 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3877 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3877 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3877 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3877 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3877 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3877 x2$35$$35$aiOe) (exists ((VV$35$$35$F$35$$35$249 Int)) (and (= VV$35$$35$F$35$$35$249 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= VV$35$$35$F$35$$35$249 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$249) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$249)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$249) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$249)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$249))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$249) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$249)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$249) 0) (= lq_karg$36$VV$35$$35$3876$35$$35$k_$35$$35$3877 VV$35$$35$F$35$$35$249) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3877 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3877 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3877 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3877 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3877 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3877 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3877 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3877 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3877 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3877 x2$35$$35$aiOe))))) (exists ((lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3877 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$3877 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$3877 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3877 Int) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3877 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$3877 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3877 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3877 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3877 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3877 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3877 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3877 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3877 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3877 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3877 Int) (lq_karg$36$VV$35$$35$3876$35$$35$k_$35$$35$3877 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$3877 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3877 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3877 Int)) (and (= lq_karg$36$VV$35$$35$3876$35$$35$k_$35$$35$3877 VV$35$$35$9539) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3877 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3877 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3877 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3877 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3877 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3877 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3877 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3877 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3877 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3877 x2$35$$35$aiOe) (exists ((VV$35$$35$F$35$$35$243 Int) (VV$35$$35$9560 Int)) (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$243) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$243)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$243) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$243)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$243))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$243) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$243)) (> r1$35$$35$aiOa (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$243)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$243) 0) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9560) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$9560) 0)) (= VV$35$$35$9560 ts1$35$$35$aiOb) (= (apply$35$$35$0 (as len Int) VV$35$$35$9560) r1$35$$35$aiOa) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9560) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$9560) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$9560) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9560)) (= lq_karg$36$VV$35$$35$3876$35$$35$k_$35$$35$3877 VV$35$$35$F$35$$35$243) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$3877 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3877 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3877 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3877 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3877 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3877 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3877 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3877 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3877 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3877 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3877 x2$35$$35$aiOe)))))) (or (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3875 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3875 Int) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3875 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$3875 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$3875 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$3875 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3875 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3875 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3875 Int) (lq_karg$36$VV$35$$35$3876$35$$35$k_$35$$35$3875 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$3875 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3875 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3875 Bool) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3875 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3875 Int) (lq_karg$36$VV$35$$35$3874$35$$35$k_$35$$35$3875 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3875 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3875 Int) (lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3875 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3875 Int)) (and (= lq_karg$36$VV$35$$35$3874$35$$35$k_$35$$35$3875 VV$35$$35$F$35$$35$238) (= lq_karg$36$VV$35$$35$3876$35$$35$k_$35$$35$3875 VV$35$$35$9539) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3875 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3875 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3875 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3875 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$3875 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$3875 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$3875 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$3875 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3875 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3875 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3875 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3875 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3875 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3875 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3875 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3875 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3875 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3875 x2$35$$35$aiOe) (exists ((VV$35$$35$F$35$$35$250 Int) (VV$35$$35$9579 Int)) (and (exists ((lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3853 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$3853 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3853 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3853 Bool) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3853 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$3853 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3853 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3853 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3853 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3853 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3853 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$3853 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3853 Bool) (lq_karg$36$VV$35$$35$3852$35$$35$k_$35$$35$3853 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3853 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3853 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3853 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3853 Int)) (and (= lq_karg$36$VV$35$$35$3852$35$$35$k_$35$$35$3853 VV$35$$35$F$35$$35$250) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3853 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3853 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3853 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3853 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$3853 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$3853 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$3853 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3853 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3853 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3853 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3853 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3853 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3853 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3853 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3853 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3853 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3853 x2$35$$35$aiOe) (exists ((VV$35$$35$F$35$$35$251 Int) (VV$35$$35$9584 Int)) (and (apply$35$$35$1 (as is$36$Binomial.Node Int) VV$35$$35$9584) (= VV$35$$35$9584 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= VV$35$$35$9584 t2$35$$35$aiOd) (= VV$35$$35$9584 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x2$35$$35$aiOe) r2$35$$35$aiOf) ts2$35$$35$aiOg) sz2$35$$35$aiOh)) (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$9584) r2$35$$35$aiOf) (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$9584) (apply$35$$35$0 (as Binomial.rank Int) t1$35$$35$aiO8)) (= (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$9584) x2$35$$35$aiOe) (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$9584) ts2$35$$35$aiOg) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$9584) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$9584)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$9584) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$9584)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$9584))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$9584) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) ts2$35$$35$aiOg) (smt_map_sto (smt_map_def 0) x2$35$$35$aiOe (+ 1 (smt_map_sel (smt_map_def 0) x2$35$$35$aiOe))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ts2$35$$35$aiOg)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x2$35$$35$aiOe) (- r2$35$$35$aiOf 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ts2$35$$35$aiOg)) (- sz2$35$$35$aiOh (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ts2$35$$35$aiOg)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9584) r2$35$$35$aiOf) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9584) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$9584)) (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$9584) sz2$35$$35$aiOh) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) VV$35$$35$9584) x2$35$$35$aiOe) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) VV$35$$35$9584) r2$35$$35$aiOf) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$9584) ts2$35$$35$aiOg) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) VV$35$$35$9584) sz2$35$$35$aiOh) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9584) 0) (= lq_karg$36$VV$35$$35$3852$35$$35$k_$35$$35$3853 VV$35$$35$F$35$$35$251) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3853 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3853 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3853 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3853 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$3853 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$3853 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$3853 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3853 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3853 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3853 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3853 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3853 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3853 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3853 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3853 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3853 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3853 x2$35$$35$aiOe))))) (<= (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) VV$35$$35$F$35$$35$250) (= VV$35$$35$9579 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= VV$35$$35$9579 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$9579) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$9579)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$9579) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$9579)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$9579))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9579) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$9579)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9579) 0) (= lq_karg$36$VV$35$$35$3874$35$$35$k_$35$$35$3875 VV$35$$35$F$35$$35$250) (= lq_karg$36$VV$35$$35$3876$35$$35$k_$35$$35$3875 VV$35$$35$9579) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3875 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3875 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3875 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3875 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$3875 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$3875 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$3875 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$3875 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3875 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3875 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3875 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3875 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3875 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3875 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3875 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3875 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3875 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3875 x2$35$$35$aiOe))))) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3875 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3875 Int) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3875 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$3875 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$3875 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$3875 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3875 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3875 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3875 Int) (lq_karg$36$VV$35$$35$3876$35$$35$k_$35$$35$3875 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$3875 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3875 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3875 Bool) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3875 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3875 Int) (lq_karg$36$VV$35$$35$3874$35$$35$k_$35$$35$3875 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3875 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3875 Int) (lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3875 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3875 Int)) (and (= lq_karg$36$VV$35$$35$3874$35$$35$k_$35$$35$3875 VV$35$$35$F$35$$35$238) (= lq_karg$36$VV$35$$35$3876$35$$35$k_$35$$35$3875 VV$35$$35$9539) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3875 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3875 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3875 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3875 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$3875 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$3875 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$3875 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$3875 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3875 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3875 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3875 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3875 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3875 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3875 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3875 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3875 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3875 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3875 x2$35$$35$aiOe) (exists ((VV$35$$35$9560 Int) (VV$35$$35$9568 Int) (VV$35$$35$F$35$$35$245 Int)) (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9560) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$9560) 0)) (= VV$35$$35$9560 ts1$35$$35$aiOb) (= (apply$35$$35$0 (as len Int) VV$35$$35$9560) r1$35$$35$aiOa) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9560) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$9560) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$9560) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9560)) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$9568) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$9568)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$9568) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$9568)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$9568))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9568) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$9568)) (> r1$35$$35$aiOa (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9568)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9568) 0) (<= x1$35$$35$aiO9 VV$35$$35$F$35$$35$245) (= lq_karg$36$VV$35$$35$3874$35$$35$k_$35$$35$3875 VV$35$$35$F$35$$35$245) (= lq_karg$36$VV$35$$35$3876$35$$35$k_$35$$35$3875 VV$35$$35$9568) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3875 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3875 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3875 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3875 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$3875 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$3875 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$3875 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$3875 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3875 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3875 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3875 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3875 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3875 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3875 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3875 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3875 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3875 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3875 x2$35$$35$aiOe))))))) b$36$$35$$35$384 b$36$$35$$35$416 b$36$$35$$35$97 b$36$$35$$35$386 b$36$$35$$35$387 b$36$$35$$35$388 b$36$$35$$35$1189 b$36$$35$$35$389 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$9539) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$9539)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$9539) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$9539)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$9539))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9539) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$9539)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9539) 0)) b$36$$35$$35$390 b$36$$35$$35$391 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$374 b$36$$35$$35$375 b$36$$35$$35$376 b$36$$35$$35$408 b$36$$35$$35$377 b$36$$35$$35$409 b$36$$35$$35$410 b$36$$35$$35$379 b$36$$35$$35$411 b$36$$35$$35$380 b$36$$35$$35$412 b$36$$35$$35$93 b$36$$35$$35$381 b$36$$35$$35$413 b$36$$35$$35$382 b$36$$35$$35$383 b$36$$35$$35$415))
(push 1)
(assert (not (<= x1$35$$35$aiO9 VV$35$$35$F$35$$35$238)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$224 b$36$$35$$35$97 b$36$$35$$35$225 b$36$$35$$35$229 b$36$$35$$35$230 b$36$$35$$35$231 b$36$$35$$35$232 b$36$$35$$35$233 b$36$$35$$35$234 b$36$$35$$35$1898 b$36$$35$$35$43 b$36$$35$$35$235 b$36$$35$$35$236 b$36$$35$$35$237 b$36$$35$$35$238 b$36$$35$$35$47 b$36$$35$$35$240 b$36$$35$$35$241 b$36$$35$$35$242 b$36$$35$$35$243 b$36$$35$$35$244 b$36$$35$$35$217 b$36$$35$$35$218 b$36$$35$$35$219 b$36$$35$$35$93 b$36$$35$$35$221 b$36$$35$$35$222 b$36$$35$$35$223))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$462 1)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$195 b$36$$35$$35$196 b$36$$35$$35$197 b$36$$35$$35$198 b$36$$35$$35$199 b$36$$35$$35$200 b$36$$35$$35$201 b$36$$35$$35$43 b$36$$35$$35$1899 b$36$$35$$35$47 b$36$$35$$35$93 b$36$$35$$35$190 b$36$$35$$35$191))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$494 (apply$35$$35$0 (as head Int) ds_dj30))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$584 b$36$$35$$35$43 b$36$$35$$35$1900 b$36$$35$$35$47 b$36$$35$$35$93))
(push 1)
(assert (not (< 0 (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$47)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$43 b$36$$35$$35$269 b$36$$35$$35$1901 b$36$$35$$35$270 b$36$$35$$35$47 b$36$$35$$35$271 b$36$$35$$35$273 b$36$$35$$35$274 b$36$$35$$35$275 b$36$$35$$35$276 b$36$$35$$35$277 b$36$$35$$35$281 b$36$$35$$35$282 b$36$$35$$35$283 b$36$$35$$35$284 b$36$$35$$35$93))
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$431) 1)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$224 b$36$$35$$35$97 b$36$$35$$35$225 b$36$$35$$35$229 b$36$$35$$35$230 b$36$$35$$35$231 b$36$$35$$35$232 b$36$$35$$35$233 b$36$$35$$35$234 b$36$$35$$35$43 b$36$$35$$35$235 b$36$$35$$35$236 b$36$$35$$35$237 b$36$$35$$35$238 b$36$$35$$35$1902 b$36$$35$$35$47 b$36$$35$$35$240 b$36$$35$$35$241 b$36$$35$$35$242 b$36$$35$$35$243 b$36$$35$$35$244 b$36$$35$$35$217 b$36$$35$$35$218 b$36$$35$$35$219 b$36$$35$$35$93 b$36$$35$$35$221 b$36$$35$$35$222 b$36$$35$$35$223))
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$463) lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$195 b$36$$35$$35$196 b$36$$35$$35$197 b$36$$35$$35$198 b$36$$35$$35$199 b$36$$35$$35$200 b$36$$35$$35$201 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$1903 b$36$$35$$35$93 b$36$$35$$35$190 b$36$$35$$35$191))
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$495) (- (apply$35$$35$0 (as len Int) ds_dj30) 1))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$448 b$36$$35$$35$97 b$36$$35$$35$452 b$36$$35$$35$453 b$36$$35$$35$454 b$36$$35$$35$43 b$36$$35$$35$427 b$36$$35$$35$428 b$36$$35$$35$429 b$36$$35$$35$47 b$36$$35$$35$1905 b$36$$35$$35$435 b$36$$35$$35$436 b$36$$35$$35$437 b$36$$35$$35$438 b$36$$35$$35$439 b$36$$35$$35$440 b$36$$35$$35$441 b$36$$35$$35$442 b$36$$35$$35$443 b$36$$35$$35$444 b$36$$35$$35$93 b$36$$35$$35$445 b$36$$35$$35$446 b$36$$35$$35$447))
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$176) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOn) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj5Q)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (or (exists ((lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3883 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3883 Bool) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3883 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3883 Int) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3883 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3883 Bool) (lq_karg$36$VV$35$$35$3882$35$$35$k_$35$$35$3883 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$3883 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$3883 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$3883 Int) (lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3883 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3883 Int) (lq_karg$36$lq_tmp$36$x$35$$35$3884$35$$35$k_$35$$35$3883 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3883 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$3883 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3883 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3883 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3883 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3883 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3883 Int)) (and (= lq_karg$36$VV$35$$35$3882$35$$35$k_$35$$35$3883 VV$35$$35$F$35$$35$240) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$lq_tmp$36$x$35$$35$3884$35$$35$k_$35$$35$3883 lq_tmp$36$x$35$$35$3933) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3883 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3883 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3883 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3883 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3883 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3883 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3883 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3883 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3883 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3883 x2$35$$35$aiOe) (exists ((VV$35$$35$9560 Int) (VV$35$$35$F$35$$35$247 Int) (lq_tmp$36$x$35$$35$3872 Int)) (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9560) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$9560) 0)) (= VV$35$$35$9560 ts1$35$$35$aiOb) (= (apply$35$$35$0 (as len Int) VV$35$$35$9560) r1$35$$35$aiOa) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9560) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$9560) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$9560) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9560)) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$247) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$247)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$247) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$247)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$247))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$247) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$247)) (> (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$3872) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$247)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$247) 0) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_tmp$36$x$35$$35$3872) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$3872)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$3872) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$3872)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$3872))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$3872) (apply$35$$35$0 (as Binomial.rank Int) lq_tmp$36$x$35$$35$3872)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$3872) 0) (= lq_karg$36$VV$35$$35$3882$35$$35$k_$35$$35$3883 VV$35$$35$F$35$$35$247) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$lq_tmp$36$x$35$$35$3884$35$$35$k_$35$$35$3883 lq_tmp$36$x$35$$35$3872) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3883 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3883 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3883 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3883 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3883 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3883 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3883 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3883 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3883 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3883 x2$35$$35$aiOe))))) (exists ((lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3883 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3883 Bool) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3883 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3883 Int) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3883 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3883 Bool) (lq_karg$36$VV$35$$35$3882$35$$35$k_$35$$35$3883 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$3883 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$3883 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$3883 Int) (lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3883 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3883 Int) (lq_karg$36$lq_tmp$36$x$35$$35$3884$35$$35$k_$35$$35$3883 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3883 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$3883 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3883 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3883 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3883 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3883 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3883 Int)) (and (= lq_karg$36$VV$35$$35$3882$35$$35$k_$35$$35$3883 VV$35$$35$F$35$$35$240) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$lq_tmp$36$x$35$$35$3884$35$$35$k_$35$$35$3883 lq_tmp$36$x$35$$35$3933) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3883 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3883 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3883 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3883 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3883 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3883 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3883 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3883 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3883 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3883 x2$35$$35$aiOe) (exists ((VV$35$$35$9560 Int) (VV$35$$35$F$35$$35$244 Int)) (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9560) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$9560) 0)) (= VV$35$$35$9560 ts1$35$$35$aiOb) (= (apply$35$$35$0 (as len Int) VV$35$$35$9560) r1$35$$35$aiOa) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9560) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$9560) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$9560) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9560)) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$244) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$244)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$244) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$244)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$244))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$244) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$244)) (> r1$35$$35$aiOa (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$244)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$244) 0) (= lq_karg$36$VV$35$$35$3882$35$$35$k_$35$$35$3883 VV$35$$35$F$35$$35$244) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$lq_tmp$36$x$35$$35$3884$35$$35$k_$35$$35$3883 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3883 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3883 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3883 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3883 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3883 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3883 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3883 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3883 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3883 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3883 x2$35$$35$aiOe)))))) b$36$$35$$35$384 b$36$$35$$35$416 b$36$$35$$35$97 b$36$$35$$35$386 b$36$$35$$35$387 b$36$$35$$35$388 b$36$$35$$35$1189 b$36$$35$$35$389 b$36$$35$$35$390 b$36$$35$$35$1191 b$36$$35$$35$391 b$36$$35$$35$43 b$36$$35$$35$47 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$240) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$240)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$240) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$240)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$240))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$240) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$240)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$240) 0)) b$36$$35$$35$374 b$36$$35$$35$375 b$36$$35$$35$376 b$36$$35$$35$408 b$36$$35$$35$377 b$36$$35$$35$409 b$36$$35$$35$410 b$36$$35$$35$379 b$36$$35$$35$411 b$36$$35$$35$380 b$36$$35$$35$412 b$36$$35$$35$93 b$36$$35$$35$381 b$36$$35$$35$413 b$36$$35$$35$382 b$36$$35$$35$383 b$36$$35$$35$415))
(push 1)
(assert (not (> (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$3933) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$240))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$43 b$36$$35$$35$269 b$36$$35$$35$270 b$36$$35$$35$47 b$36$$35$$35$271 b$36$$35$$35$273 b$36$$35$$35$274 b$36$$35$$35$275 b$36$$35$$35$1907 b$36$$35$$35$276 b$36$$35$$35$277 b$36$$35$$35$281 b$36$$35$$35$282 b$36$$35$$35$283 b$36$$35$$35$284 b$36$$35$$35$1436 b$36$$35$$35$93))
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$10813) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$432))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$224 b$36$$35$$35$97 b$36$$35$$35$225 b$36$$35$$35$229 b$36$$35$$35$230 b$36$$35$$35$231 b$36$$35$$35$232 b$36$$35$$35$1512 b$36$$35$$35$233 b$36$$35$$35$234 b$36$$35$$35$43 b$36$$35$$35$235 b$36$$35$$35$236 b$36$$35$$35$237 b$36$$35$$35$238 b$36$$35$$35$47 b$36$$35$$35$240 b$36$$35$$35$241 b$36$$35$$35$242 b$36$$35$$35$243 b$36$$35$$35$244 b$36$$35$$35$1908 b$36$$35$$35$217 b$36$$35$$35$218 b$36$$35$$35$219 b$36$$35$$35$93 b$36$$35$$35$221 b$36$$35$$35$222 b$36$$35$$35$223))
(push 1)
(assert (not (> lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$464))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$192 b$36$$35$$35$97 b$36$$35$$35$193 b$36$$35$$35$194 b$36$$35$$35$43 b$36$$35$$35$47 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$496) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$496)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$496) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$496)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$496))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$496) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$496)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$496) 0)) b$36$$35$$35$93 b$36$$35$$35$190 b$36$$35$$35$191))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$496 (apply$35$$35$0 (as head Int) ds_dj30))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$579 b$36$$35$$35$581 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$1910 b$36$$35$$35$93))
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$49) (apply$35$$35$3 (as Binomial.treeListElts Int) ts$35$$35$aiOH))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$97 b$36$$35$$35$482 b$36$$35$$35$483 b$36$$35$$35$484 b$36$$35$$35$485 b$36$$35$$35$486 b$36$$35$$35$489 b$36$$35$$35$490 b$36$$35$$35$43 b$36$$35$$35$491 b$36$$35$$35$492 b$36$$35$$35$493 b$36$$35$$35$494 b$36$$35$$35$47 b$36$$35$$35$495 b$36$$35$$35$496 (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$145) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$145) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$145) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$145) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$145) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$145))) b$36$$35$$35$93 b$36$$35$$35$477 b$36$$35$$35$478 b$36$$35$$35$479))
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$145) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) ts1$35$$35$aiOS) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj6F)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$448 b$36$$35$$35$97 b$36$$35$$35$452 b$36$$35$$35$453 b$36$$35$$35$454 b$36$$35$$35$43 b$36$$35$$35$427 b$36$$35$$35$428 b$36$$35$$35$429 b$36$$35$$35$47 b$36$$35$$35$435 b$36$$35$$35$436 b$36$$35$$35$437 b$36$$35$$35$438 b$36$$35$$35$439 b$36$$35$$35$440 b$36$$35$$35$1912 b$36$$35$$35$441 b$36$$35$$35$442 b$36$$35$$35$443 b$36$$35$$35$444 b$36$$35$$35$93 b$36$$35$$35$445 b$36$$35$$35$446 b$36$$35$$35$447))
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$177) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOn) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj5Q)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$384 b$36$$35$$35$416 b$36$$35$$35$97 b$36$$35$$35$386 b$36$$35$$35$387 b$36$$35$$35$388 b$36$$35$$35$389 b$36$$35$$35$390 b$36$$35$$35$391 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$374 b$36$$35$$35$375 b$36$$35$$35$376 b$36$$35$$35$408 b$36$$35$$35$377 b$36$$35$$35$409 b$36$$35$$35$1913 b$36$$35$$35$410 b$36$$35$$35$379 b$36$$35$$35$411 b$36$$35$$35$380 b$36$$35$$35$412 b$36$$35$$35$93 b$36$$35$$35$381 b$36$$35$$35$413 b$36$$35$$35$382 b$36$$35$$35$383 b$36$$35$$35$415))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$241 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$384 b$36$$35$$35$97 b$36$$35$$35$386 b$36$$35$$35$387 b$36$$35$$35$388 b$36$$35$$35$389 b$36$$35$$35$390 b$36$$35$$35$391 b$36$$35$$35$392 b$36$$35$$35$393 b$36$$35$$35$394 b$36$$35$$35$43 b$36$$35$$35$395 b$36$$35$$35$396 b$36$$35$$35$397 b$36$$35$$35$47 b$36$$35$$35$399 b$36$$35$$35$400 b$36$$35$$35$374 b$36$$35$$35$375 b$36$$35$$35$376 b$36$$35$$35$377 b$36$$35$$35$1914 b$36$$35$$35$379 b$36$$35$$35$380 b$36$$35$$35$93 b$36$$35$$35$381 b$36$$35$$35$382 b$36$$35$$35$383))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$273 (+ 1 (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$97 b$36$$35$$35$325 b$36$$35$$35$326 b$36$$35$$35$327 b$36$$35$$35$328 b$36$$35$$35$329 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$93))
(push 1)
(assert (not (= (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$369)) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as snd Int) VV$35$$35$F$35$$35$369))) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj1J))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$224 b$36$$35$$35$97 b$36$$35$$35$225 b$36$$35$$35$229 b$36$$35$$35$230 b$36$$35$$35$231 b$36$$35$$35$232 b$36$$35$$35$1512 b$36$$35$$35$233 b$36$$35$$35$1513 b$36$$35$$35$234 b$36$$35$$35$43 b$36$$35$$35$235 b$36$$35$$35$236 b$36$$35$$35$237 b$36$$35$$35$238 b$36$$35$$35$47 b$36$$35$$35$240 b$36$$35$$35$241 b$36$$35$$35$242 b$36$$35$$35$243 b$36$$35$$35$244 b$36$$35$$35$217 b$36$$35$$35$218 b$36$$35$$35$219 b$36$$35$$35$93 b$36$$35$$35$221 b$36$$35$$35$1917 b$36$$35$$35$222 b$36$$35$$35$223))
(push 1)
(assert (not (<= x$35$$35$aiNN VV$35$$35$F$35$$35$465)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$192 b$36$$35$$35$97 b$36$$35$$35$193 b$36$$35$$35$194 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$93 b$36$$35$$35$190 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$497) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$497)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$497) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$497)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$497))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$497) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$497)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$497) 0)) b$36$$35$$35$191))
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$497) (- (apply$35$$35$0 (as len Int) ds_dj30) 1))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$579 b$36$$35$$35$581 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$93 b$36$$35$$35$1919))
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$50) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiOH))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$146) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$146) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$146) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$146) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$146) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$146))) b$36$$35$$35$97 b$36$$35$$35$482 b$36$$35$$35$483 b$36$$35$$35$484 b$36$$35$$35$485 b$36$$35$$35$486 b$36$$35$$35$489 b$36$$35$$35$490 b$36$$35$$35$43 b$36$$35$$35$491 b$36$$35$$35$492 b$36$$35$$35$493 b$36$$35$$35$494 b$36$$35$$35$47 b$36$$35$$35$495 b$36$$35$$35$496 b$36$$35$$35$93 b$36$$35$$35$477 b$36$$35$$35$478 b$36$$35$$35$479))
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$146) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$35$$35$aiOS) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj6F)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$384 b$36$$35$$35$97 b$36$$35$$35$1921 b$36$$35$$35$386 b$36$$35$$35$387 b$36$$35$$35$388 b$36$$35$$35$389 b$36$$35$$35$390 b$36$$35$$35$391 b$36$$35$$35$392 b$36$$35$$35$393 b$36$$35$$35$394 b$36$$35$$35$43 b$36$$35$$35$395 b$36$$35$$35$396 b$36$$35$$35$397 b$36$$35$$35$47 b$36$$35$$35$399 b$36$$35$$35$400 b$36$$35$$35$374 b$36$$35$$35$375 b$36$$35$$35$376 b$36$$35$$35$377 b$36$$35$$35$379 b$36$$35$$35$380 b$36$$35$$35$93 b$36$$35$$35$381 b$36$$35$$35$382 b$36$$35$$35$383))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$274 1)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$97 b$36$$35$$35$325 b$36$$35$$35$326 b$36$$35$$35$327 b$36$$35$$35$328 b$36$$35$$35$329 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$93))
(push 1)
(assert (not (= (+ (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$370)) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as snd Int) VV$35$$35$F$35$$35$370))) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj1J))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$1924 b$36$$35$$35$43 b$36$$35$$35$269 b$36$$35$$35$270 b$36$$35$$35$47 b$36$$35$$35$271 b$36$$35$$35$273 b$36$$35$$35$274 b$36$$35$$35$275 b$36$$35$$35$276 b$36$$35$$35$277 b$36$$35$$35$281 b$36$$35$$35$282 b$36$$35$$35$283 b$36$$35$$35$284 b$36$$35$$35$1436 b$36$$35$$35$93 b$36$$35$$35$1438))
(push 1)
(assert (not (> (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$2118) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$434))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$192 b$36$$35$$35$97 b$36$$35$$35$193 b$36$$35$$35$194 b$36$$35$$35$1925 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$93 b$36$$35$$35$190 b$36$$35$$35$191))
(push 1)
(assert (not (apply$35$$35$11 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$482 b$36$$35$$35$483 b$36$$35$$35$484 b$36$$35$$35$485 b$36$$35$$35$486 b$36$$35$$35$1926 b$36$$35$$35$489 b$36$$35$$35$490 b$36$$35$$35$43 b$36$$35$$35$491 b$36$$35$$35$492 b$36$$35$$35$493 b$36$$35$$35$494 b$36$$35$$35$47 b$36$$35$$35$495 b$36$$35$$35$496 b$36$$35$$35$93 b$36$$35$$35$477 b$36$$35$$35$478 b$36$$35$$35$479))
(push 1)
(assert (not (apply$35$$35$11 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$384 b$36$$35$$35$97 b$36$$35$$35$386 b$36$$35$$35$387 b$36$$35$$35$388 b$36$$35$$35$389 b$36$$35$$35$390 b$36$$35$$35$391 b$36$$35$$35$392 b$36$$35$$35$1928 b$36$$35$$35$393 b$36$$35$$35$394 b$36$$35$$35$43 b$36$$35$$35$395 b$36$$35$$35$396 b$36$$35$$35$397 b$36$$35$$35$47 b$36$$35$$35$399 b$36$$35$$35$400 b$36$$35$$35$374 b$36$$35$$35$375 b$36$$35$$35$376 b$36$$35$$35$377 b$36$$35$$35$379 b$36$$35$$35$380 b$36$$35$$35$93 b$36$$35$$35$381 b$36$$35$$35$382 b$36$$35$$35$383))
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$275) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$97 (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10381) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$10381) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10381) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$10381) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$10381) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10381))) (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10389) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10389)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10389) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10389)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10389))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10389) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10389)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10389) 0)) b$36$$35$$35$325 b$36$$35$$35$326 b$36$$35$$35$327 b$36$$35$$35$328 b$36$$35$$35$329 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$93))
(push 1)
(assert (not (<= (apply$35$$35$0 (as Binomial.root Int) (apply$35$$35$0 (as fst Int) VV$35$$35$10358)) VV$35$$35$F$35$$35$371)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$43 b$36$$35$$35$1931 b$36$$35$$35$269 b$36$$35$$35$270 b$36$$35$$35$47 b$36$$35$$35$271 b$36$$35$$35$273 b$36$$35$$35$274 b$36$$35$$35$275 b$36$$35$$35$276 b$36$$35$$35$277 b$36$$35$$35$278 b$36$$35$$35$279 b$36$$35$$35$93))
(push 1)
(assert (not (= (smt_map_cup (smt_map_sto (smt_map_def 0) (apply$35$$35$0 (as Binomial.root Int) ds_dj7T) (+ 1 (smt_map_sel (smt_map_def 0) (apply$35$$35$0 (as Binomial.root Int) ds_dj7T)))) (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$435)) (apply$35$$35$3 (as Binomial.treeElts Int) ds_dj7T))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$224 b$36$$35$$35$97 b$36$$35$$35$225 b$36$$35$$35$229 b$36$$35$$35$230 b$36$$35$$35$231 b$36$$35$$35$232 b$36$$35$$35$1512 b$36$$35$$35$233 b$36$$35$$35$234 b$36$$35$$35$1514 b$36$$35$$35$43 b$36$$35$$35$235 b$36$$35$$35$236 b$36$$35$$35$1932 b$36$$35$$35$237 b$36$$35$$35$238 b$36$$35$$35$47 b$36$$35$$35$240 b$36$$35$$35$241 b$36$$35$$35$242 b$36$$35$$35$243 b$36$$35$$35$244 b$36$$35$$35$217 b$36$$35$$35$218 b$36$$35$$35$219 b$36$$35$$35$93 b$36$$35$$35$221 b$36$$35$$35$222 b$36$$35$$35$223))
(push 1)
(assert (not (> (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$1629) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$467))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$43 b$36$$35$$35$1933 b$36$$35$$35$47 b$36$$35$$35$179 b$36$$35$$35$180 b$36$$35$$35$184 b$36$$35$$35$185 b$36$$35$$35$186 b$36$$35$$35$187 b$36$$35$$35$93))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$499 (apply$35$$35$0 (as tail Int) ds_dj2M))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$482 b$36$$35$$35$483 b$36$$35$$35$515 b$36$$35$$35$484 b$36$$35$$35$516 b$36$$35$$35$485 b$36$$35$$35$517 b$36$$35$$35$486 b$36$$35$$35$489 b$36$$35$$35$490 b$36$$35$$35$43 b$36$$35$$35$491 b$36$$35$$35$492 b$36$$35$$35$493 b$36$$35$$35$1934 b$36$$35$$35$47 b$36$$35$$35$497 b$36$$35$$35$498 b$36$$35$$35$499 b$36$$35$$35$500 b$36$$35$$35$501 b$36$$35$$35$502 b$36$$35$$35$503 b$36$$35$$35$504 b$36$$35$$35$505 b$36$$35$$35$506 b$36$$35$$35$507 b$36$$35$$35$508 b$36$$35$$35$93 b$36$$35$$35$477 b$36$$35$$35$509 b$36$$35$$35$478 b$36$$35$$35$510 b$36$$35$$35$479))
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$116) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) ts1$35$$35$aiOS) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj6F)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$482 b$36$$35$$35$483 b$36$$35$$35$484 b$36$$35$$35$485 b$36$$35$$35$486 b$36$$35$$35$487 b$36$$35$$35$488 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$1935 b$36$$35$$35$93 b$36$$35$$35$477 b$36$$35$$35$478 b$36$$35$$35$479))
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$148) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) ts1$35$$35$aiOS) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj6F)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (or (exists ((lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3580 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3580 Bool) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3580 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3580 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3580 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3580 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3580 Int) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3580 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3580 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3580 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3580 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3580 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3580 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3580 Int) (lq_karg$36$VV$35$$35$3579$35$$35$k_$35$$35$3580 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3580 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3580 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3580 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3580 Int)) (and (= lq_karg$36$VV$35$$35$3579$35$$35$k_$35$$35$3580 VV$35$$35$F$35$$35$276) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3580 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3580 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3580 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3580 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3580 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3580 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3580 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3580 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3580 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3580 x2$35$$35$aiOe) (exists ((VV$35$$35$F$35$$35$282 Int) (VV$35$$35$9710 Int)) (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$282) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$282)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$282) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$282)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$282))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$282) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$282)) (> r2$35$$35$aiOf (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$282)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$282) 0) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9710) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$9710) 0)) (= VV$35$$35$9710 ts2$35$$35$aiOg) (= (apply$35$$35$0 (as len Int) VV$35$$35$9710) r2$35$$35$aiOf) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9710) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$9710) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$9710) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9710)) (= lq_karg$36$VV$35$$35$3579$35$$35$k_$35$$35$3580 VV$35$$35$F$35$$35$282) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3580 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3580 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3580 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3580 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3580 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3580 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3580 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3580 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3580 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3580 x2$35$$35$aiOe))))) (exists ((lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3580 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3580 Bool) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3580 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3580 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3580 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3580 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3580 Int) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3580 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3580 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3580 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3580 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3580 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3580 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3580 Int) (lq_karg$36$VV$35$$35$3579$35$$35$k_$35$$35$3580 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3580 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3580 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3580 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3580 Int)) (and (= lq_karg$36$VV$35$$35$3579$35$$35$k_$35$$35$3580 VV$35$$35$F$35$$35$276) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3580 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3580 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3580 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3580 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3580 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3580 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3580 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3580 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3580 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3580 x2$35$$35$aiOe) (exists ((VV$35$$35$F$35$$35$288 Int)) (and (= VV$35$$35$F$35$$35$288 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= VV$35$$35$F$35$$35$288 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$288) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$288)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$288) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$288)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$288))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$288) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$288)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$288) 0) (= lq_karg$36$VV$35$$35$3579$35$$35$k_$35$$35$3580 VV$35$$35$F$35$$35$288) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3580 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3580 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3580 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3580 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3580 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3580 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3580 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3580 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3580 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3580 x2$35$$35$aiOe)))))) b$36$$35$$35$384 b$36$$35$$35$97 b$36$$35$$35$386 b$36$$35$$35$387 b$36$$35$$35$388 b$36$$35$$35$389 b$36$$35$$35$390 b$36$$35$$35$1223 b$36$$35$$35$391 b$36$$35$$35$392 b$36$$35$$35$393 b$36$$35$$35$394 b$36$$35$$35$43 b$36$$35$$35$395 b$36$$35$$35$396 b$36$$35$$35$397 b$36$$35$$35$47 b$36$$35$$35$399 b$36$$35$$35$400 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$276) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$276)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$276) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$276)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$276))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$276) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$276)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$276) 0)) b$36$$35$$35$374 b$36$$35$$35$375 b$36$$35$$35$376 b$36$$35$$35$377 b$36$$35$$35$379 b$36$$35$$35$380 b$36$$35$$35$93 b$36$$35$$35$381 b$36$$35$$35$382 b$36$$35$$35$383))
(push 1)
(assert (not (> lq_anf$36$$35$$35$7205759403792867284$35$$35$djas (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$276))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$325 b$36$$35$$35$326 b$36$$35$$35$327 b$36$$35$$35$328 b$36$$35$$35$329 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$1940 b$36$$35$$35$93))
(push 1)
(assert (not (apply$35$$35$11 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$43 b$36$$35$$35$269 b$36$$35$$35$270 b$36$$35$$35$47 b$36$$35$$35$271 b$36$$35$$35$273 b$36$$35$$35$274 b$36$$35$$35$275 b$36$$35$$35$276 b$36$$35$$35$277 b$36$$35$$35$1941 b$36$$35$$35$278 b$36$$35$$35$279 b$36$$35$$35$93))
(push 1)
(assert (not (= (+ 1 (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$436)) (apply$35$$35$0 (as Binomial.treeSize Int) ds_dj7T))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$224 b$36$$35$$35$97 b$36$$35$$35$225 b$36$$35$$35$229 b$36$$35$$35$230 b$36$$35$$35$231 b$36$$35$$35$232 b$36$$35$$35$233 b$36$$35$$35$234 b$36$$35$$35$43 b$36$$35$$35$235 b$36$$35$$35$236 b$36$$35$$35$237 b$36$$35$$35$238 b$36$$35$$35$47 b$36$$35$$35$240 b$36$$35$$35$241 b$36$$35$$35$242 b$36$$35$$35$243 b$36$$35$$35$244 b$36$$35$$35$1942 b$36$$35$$35$217 b$36$$35$$35$218 b$36$$35$$35$219 b$36$$35$$35$93 b$36$$35$$35$221 b$36$$35$$35$222 b$36$$35$$35$223))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$468 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$179 b$36$$35$$35$180 b$36$$35$$35$1943 b$36$$35$$35$184 b$36$$35$$35$185 b$36$$35$$35$186 b$36$$35$$35$187 b$36$$35$$35$93 b$36$$35$$35$1565))
(push 1)
(assert (not (> (- (apply$35$$35$0 (as len Int) ds_dj2M) 1) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$500))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$576 b$36$$35$$35$97 b$36$$35$$35$578 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$568 b$36$$35$$35$1944 b$36$$35$$35$569 b$36$$35$$35$570 b$36$$35$$35$93 b$36$$35$$35$573 b$36$$35$$35$574 b$36$$35$$35$575))
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$53) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj0Y) (apply$35$$35$3 (as Binomial.treeListElts Int) acc$35$$35$aiOI)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$544 b$36$$35$$35$97 b$36$$35$$35$545 b$36$$35$$35$546 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$1945 b$36$$35$$35$93 b$36$$35$$35$541 b$36$$35$$35$542))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$85 (+ 1 (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867350$35$$35$djbw)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$482 b$36$$35$$35$483 b$36$$35$$35$515 b$36$$35$$35$484 b$36$$35$$35$516 b$36$$35$$35$485 b$36$$35$$35$517 b$36$$35$$35$486 b$36$$35$$35$489 b$36$$35$$35$490 b$36$$35$$35$43 b$36$$35$$35$491 b$36$$35$$35$492 b$36$$35$$35$493 b$36$$35$$35$47 b$36$$35$$35$497 b$36$$35$$35$498 b$36$$35$$35$499 b$36$$35$$35$500 b$36$$35$$35$501 b$36$$35$$35$502 b$36$$35$$35$503 b$36$$35$$35$504 b$36$$35$$35$505 b$36$$35$$35$506 b$36$$35$$35$1946 b$36$$35$$35$507 b$36$$35$$35$508 b$36$$35$$35$93 b$36$$35$$35$477 b$36$$35$$35$509 b$36$$35$$35$478 b$36$$35$$35$510 b$36$$35$$35$479))
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$117) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$35$$35$aiOS) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj6F)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$482 b$36$$35$$35$483 b$36$$35$$35$484 b$36$$35$$35$485 b$36$$35$$35$486 b$36$$35$$35$487 b$36$$35$$35$488 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$1947 b$36$$35$$35$93 b$36$$35$$35$477 b$36$$35$$35$478 b$36$$35$$35$479))
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$149) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$35$$35$aiOS) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj6F)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4102 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4102 Int) (lq_karg$36$VV$35$$35$4101$35$$35$k_$35$$35$4102 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4102 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4102 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4102 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4102 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4102 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4102 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4102 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4102 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4102 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4102 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4102 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4102 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4102 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4102 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4102 Int) (lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4102 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4102 Bool) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4102 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4102 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4102 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4102 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4102 Int) (lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4102 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4102 Map)) (and (= lq_karg$36$VV$35$$35$4101$35$$35$k_$35$$35$4102 VV$35$$35$F$35$$35$213) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM) (= lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4102 new$35$$35$aiOi) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4102 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4102 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4102 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4102 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4102 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4102 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4102 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4102 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4102 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4102 x2$35$$35$aiOe) (exists ((VV$35$$35$F$35$$35$220 Int) (lq_tmp$36$x$35$$35$4087 Int)) (and (exists ((lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4075 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4075 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4075 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4075 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4075 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4075 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4075 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4075 Int) (lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4075 Bool) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4075 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4075 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4075 Map) (lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4075 Int) (lq_karg$36$VV$35$$35$4074$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4075 Bool) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4075 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4075 Int)) (and (= lq_karg$36$VV$35$$35$4074$35$$35$k_$35$$35$4075 VV$35$$35$F$35$$35$220) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM) (= lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4075 new$35$$35$aiOi) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4075 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4075 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4075 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4075 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4075 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4075 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4075 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4075 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4075 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4075 x2$35$$35$aiOe) (exists ((VV$35$$35$F$35$$35$218 Int)) (and (exists ((lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4096 Int) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4096 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4096 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4096 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4096 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4096 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4096 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4096 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4096 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4096 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4096 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4096 Map) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4096 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4096 Int) (lq_karg$36$VV$35$$35$4095$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4096 Int) (lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4096 Map) (lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4096 Int)) (and (= lq_karg$36$VV$35$$35$4095$35$$35$k_$35$$35$4096 VV$35$$35$F$35$$35$218) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM) (= lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4096 new$35$$35$aiOi) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4096 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4096 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4096 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4096 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4096 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4096 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4096 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4096 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4096 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4096 x2$35$$35$aiOe) (exists ((VV$35$$35$F$35$$35$216 Int)) (and (apply$35$$35$1 (as is$36$Binomial.Node Int) VV$35$$35$F$35$$35$216) (= VV$35$$35$F$35$$35$216 new$35$$35$aiOi) (= VV$35$$35$F$35$$35$216 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x1$35$$35$aiO9) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH)) (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$216) x1$35$$35$aiO9) (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$216) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$216)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$216) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$216)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$216))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$216) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (smt_map_sto (smt_map_def 0) x1$35$$35$aiO9 (+ 1 (smt_map_sel (smt_map_def 0) x1$35$$35$aiO9))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x1$35$$35$aiO9) (- lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG)) (- lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$216) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$216)) (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) VV$35$$35$F$35$$35$216) x1$35$$35$aiO9) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$216) 0) (= lq_karg$36$VV$35$$35$4095$35$$35$k_$35$$35$4096 VV$35$$35$F$35$$35$216) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM) (= lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4096 new$35$$35$aiOi) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4096 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4096 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4096 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4096 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4096 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4096 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4096 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4096 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4096 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4096 x2$35$$35$aiOe))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$218) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$218)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$218) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$218)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$218))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$218) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$218)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$218) 0) (= lq_karg$36$VV$35$$35$4074$35$$35$k_$35$$35$4075 VV$35$$35$F$35$$35$218) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM) (= lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4075 new$35$$35$aiOi) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4075 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4075 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4075 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4075 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4075 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4075 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4075 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4075 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4075 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4075 x2$35$$35$aiOe))))) (exists ((lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4096 Int) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4096 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4096 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4096 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4096 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4096 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4096 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4096 Int) (lq_tmp$36$x$35$$35$4098 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4096 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4096 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4096 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4096 Map) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4096 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4096 Int) (lq_karg$36$VV$35$$35$4095$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4096 Int) (lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4096 Map) (lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4096 Int)) (and (= lq_karg$36$VV$35$$35$4095$35$$35$k_$35$$35$4096 lq_tmp$36$x$35$$35$4087) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM) (= lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4096 new$35$$35$aiOi) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4096 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4096 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4096 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4096 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4096 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4096 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4096 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4096 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4096 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4096 x2$35$$35$aiOe) (= lq_tmp$36$x$35$$35$4098 lq_tmp$36$x$35$$35$4087) (exists ((VV$35$$35$F$35$$35$216 Int)) (and (apply$35$$35$1 (as is$36$Binomial.Node Int) VV$35$$35$F$35$$35$216) (= VV$35$$35$F$35$$35$216 new$35$$35$aiOi) (= VV$35$$35$F$35$$35$216 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x1$35$$35$aiO9) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH)) (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$216) x1$35$$35$aiO9) (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$216) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$216)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$216) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$216)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$216))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$216) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (smt_map_sto (smt_map_def 0) x1$35$$35$aiO9 (+ 1 (smt_map_sel (smt_map_def 0) x1$35$$35$aiO9))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x1$35$$35$aiO9) (- lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG)) (- lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$216) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$216)) (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) VV$35$$35$F$35$$35$216) x1$35$$35$aiO9) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$216) 0) (= lq_karg$36$VV$35$$35$4095$35$$35$k_$35$$35$4096 VV$35$$35$F$35$$35$216) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM) (= lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4096 new$35$$35$aiOi) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4096 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4096 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4096 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4096 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4096 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4096 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4096 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4096 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4096 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4096 x2$35$$35$aiOe))))) (= VV$35$$35$F$35$$35$220 lq_tmp$36$x$35$$35$4087) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$220) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$220)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$220) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$220)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$220))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$220) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$220)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$220) 0) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_tmp$36$x$35$$35$4087) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$4087)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$4087) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$4087)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$4087))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$4087) (apply$35$$35$0 (as Binomial.rank Int) lq_tmp$36$x$35$$35$4087)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$4087) 0) (= lq_karg$36$VV$35$$35$4101$35$$35$k_$35$$35$4102 VV$35$$35$F$35$$35$220) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM) (= lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4102 new$35$$35$aiOi) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4102 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4102 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4102 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4102 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4102 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4102 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4102 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4102 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4102 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4102 x2$35$$35$aiOe))))) b$36$$35$$35$384 b$36$$35$$35$416 b$36$$35$$35$97 b$36$$35$$35$417 b$36$$35$$35$386 b$36$$35$$35$418 b$36$$35$$35$387 b$36$$35$$35$419 b$36$$35$$35$388 b$36$$35$$35$420 b$36$$35$$35$389 b$36$$35$$35$421 b$36$$35$$35$390 b$36$$35$$35$422 b$36$$35$$35$391 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$374 b$36$$35$$35$375 b$36$$35$$35$376 b$36$$35$$35$408 b$36$$35$$35$377 b$36$$35$$35$409 b$36$$35$$35$410 b$36$$35$$35$379 b$36$$35$$35$411 b$36$$35$$35$380 b$36$$35$$35$412 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$213) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$213)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$213) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$213)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$213))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$213) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$213)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$213) 0)) b$36$$35$$35$93 b$36$$35$$35$381 b$36$$35$$35$413 b$36$$35$$35$382 b$36$$35$$35$383 b$36$$35$$35$415))
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$213) (+ (apply$35$$35$0 (as Binomial.rank Int) t1$35$$35$aiO8) 1))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (or (exists ((lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3580 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3580 Bool) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3580 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3580 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3580 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3580 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3580 Int) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3580 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3580 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3580 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3580 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3580 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3580 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3580 Int) (lq_karg$36$VV$35$$35$3579$35$$35$k_$35$$35$3580 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3580 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3580 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3580 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3580 Int)) (and (= lq_karg$36$VV$35$$35$3579$35$$35$k_$35$$35$3580 VV$35$$35$9689) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3580 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3580 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3580 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3580 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3580 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3580 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3580 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3580 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3580 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3580 x2$35$$35$aiOe) (exists ((VV$35$$35$F$35$$35$282 Int) (VV$35$$35$9710 Int)) (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$282) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$282)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$282) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$282)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$282))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$282) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$282)) (> r2$35$$35$aiOf (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$282)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$282) 0) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9710) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$9710) 0)) (= VV$35$$35$9710 ts2$35$$35$aiOg) (= (apply$35$$35$0 (as len Int) VV$35$$35$9710) r2$35$$35$aiOf) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9710) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$9710) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$9710) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9710)) (= lq_karg$36$VV$35$$35$3579$35$$35$k_$35$$35$3580 VV$35$$35$F$35$$35$282) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3580 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3580 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3580 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3580 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3580 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3580 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3580 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3580 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3580 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3580 x2$35$$35$aiOe))))) (exists ((lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3580 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3580 Bool) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3580 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3580 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3580 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3580 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3580 Int) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3580 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3580 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3580 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3580 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3580 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3580 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3580 Int) (lq_karg$36$VV$35$$35$3579$35$$35$k_$35$$35$3580 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3580 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3580 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3580 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3580 Int)) (and (= lq_karg$36$VV$35$$35$3579$35$$35$k_$35$$35$3580 VV$35$$35$9689) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3580 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3580 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3580 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3580 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3580 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3580 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3580 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3580 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3580 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3580 x2$35$$35$aiOe) (exists ((VV$35$$35$F$35$$35$288 Int)) (and (= VV$35$$35$F$35$$35$288 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= VV$35$$35$F$35$$35$288 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$288) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$288)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$288) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$288)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$288))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$288) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$288)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$288) 0) (= lq_karg$36$VV$35$$35$3579$35$$35$k_$35$$35$3580 VV$35$$35$F$35$$35$288) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3580 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3580 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3580 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3580 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3580 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3580 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3580 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3580 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3580 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3580 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3580 x2$35$$35$aiOe)))))) (or (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3578 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3578 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3578 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3578 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3578 Int) (lq_karg$36$VV$35$$35$3577$35$$35$k_$35$$35$3578 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3578 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3578 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3578 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3578 Int) (lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3578 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3578 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3578 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3578 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3578 Int) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3578 Int) (lq_karg$36$VV$35$$35$3579$35$$35$k_$35$$35$3578 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3578 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3578 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3578 Int)) (and (= lq_karg$36$VV$35$$35$3577$35$$35$k_$35$$35$3578 VV$35$$35$F$35$$35$277) (= lq_karg$36$VV$35$$35$3579$35$$35$k_$35$$35$3578 VV$35$$35$9689) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3578 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3578 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3578 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3578 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3578 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3578 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3578 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3578 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3578 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3578 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3578 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3578 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3578 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3578 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3578 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3578 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3578 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3578 x2$35$$35$aiOe) (exists ((VV$35$$35$9710 Int) (VV$35$$35$9718 Int) (VV$35$$35$F$35$$35$284 Int)) (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9710) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$9710) 0)) (= VV$35$$35$9710 ts2$35$$35$aiOg) (= (apply$35$$35$0 (as len Int) VV$35$$35$9710) r2$35$$35$aiOf) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9710) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$9710) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$9710) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9710)) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$9718) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$9718)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$9718) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$9718)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$9718))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9718) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$9718)) (> r2$35$$35$aiOf (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9718)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9718) 0) (<= x2$35$$35$aiOe VV$35$$35$F$35$$35$284) (= lq_karg$36$VV$35$$35$3577$35$$35$k_$35$$35$3578 VV$35$$35$F$35$$35$284) (= lq_karg$36$VV$35$$35$3579$35$$35$k_$35$$35$3578 VV$35$$35$9718) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3578 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3578 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3578 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3578 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3578 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3578 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3578 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3578 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3578 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3578 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3578 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3578 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3578 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3578 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3578 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3578 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3578 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3578 x2$35$$35$aiOe))))) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3578 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3578 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3578 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3578 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3578 Int) (lq_karg$36$VV$35$$35$3577$35$$35$k_$35$$35$3578 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3578 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3578 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3578 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3578 Int) (lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3578 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3578 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3578 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3578 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3578 Int) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3578 Int) (lq_karg$36$VV$35$$35$3579$35$$35$k_$35$$35$3578 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3578 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3578 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3578 Int)) (and (= lq_karg$36$VV$35$$35$3577$35$$35$k_$35$$35$3578 VV$35$$35$F$35$$35$277) (= lq_karg$36$VV$35$$35$3579$35$$35$k_$35$$35$3578 VV$35$$35$9689) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3578 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3578 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3578 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3578 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3578 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3578 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3578 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3578 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3578 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3578 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3578 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3578 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3578 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3578 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3578 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3578 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3578 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3578 x2$35$$35$aiOe) (exists ((VV$35$$35$F$35$$35$289 Int) (VV$35$$35$9729 Int)) (and (exists ((lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3556 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3556 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3556 Int) (lq_karg$36$VV$35$$35$3555$35$$35$k_$35$$35$3556 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3556 Int) (lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3556 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3556 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3556 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3556 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3556 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3556 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3556 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3556 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3556 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3556 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3556 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3556 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3556 Bool)) (and (= lq_karg$36$VV$35$$35$3555$35$$35$k_$35$$35$3556 VV$35$$35$F$35$$35$289) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3556 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3556 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3556 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3556 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3556 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3556 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3556 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3556 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3556 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3556 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3556 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3556 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3556 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3556 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3556 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3556 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3556 x2$35$$35$aiOe) (exists ((VV$35$$35$F$35$$35$290 Int) (VV$35$$35$9734 Int)) (and (apply$35$$35$1 (as is$36$Binomial.Node Int) VV$35$$35$9734) (= VV$35$$35$9734 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= VV$35$$35$9734 t1$35$$35$aiO8) (= VV$35$$35$9734 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x1$35$$35$aiO9) r1$35$$35$aiOa) ts1$35$$35$aiOb) sz1$35$$35$aiOc)) (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$9734) r1$35$$35$aiOa) (= (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$9734) x1$35$$35$aiO9) (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$9734) ts1$35$$35$aiOb) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$9734) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$9734)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$9734) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$9734)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$9734))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$9734) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) ts1$35$$35$aiOb) (smt_map_sto (smt_map_def 0) x1$35$$35$aiO9 (+ 1 (smt_map_sel (smt_map_def 0) x1$35$$35$aiO9))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ts1$35$$35$aiOb)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x1$35$$35$aiO9) (- r1$35$$35$aiOa 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) ts1$35$$35$aiOb)) (- sz1$35$$35$aiOc (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) ts1$35$$35$aiOb)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9734) r1$35$$35$aiOa) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9734) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$9734)) (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$9734) sz1$35$$35$aiOc) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) VV$35$$35$9734) x1$35$$35$aiO9) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) VV$35$$35$9734) r1$35$$35$aiOa) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$9734) ts1$35$$35$aiOb) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) VV$35$$35$9734) sz1$35$$35$aiOc) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9734) 0) (= lq_karg$36$VV$35$$35$3555$35$$35$k_$35$$35$3556 VV$35$$35$F$35$$35$290) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3556 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3556 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3556 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3556 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3556 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3556 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3556 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3556 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3556 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3556 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3556 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3556 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3556 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3556 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3556 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3556 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3556 x2$35$$35$aiOe))))) (<= (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) VV$35$$35$F$35$$35$289) (= VV$35$$35$9729 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= VV$35$$35$9729 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$9729) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$9729)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$9729) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$9729)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$9729))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9729) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$9729)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9729) 0) (= lq_karg$36$VV$35$$35$3577$35$$35$k_$35$$35$3578 VV$35$$35$F$35$$35$289) (= lq_karg$36$VV$35$$35$3579$35$$35$k_$35$$35$3578 VV$35$$35$9729) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3578 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3578 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3578 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3578 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3578 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3578 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3578 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3578 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3578 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3578 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3578 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3578 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3578 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3578 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3578 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3578 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3578 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3578 x2$35$$35$aiOe))))))) b$36$$35$$35$384 b$36$$35$$35$97 b$36$$35$$35$386 b$36$$35$$35$387 b$36$$35$$35$388 b$36$$35$$35$389 b$36$$35$$35$390 b$36$$35$$35$1223 b$36$$35$$35$391 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$9689) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$9689)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$9689) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$9689)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$9689))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9689) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$9689)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$9689) 0)) b$36$$35$$35$392 b$36$$35$$35$393 b$36$$35$$35$394 b$36$$35$$35$43 b$36$$35$$35$395 b$36$$35$$35$396 b$36$$35$$35$397 b$36$$35$$35$47 b$36$$35$$35$399 b$36$$35$$35$400 b$36$$35$$35$374 b$36$$35$$35$375 b$36$$35$$35$376 b$36$$35$$35$377 b$36$$35$$35$379 b$36$$35$$35$380 b$36$$35$$35$93 b$36$$35$$35$381 b$36$$35$$35$382 b$36$$35$$35$383))
(push 1)
(assert (not (<= x2$35$$35$aiOe VV$35$$35$F$35$$35$277)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$320 b$36$$35$$35$97 b$36$$35$$35$321 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$314 b$36$$35$$35$315 b$36$$35$$35$316 b$36$$35$$35$93 b$36$$35$$35$318 b$36$$35$$35$319 b$36$$35$$35$1951))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$373 ds_dj1z)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$1952 b$36$$35$$35$97 b$36$$35$$35$262 b$36$$35$$35$263 b$36$$35$$35$264 b$36$$35$$35$265 b$36$$35$$35$266 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$93))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$437 (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) ds_dj58)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$1953 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$179 b$36$$35$$35$180 b$36$$35$$35$184 b$36$$35$$35$185 b$36$$35$$35$186 b$36$$35$$35$187 b$36$$35$$35$93 b$36$$35$$35$1565 b$36$$35$$35$1567))
(push 1)
(assert (not (> (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$956) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$501))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$576 b$36$$35$$35$97 b$36$$35$$35$578 b$36$$35$$35$1954 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$568 b$36$$35$$35$569 b$36$$35$$35$570 b$36$$35$$35$93 b$36$$35$$35$573 b$36$$35$$35$574 b$36$$35$$35$575))
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$54) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj0Y) (apply$35$$35$0 (as Binomial.treeListSize Int) acc$35$$35$aiOI)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$544 b$36$$35$$35$97 b$36$$35$$35$545 b$36$$35$$35$546 b$36$$35$$35$1955 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$93 b$36$$35$$35$541 b$36$$35$$35$542))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$86 1)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$480 b$36$$35$$35$97 b$36$$35$$35$481 b$36$$35$$35$1956 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$93 b$36$$35$$35$477 b$36$$35$$35$478 b$36$$35$$35$479))
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$150) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) ts1$35$$35$aiOS) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj6F)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4102 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4102 Int) (lq_karg$36$VV$35$$35$4101$35$$35$k_$35$$35$4102 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4102 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4102 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4102 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4102 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4102 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4102 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4102 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4102 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4102 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4102 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4102 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4102 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4102 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4102 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4102 Int) (lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4102 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4102 Bool) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4102 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4102 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4102 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4102 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4102 Int) (lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4102 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4102 Map)) (and (= lq_karg$36$VV$35$$35$4101$35$$35$k_$35$$35$4102 VV$35$$35$F$35$$35$214) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM) (= lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4102 new$35$$35$aiOi) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4102 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4102 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4102 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4102 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4102 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4102 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4102 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4102 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4102 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4102 x2$35$$35$aiOe) (exists ((VV$35$$35$F$35$$35$220 Int) (lq_tmp$36$x$35$$35$4087 Int)) (and (exists ((lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4075 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4075 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4075 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4075 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4075 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4075 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4075 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4075 Int) (lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4075 Bool) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4075 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4075 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4075 Map) (lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4075 Int) (lq_karg$36$VV$35$$35$4074$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4075 Bool) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4075 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4075 Int)) (and (= lq_karg$36$VV$35$$35$4074$35$$35$k_$35$$35$4075 VV$35$$35$F$35$$35$220) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM) (= lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4075 new$35$$35$aiOi) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4075 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4075 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4075 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4075 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4075 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4075 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4075 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4075 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4075 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4075 x2$35$$35$aiOe) (exists ((VV$35$$35$F$35$$35$218 Int)) (and (exists ((lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4096 Int) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4096 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4096 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4096 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4096 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4096 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4096 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4096 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4096 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4096 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4096 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4096 Map) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4096 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4096 Int) (lq_karg$36$VV$35$$35$4095$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4096 Int) (lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4096 Map) (lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4096 Int)) (and (= lq_karg$36$VV$35$$35$4095$35$$35$k_$35$$35$4096 VV$35$$35$F$35$$35$218) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM) (= lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4096 new$35$$35$aiOi) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4096 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4096 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4096 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4096 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4096 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4096 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4096 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4096 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4096 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4096 x2$35$$35$aiOe) (exists ((VV$35$$35$F$35$$35$216 Int)) (and (apply$35$$35$1 (as is$36$Binomial.Node Int) VV$35$$35$F$35$$35$216) (= VV$35$$35$F$35$$35$216 new$35$$35$aiOi) (= VV$35$$35$F$35$$35$216 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x1$35$$35$aiO9) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH)) (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$216) x1$35$$35$aiO9) (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$216) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$216)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$216) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$216)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$216))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$216) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (smt_map_sto (smt_map_def 0) x1$35$$35$aiO9 (+ 1 (smt_map_sel (smt_map_def 0) x1$35$$35$aiO9))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x1$35$$35$aiO9) (- lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG)) (- lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$216) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$216)) (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) VV$35$$35$F$35$$35$216) x1$35$$35$aiO9) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$216) 0) (= lq_karg$36$VV$35$$35$4095$35$$35$k_$35$$35$4096 VV$35$$35$F$35$$35$216) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM) (= lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4096 new$35$$35$aiOi) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4096 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4096 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4096 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4096 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4096 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4096 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4096 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4096 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4096 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4096 x2$35$$35$aiOe))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$218) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$218)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$218) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$218)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$218))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$218) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$218)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$218) 0) (= lq_karg$36$VV$35$$35$4074$35$$35$k_$35$$35$4075 VV$35$$35$F$35$$35$218) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM) (= lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4075 new$35$$35$aiOi) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4075 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4075 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4075 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4075 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4075 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4075 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4075 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4075 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4075 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4075 x2$35$$35$aiOe))))) (exists ((lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4096 Int) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4096 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4096 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4096 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4096 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4096 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4096 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4096 Int) (lq_tmp$36$x$35$$35$4098 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4096 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4096 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4096 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4096 Map) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4096 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4096 Int) (lq_karg$36$VV$35$$35$4095$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4096 Int) (lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4096 Map) (lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4096 Int)) (and (= lq_karg$36$VV$35$$35$4095$35$$35$k_$35$$35$4096 lq_tmp$36$x$35$$35$4087) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM) (= lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4096 new$35$$35$aiOi) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4096 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4096 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4096 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4096 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4096 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4096 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4096 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4096 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4096 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4096 x2$35$$35$aiOe) (= lq_tmp$36$x$35$$35$4098 lq_tmp$36$x$35$$35$4087) (exists ((VV$35$$35$F$35$$35$216 Int)) (and (apply$35$$35$1 (as is$36$Binomial.Node Int) VV$35$$35$F$35$$35$216) (= VV$35$$35$F$35$$35$216 new$35$$35$aiOi) (= VV$35$$35$F$35$$35$216 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x1$35$$35$aiO9) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH)) (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$216) x1$35$$35$aiO9) (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$216) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$216)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$216) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$216)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$216))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$216) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (smt_map_sto (smt_map_def 0) x1$35$$35$aiO9 (+ 1 (smt_map_sel (smt_map_def 0) x1$35$$35$aiO9))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x1$35$$35$aiO9) (- lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG)) (- lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$216) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$216)) (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) VV$35$$35$F$35$$35$216) x1$35$$35$aiO9) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$216) 0) (= lq_karg$36$VV$35$$35$4095$35$$35$k_$35$$35$4096 VV$35$$35$F$35$$35$216) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM) (= lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4096 new$35$$35$aiOi) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4096 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4096 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4096 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4096 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4096 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4096 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4096 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4096 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4096 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4096 x2$35$$35$aiOe))))) (= VV$35$$35$F$35$$35$220 lq_tmp$36$x$35$$35$4087) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$220) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$220)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$220) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$220)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$220))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$220) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$220)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$220) 0) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_tmp$36$x$35$$35$4087) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$4087)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$4087) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$4087)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$4087))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$4087) (apply$35$$35$0 (as Binomial.rank Int) lq_tmp$36$x$35$$35$4087)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$4087) 0) (= lq_karg$36$VV$35$$35$4101$35$$35$k_$35$$35$4102 VV$35$$35$F$35$$35$220) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM) (= lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4102 new$35$$35$aiOi) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4102 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4102 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4102 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4102 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4102 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4102 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4102 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4102 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4102 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4102 x2$35$$35$aiOe))))) b$36$$35$$35$384 b$36$$35$$35$416 b$36$$35$$35$97 b$36$$35$$35$417 b$36$$35$$35$386 b$36$$35$$35$418 b$36$$35$$35$387 b$36$$35$$35$419 b$36$$35$$35$388 b$36$$35$$35$420 b$36$$35$$35$389 b$36$$35$$35$421 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$214) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$214)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$214) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$214)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$214))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$214) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$214)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$214) 0)) b$36$$35$$35$390 b$36$$35$$35$422 b$36$$35$$35$391 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$374 b$36$$35$$35$375 b$36$$35$$35$376 b$36$$35$$35$408 b$36$$35$$35$377 b$36$$35$$35$409 b$36$$35$$35$410 b$36$$35$$35$379 b$36$$35$$35$411 b$36$$35$$35$380 b$36$$35$$35$412 b$36$$35$$35$93 b$36$$35$$35$381 b$36$$35$$35$413 b$36$$35$$35$382 b$36$$35$$35$383 b$36$$35$$35$415))
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$214) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t1$35$$35$aiO8) (apply$35$$35$3 (as Binomial.treeElts Int) t2$35$$35$aiOd)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (or (exists ((lq_karg$36$sz$35$$35$aiO7$35$$35$k_$35$$35$2654 Int) (lq_karg$36$x$35$$35$aiO4$35$$35$k_$35$$35$2654 Int) (lq_karg$36$ds_dj1z$35$$35$k_$35$$35$2654 Int) (lq_karg$36$r$35$$35$aiO5$35$$35$k_$35$$35$2654 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7$35$$35$k_$35$$35$2654 Int) (lq_karg$36$ts$35$$35$aiO6$35$$35$k_$35$$35$2654 Int) (lq_karg$36$VV$35$$35$2653$35$$35$k_$35$$35$2654 Int)) (and (= lq_karg$36$VV$35$$35$2653$35$$35$k_$35$$35$2654 VV$35$$35$F$35$$35$374) (= lq_karg$36$ds_dj1z$35$$35$k_$35$$35$2654 ds_dj1z) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7$35$$35$k_$35$$35$2654 lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7) (= lq_karg$36$r$35$$35$aiO5$35$$35$k_$35$$35$2654 r$35$$35$aiO5) (= lq_karg$36$sz$35$$35$aiO7$35$$35$k_$35$$35$2654 sz$35$$35$aiO7) (= lq_karg$36$ts$35$$35$aiO6$35$$35$k_$35$$35$2654 ts$35$$35$aiO6) (= lq_karg$36$x$35$$35$aiO4$35$$35$k_$35$$35$2654 x$35$$35$aiO4) (exists ((VV$35$$35$F$35$$35$383 Int)) (and (= VV$35$$35$F$35$$35$383 x$35$$35$aiO4) (= lq_karg$36$VV$35$$35$2653$35$$35$k_$35$$35$2654 VV$35$$35$F$35$$35$383) (= lq_karg$36$ds_dj1z$35$$35$k_$35$$35$2654 ds_dj1z) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7$35$$35$k_$35$$35$2654 lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7) (= lq_karg$36$r$35$$35$aiO5$35$$35$k_$35$$35$2654 r$35$$35$aiO5) (= lq_karg$36$sz$35$$35$aiO7$35$$35$k_$35$$35$2654 sz$35$$35$aiO7) (= lq_karg$36$ts$35$$35$aiO6$35$$35$k_$35$$35$2654 ts$35$$35$aiO6) (= lq_karg$36$x$35$$35$aiO4$35$$35$k_$35$$35$2654 x$35$$35$aiO4))))) (exists ((lq_karg$36$sz$35$$35$aiO7$35$$35$k_$35$$35$2654 Int) (lq_karg$36$x$35$$35$aiO4$35$$35$k_$35$$35$2654 Int) (lq_karg$36$ds_dj1z$35$$35$k_$35$$35$2654 Int) (lq_karg$36$r$35$$35$aiO5$35$$35$k_$35$$35$2654 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7$35$$35$k_$35$$35$2654 Int) (lq_karg$36$ts$35$$35$aiO6$35$$35$k_$35$$35$2654 Int) (lq_karg$36$VV$35$$35$2653$35$$35$k_$35$$35$2654 Int)) (and (= lq_karg$36$VV$35$$35$2653$35$$35$k_$35$$35$2654 VV$35$$35$F$35$$35$374) (= lq_karg$36$ds_dj1z$35$$35$k_$35$$35$2654 ds_dj1z) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7$35$$35$k_$35$$35$2654 lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7) (= lq_karg$36$r$35$$35$aiO5$35$$35$k_$35$$35$2654 r$35$$35$aiO5) (= lq_karg$36$sz$35$$35$aiO7$35$$35$k_$35$$35$2654 sz$35$$35$aiO7) (= lq_karg$36$ts$35$$35$aiO6$35$$35$k_$35$$35$2654 ts$35$$35$aiO6) (= lq_karg$36$x$35$$35$aiO4$35$$35$k_$35$$35$2654 x$35$$35$aiO4) (exists ((VV$35$$35$10447 Int) (VV$35$$35$10455 Int) (VV$35$$35$F$35$$35$380 Int)) (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10447) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$10447) 0)) (= VV$35$$35$10447 ts$35$$35$aiO6) (= (apply$35$$35$0 (as len Int) VV$35$$35$10447) r$35$$35$aiO5) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10447) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$10447) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$10447) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10447)) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10455) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10455)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10455) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10455)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10455))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10455) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10455)) (> r$35$$35$aiO5 (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10455)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10455) 0) (<= x$35$$35$aiO4 VV$35$$35$F$35$$35$380) (= lq_karg$36$VV$35$$35$2653$35$$35$k_$35$$35$2654 VV$35$$35$F$35$$35$380) (= lq_karg$36$ds_dj1z$35$$35$k_$35$$35$2654 ds_dj1z) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7$35$$35$k_$35$$35$2654 lq_anf$36$$35$$35$7205759403792867263$35$$35$dja7) (= lq_karg$36$r$35$$35$aiO5$35$$35$k_$35$$35$2654 r$35$$35$aiO5) (= lq_karg$36$sz$35$$35$aiO7$35$$35$k_$35$$35$2654 sz$35$$35$aiO7) (= lq_karg$36$ts$35$$35$aiO6$35$$35$k_$35$$35$2654 ts$35$$35$aiO6) (= lq_karg$36$x$35$$35$aiO4$35$$35$k_$35$$35$2654 x$35$$35$aiO4)))))) b$36$$35$$35$320 b$36$$35$$35$97 b$36$$35$$35$321 b$36$$35$$35$43 b$36$$35$$35$1358 b$36$$35$$35$47 b$36$$35$$35$314 b$36$$35$$35$315 b$36$$35$$35$316 b$36$$35$$35$93 b$36$$35$$35$318 b$36$$35$$35$319))
(push 1)
(assert (not (<= (apply$35$$35$0 (as Binomial.root Int) ds_dj1z) VV$35$$35$F$35$$35$374)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$97 (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$502) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$502) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$502) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$502) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$502) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$502))) b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$179 b$36$$35$$35$180 b$36$$35$$35$181 b$36$$35$$35$182 b$36$$35$$35$183 b$36$$35$$35$93))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$502 (apply$35$$35$0 (as tail Int) ds_dj2M))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (= t$35$$35$aj09 (apply$35$$35$0 (as fst Int) ds_dj8u)) (= ts2$35$$35$aj0b (apply$35$$35$0 (as snd Int) ds_dj8u)) (>= (apply$35$$35$0 (as len Int) ts2$35$$35$aj0b) 0) (exists ((lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6268 Int) (lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6268 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6268 Int) (lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6268 Int) (lq_tmp$36$x$35$$35$6269 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6268 Int) (lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6268 Int) (lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6268 Int) (lq_karg$36$VV$35$$35$6267$35$$35$k_$35$$35$6268 Int)) (and (= lq_karg$36$VV$35$$35$6267$35$$35$k_$35$$35$6268 lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK) (= lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6268 ds_dj8u) (= lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6268 h$35$$35$aiOM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6268 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6268 lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ) (= lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6268 t$35$$35$aj09) (= lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6268 ts1$35$$35$aiOP) (= lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6268 ts2$35$$35$aj0b) (= lq_tmp$36$x$35$$35$6269 lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK) (exists ((VV$35$$35$7360 Int) (VV$35$$35$F$35$$35$35 Int)) (and (= VV$35$$35$7360 (apply$35$$35$0 (as fst Int) ds_dj8u)) (= VV$35$$35$7360 t$35$$35$aj09) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$7360) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7360)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7360) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7360)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7360))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7360) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$7360)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7360) 0) (= lq_karg$36$VV$35$$35$6267$35$$35$k_$35$$35$6268 VV$35$$35$F$35$$35$35) (= lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6268 ds_dj8u) (= lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6268 h$35$$35$aiOM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6268 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6268 lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ) (= lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6268 t$35$$35$aj09) (= lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6268 ts1$35$$35$aiOP) (= lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6268 ts2$35$$35$aj0b)))))) b$36$$35$$35$97 b$36$$35$$35$584 b$36$$35$$35$585 b$36$$35$$35$1961 b$36$$35$$35$586 b$36$$35$$35$43 b$36$$35$$35$47 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aj09) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$35$$35$aj09)) (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aj09) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$35$$35$aj09)) (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aj09))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aj09) (apply$35$$35$0 (as Binomial.rank Int) t$35$$35$aj09)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aj09) 0)) (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$35$$35$aj0b) 0) (= (apply$35$$35$0 (as len Int) ts2$35$$35$aj0b) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$35$$35$aj0b) 0) (>= (apply$35$$35$0 (as len Int) ts2$35$$35$aj0b) 0) (<= (apply$35$$35$0 (as len Int) ts2$35$$35$aj0b) (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$35$$35$aj0b))) b$36$$35$$35$597 b$36$$35$$35$598 (= lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aj09)) b$36$$35$$35$600 b$36$$35$$35$601 b$36$$35$$35$602 b$36$$35$$35$93))
(push 1)
(assert (not (= (smt_map_cup (smt_map_sto (smt_map_def 0) (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$23) (+ 1 (smt_map_sel (smt_map_def 0) (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$23)))) (apply$35$$35$3 (as Binomial.elts Int) (apply$35$$35$0 (as snd Int) VV$35$$35$F$35$$35$23))) (apply$35$$35$3 (as Binomial.elts Int) h$35$$35$aiOM))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$544 b$36$$35$$35$97 b$36$$35$$35$545 b$36$$35$$35$546 b$36$$35$$35$1962 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$93 b$36$$35$$35$541 b$36$$35$$35$542))
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$87) lq_anf$36$$35$$35$7205759403792867349$35$$35$djbv)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$480 b$36$$35$$35$97 b$36$$35$$35$481 b$36$$35$$35$43 b$36$$35$$35$1963 b$36$$35$$35$47 b$36$$35$$35$93 b$36$$35$$35$477 b$36$$35$$35$478 b$36$$35$$35$479))
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$151) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$35$$35$aiOS) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj6F)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4102 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4102 Int) (lq_karg$36$VV$35$$35$4101$35$$35$k_$35$$35$4102 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4102 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4102 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4102 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4102 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4102 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4102 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4102 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4102 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4102 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4102 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4102 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4102 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4102 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4102 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4102 Int) (lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4102 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4102 Bool) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4102 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4102 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4102 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4102 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4102 Int) (lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4102 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4102 Map)) (and (= lq_karg$36$VV$35$$35$4101$35$$35$k_$35$$35$4102 VV$35$$35$F$35$$35$215) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM) (= lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4102 new$35$$35$aiOi) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4102 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4102 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4102 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4102 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4102 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4102 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4102 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4102 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4102 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4102 x2$35$$35$aiOe) (exists ((VV$35$$35$F$35$$35$220 Int) (lq_tmp$36$x$35$$35$4087 Int)) (and (exists ((lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4075 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4075 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4075 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4075 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4075 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4075 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4075 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4075 Int) (lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4075 Bool) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4075 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4075 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4075 Map) (lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4075 Int) (lq_karg$36$VV$35$$35$4074$35$$35$k_$35$$35$4075 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4075 Bool) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4075 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4075 Int)) (and (= lq_karg$36$VV$35$$35$4074$35$$35$k_$35$$35$4075 VV$35$$35$F$35$$35$220) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM) (= lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4075 new$35$$35$aiOi) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4075 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4075 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4075 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4075 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4075 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4075 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4075 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4075 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4075 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4075 x2$35$$35$aiOe) (exists ((VV$35$$35$F$35$$35$218 Int)) (and (exists ((lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4096 Int) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4096 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4096 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4096 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4096 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4096 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4096 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4096 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4096 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4096 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4096 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4096 Map) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4096 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4096 Int) (lq_karg$36$VV$35$$35$4095$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4096 Int) (lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4096 Map) (lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4096 Int)) (and (= lq_karg$36$VV$35$$35$4095$35$$35$k_$35$$35$4096 VV$35$$35$F$35$$35$218) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM) (= lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4096 new$35$$35$aiOi) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4096 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4096 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4096 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4096 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4096 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4096 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4096 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4096 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4096 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4096 x2$35$$35$aiOe) (exists ((VV$35$$35$F$35$$35$216 Int)) (and (apply$35$$35$1 (as is$36$Binomial.Node Int) VV$35$$35$F$35$$35$216) (= VV$35$$35$F$35$$35$216 new$35$$35$aiOi) (= VV$35$$35$F$35$$35$216 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x1$35$$35$aiO9) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH)) (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$216) x1$35$$35$aiO9) (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$216) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$216)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$216) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$216)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$216))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$216) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (smt_map_sto (smt_map_def 0) x1$35$$35$aiO9 (+ 1 (smt_map_sel (smt_map_def 0) x1$35$$35$aiO9))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x1$35$$35$aiO9) (- lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG)) (- lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$216) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$216)) (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) VV$35$$35$F$35$$35$216) x1$35$$35$aiO9) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$216) 0) (= lq_karg$36$VV$35$$35$4095$35$$35$k_$35$$35$4096 VV$35$$35$F$35$$35$216) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM) (= lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4096 new$35$$35$aiOi) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4096 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4096 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4096 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4096 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4096 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4096 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4096 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4096 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4096 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4096 x2$35$$35$aiOe))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$218) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$218)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$218) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$218)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$218))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$218) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$218)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$218) 0) (= lq_karg$36$VV$35$$35$4074$35$$35$k_$35$$35$4075 VV$35$$35$F$35$$35$218) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4075 lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM) (= lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4075 new$35$$35$aiOi) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4075 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4075 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4075 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4075 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4075 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4075 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4075 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4075 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4075 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4075 x2$35$$35$aiOe))))) (exists ((lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4096 Int) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4096 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4096 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4096 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4096 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4096 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4096 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4096 Int) (lq_tmp$36$x$35$$35$4098 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4096 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4096 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4096 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4096 Map) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4096 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4096 Int) (lq_karg$36$VV$35$$35$4095$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4096 Int) (lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4096 Map) (lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4096 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4096 Int)) (and (= lq_karg$36$VV$35$$35$4095$35$$35$k_$35$$35$4096 lq_tmp$36$x$35$$35$4087) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM) (= lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4096 new$35$$35$aiOi) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4096 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4096 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4096 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4096 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4096 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4096 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4096 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4096 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4096 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4096 x2$35$$35$aiOe) (= lq_tmp$36$x$35$$35$4098 lq_tmp$36$x$35$$35$4087) (exists ((VV$35$$35$F$35$$35$216 Int)) (and (apply$35$$35$1 (as is$36$Binomial.Node Int) VV$35$$35$F$35$$35$216) (= VV$35$$35$F$35$$35$216 new$35$$35$aiOi) (= VV$35$$35$F$35$$35$216 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x1$35$$35$aiO9) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH)) (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$216) x1$35$$35$aiO9) (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$216) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$216)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$216) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$216)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$216))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$216) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (smt_map_sto (smt_map_def 0) x1$35$$35$aiO9 (+ 1 (smt_map_sel (smt_map_def 0) x1$35$$35$aiO9))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x1$35$$35$aiO9) (- lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG)) (- lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$216) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$216)) (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) VV$35$$35$F$35$$35$216) x1$35$$35$aiO9) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) VV$35$$35$F$35$$35$216) lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$216) 0) (= lq_karg$36$VV$35$$35$4095$35$$35$k_$35$$35$4096 VV$35$$35$F$35$$35$216) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4096 lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM) (= lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4096 new$35$$35$aiOi) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4096 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4096 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4096 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4096 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4096 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4096 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4096 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4096 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4096 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4096 x2$35$$35$aiOe))))) (= VV$35$$35$F$35$$35$220 lq_tmp$36$x$35$$35$4087) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$220) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$220)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$220) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$220)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$220))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$220) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$220)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$220) 0) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_tmp$36$x$35$$35$4087) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$4087)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$4087) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$4087)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$4087))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$4087) (apply$35$$35$0 (as Binomial.rank Int) lq_tmp$36$x$35$$35$4087)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$4087) 0) (= lq_karg$36$VV$35$$35$4101$35$$35$k_$35$$35$4102 VV$35$$35$F$35$$35$220) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867294$35$$35$djaC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867295$35$$35$djaD) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867296$35$$35$djaE) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867297$35$$35$djaF) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867298$35$$35$djaG) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867299$35$$35$djaH) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867300$35$$35$djaI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867301$35$$35$djaJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867302$35$$35$djaK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867303$35$$35$djaL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM$35$$35$k_$35$$35$4102 lq_anf$36$$35$$35$7205759403792867304$35$$35$djaM) (= lq_karg$36$new$35$$35$aiOi$35$$35$k_$35$$35$4102 new$35$$35$aiOi) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$4102 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$4102 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$4102 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$4102 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$4102 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$4102 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$4102 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$4102 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$4102 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$4102 x2$35$$35$aiOe))))) b$36$$35$$35$384 b$36$$35$$35$416 b$36$$35$$35$97 b$36$$35$$35$417 b$36$$35$$35$386 b$36$$35$$35$418 b$36$$35$$35$387 b$36$$35$$35$419 b$36$$35$$35$388 b$36$$35$$35$420 b$36$$35$$35$389 b$36$$35$$35$421 b$36$$35$$35$390 b$36$$35$$35$422 b$36$$35$$35$391 b$36$$35$$35$43 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$215) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$215)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$215) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$215)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$215))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$215) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$215)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$215) 0)) b$36$$35$$35$47 b$36$$35$$35$374 b$36$$35$$35$375 b$36$$35$$35$376 b$36$$35$$35$408 b$36$$35$$35$377 b$36$$35$$35$409 b$36$$35$$35$410 b$36$$35$$35$379 b$36$$35$$35$411 b$36$$35$$35$380 b$36$$35$$35$412 b$36$$35$$35$93 b$36$$35$$35$381 b$36$$35$$35$413 b$36$$35$$35$382 b$36$$35$$35$383 b$36$$35$$35$415))
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$215) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t1$35$$35$aiO8) (apply$35$$35$0 (as Binomial.treeSize Int) t2$35$$35$aiOd)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (or (exists ((lq_karg$36$lq_tmp$36$x$35$$35$3587$35$$35$k_$35$$35$3586 Int) (lq_karg$36$VV$35$$35$3585$35$$35$k_$35$$35$3586 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3586 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3586 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3586 Int) (lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3586 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3586 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3586 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3586 Int) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3586 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3586 Bool) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3586 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3586 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3586 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3586 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3586 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3586 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3586 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3586 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3586 Int)) (and (= lq_karg$36$VV$35$$35$3585$35$$35$k_$35$$35$3586 VV$35$$35$F$35$$35$279) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$lq_tmp$36$x$35$$35$3587$35$$35$k_$35$$35$3586 lq_tmp$36$x$35$$35$3636) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3586 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3586 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3586 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3586 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3586 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3586 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3586 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3586 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3586 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3586 x2$35$$35$aiOe) (exists ((VV$35$$35$F$35$$35$286 Int) (VV$35$$35$9710 Int) (lq_tmp$36$x$35$$35$3575 Int)) (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$286) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$286)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$286) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$286)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$286))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$286) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$286)) (> (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$3575) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$286)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$286) 0) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9710) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$9710) 0)) (= VV$35$$35$9710 ts2$35$$35$aiOg) (= (apply$35$$35$0 (as len Int) VV$35$$35$9710) r2$35$$35$aiOf) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9710) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$9710) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$9710) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9710)) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_tmp$36$x$35$$35$3575) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$3575)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$3575) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$3575)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$3575))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$3575) (apply$35$$35$0 (as Binomial.rank Int) lq_tmp$36$x$35$$35$3575)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$3575) 0) (= lq_karg$36$VV$35$$35$3585$35$$35$k_$35$$35$3586 VV$35$$35$F$35$$35$286) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$lq_tmp$36$x$35$$35$3587$35$$35$k_$35$$35$3586 lq_tmp$36$x$35$$35$3575) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3586 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3586 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3586 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3586 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3586 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3586 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3586 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3586 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3586 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3586 x2$35$$35$aiOe))))) (exists ((lq_karg$36$lq_tmp$36$x$35$$35$3587$35$$35$k_$35$$35$3586 Int) (lq_karg$36$VV$35$$35$3585$35$$35$k_$35$$35$3586 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3586 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3586 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3586 Int) (lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3586 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3586 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3586 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3586 Int) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3586 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3586 Bool) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3586 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3586 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3586 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3586 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3586 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3586 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3586 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3586 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3586 Int)) (and (= lq_karg$36$VV$35$$35$3585$35$$35$k_$35$$35$3586 VV$35$$35$F$35$$35$279) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$lq_tmp$36$x$35$$35$3587$35$$35$k_$35$$35$3586 lq_tmp$36$x$35$$35$3636) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3586 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3586 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3586 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3586 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3586 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3586 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3586 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3586 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3586 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3586 x2$35$$35$aiOe) (exists ((VV$35$$35$F$35$$35$283 Int) (VV$35$$35$9710 Int)) (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$283) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$283)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$283) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$283)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$283))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$283) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$283)) (> r2$35$$35$aiOf (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$283)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$283) 0) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9710) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$9710) 0)) (= VV$35$$35$9710 ts2$35$$35$aiOg) (= (apply$35$$35$0 (as len Int) VV$35$$35$9710) r2$35$$35$aiOf) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9710) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$9710) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$9710) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$9710)) (= lq_karg$36$VV$35$$35$3585$35$$35$k_$35$$35$3586 VV$35$$35$F$35$$35$283) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$lq_tmp$36$x$35$$35$3587$35$$35$k_$35$$35$3586 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3586 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3586 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3586 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3586 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3586 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3586 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3586 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3586 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3586 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3586 x2$35$$35$aiOe)))))) b$36$$35$$35$384 b$36$$35$$35$97 b$36$$35$$35$386 b$36$$35$$35$387 b$36$$35$$35$388 b$36$$35$$35$389 b$36$$35$$35$390 b$36$$35$$35$1223 b$36$$35$$35$391 b$36$$35$$35$392 b$36$$35$$35$1225 b$36$$35$$35$393 b$36$$35$$35$394 b$36$$35$$35$43 b$36$$35$$35$395 b$36$$35$$35$396 b$36$$35$$35$397 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$279) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$279)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$279) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$279)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$279))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$279) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$279)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$279) 0)) b$36$$35$$35$47 b$36$$35$$35$399 b$36$$35$$35$400 b$36$$35$$35$374 b$36$$35$$35$375 b$36$$35$$35$376 b$36$$35$$35$377 b$36$$35$$35$379 b$36$$35$$35$380 b$36$$35$$35$93 b$36$$35$$35$381 b$36$$35$$35$382 b$36$$35$$35$383))
(push 1)
(assert (not (> (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$3636) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$279))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$320 b$36$$35$$35$97 b$36$$35$$35$321 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$1968 b$36$$35$$35$314 b$36$$35$$35$315 b$36$$35$$35$316 b$36$$35$$35$93 b$36$$35$$35$318 b$36$$35$$35$319))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$375 (+ 1 (apply$35$$35$0 (as Binomial.treeListSize Int) ts$35$$35$aiO6)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$224 b$36$$35$$35$97 b$36$$35$$35$225 b$36$$35$$35$229 b$36$$35$$35$230 b$36$$35$$35$231 b$36$$35$$35$232 b$36$$35$$35$233 b$36$$35$$35$234 b$36$$35$$35$43 b$36$$35$$35$235 b$36$$35$$35$236 b$36$$35$$35$237 b$36$$35$$35$238 b$36$$35$$35$47 b$36$$35$$35$1969 b$36$$35$$35$217 b$36$$35$$35$218 b$36$$35$$35$219 b$36$$35$$35$93 b$36$$35$$35$221 b$36$$35$$35$222 b$36$$35$$35$223))
(push 1)
(assert (not VV$35$$35$F$35$$35$471))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$97 (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11475) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$11475) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11475) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$11475) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$11475) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11475))) b$36$$35$$35$43 b$36$$35$$35$47 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$503) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$503)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$503) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$503)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$503))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$503) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$503)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$503) 0)) b$36$$35$$35$179 b$36$$35$$35$180 b$36$$35$$35$181 b$36$$35$$35$182 b$36$$35$$35$183 b$36$$35$$35$93))
(push 1)
(assert (not (> (- (apply$35$$35$0 (as len Int) ds_dj2M) 1) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$503))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (= t$35$$35$aj09 (apply$35$$35$0 (as fst Int) ds_dj8u)) (= ts2$35$$35$aj0b (apply$35$$35$0 (as snd Int) ds_dj8u)) (>= (apply$35$$35$0 (as len Int) ts2$35$$35$aj0b) 0) (exists ((lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6268 Int) (lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6268 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6268 Int) (lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6268 Int) (lq_tmp$36$x$35$$35$6269 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6268 Int) (lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6268 Int) (lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6268 Int) (lq_karg$36$VV$35$$35$6267$35$$35$k_$35$$35$6268 Int)) (and (= lq_karg$36$VV$35$$35$6267$35$$35$k_$35$$35$6268 lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK) (= lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6268 ds_dj8u) (= lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6268 h$35$$35$aiOM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6268 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6268 lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ) (= lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6268 t$35$$35$aj09) (= lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6268 ts1$35$$35$aiOP) (= lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6268 ts2$35$$35$aj0b) (= lq_tmp$36$x$35$$35$6269 lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK) (exists ((VV$35$$35$7360 Int) (VV$35$$35$F$35$$35$35 Int)) (and (= VV$35$$35$7360 (apply$35$$35$0 (as fst Int) ds_dj8u)) (= VV$35$$35$7360 t$35$$35$aj09) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$7360) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7360)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7360) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7360)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7360))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7360) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$7360)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7360) 0) (= lq_karg$36$VV$35$$35$6267$35$$35$k_$35$$35$6268 VV$35$$35$F$35$$35$35) (= lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6268 ds_dj8u) (= lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6268 h$35$$35$aiOM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6268 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6268 lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ) (= lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6268 t$35$$35$aj09) (= lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6268 ts1$35$$35$aiOP) (= lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6268 ts2$35$$35$aj0b)))))) b$36$$35$$35$97 b$36$$35$$35$584 b$36$$35$$35$585 b$36$$35$$35$586 b$36$$35$$35$43 b$36$$35$$35$47 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aj09) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$35$$35$aj09)) (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aj09) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$35$$35$aj09)) (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aj09))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aj09) (apply$35$$35$0 (as Binomial.rank Int) t$35$$35$aj09)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aj09) 0)) b$36$$35$$35$1971 (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$35$$35$aj0b) 0) (= (apply$35$$35$0 (as len Int) ts2$35$$35$aj0b) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$35$$35$aj0b) 0) (>= (apply$35$$35$0 (as len Int) ts2$35$$35$aj0b) 0) (<= (apply$35$$35$0 (as len Int) ts2$35$$35$aj0b) (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$35$$35$aj0b))) b$36$$35$$35$597 b$36$$35$$35$598 (= lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aj09)) b$36$$35$$35$600 b$36$$35$$35$601 b$36$$35$$35$602 b$36$$35$$35$93))
(push 1)
(assert (not (= (+ 1 (apply$35$$35$0 (as Binomial.size Int) (apply$35$$35$0 (as snd Int) VV$35$$35$F$35$$35$24))) (apply$35$$35$0 (as Binomial.size Int) h$35$$35$aiOM))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$544 b$36$$35$$35$97 b$36$$35$$35$545 b$36$$35$$35$546 b$36$$35$$35$43 b$36$$35$$35$47 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$88) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$88)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$88) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$88)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$88))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$88) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$88)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$88) 0)) b$36$$35$$35$892 b$36$$35$$35$93 b$36$$35$$35$541 b$36$$35$$35$542))
(push 1)
(assert (not (> lq_anf$36$$35$$35$7205759403792867349$35$$35$djbv (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$88))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$43 b$36$$35$$35$461 b$36$$35$$35$462 b$36$$35$$35$47 b$36$$35$$35$463 b$36$$35$$35$464 b$36$$35$$35$465 b$36$$35$$35$466 b$36$$35$$35$467 b$36$$35$$35$469 b$36$$35$$35$1973 b$36$$35$$35$470 b$36$$35$$35$471 b$36$$35$$35$472 b$36$$35$$35$473 b$36$$35$$35$93))
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$F$35$$35$152) (smt_map_cup (smt_map_sto (smt_map_def 0) x$35$$35$aiOs (+ 1 (smt_map_sel (smt_map_def 0) x$35$$35$aiOs))) (apply$35$$35$3 (as Binomial.elts Int) ds_dj6s)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$384 b$36$$35$$35$97 b$36$$35$$35$386 b$36$$35$$35$387 b$36$$35$$35$388 b$36$$35$$35$389 b$36$$35$$35$390 b$36$$35$$35$391 b$36$$35$$35$392 b$36$$35$$35$393 b$36$$35$$35$394 b$36$$35$$35$43 b$36$$35$$35$395 b$36$$35$$35$396 b$36$$35$$35$397 b$36$$35$$35$47 b$36$$35$$35$399 b$36$$35$$35$400 b$36$$35$$35$374 b$36$$35$$35$375 b$36$$35$$35$1975 b$36$$35$$35$376 b$36$$35$$35$377 b$36$$35$$35$379 b$36$$35$$35$380 b$36$$35$$35$93 b$36$$35$$35$381 b$36$$35$$35$382 b$36$$35$$35$383))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$280 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$320 b$36$$35$$35$97 b$36$$35$$35$321 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$1977 b$36$$35$$35$314 b$36$$35$$35$315 b$36$$35$$35$316 b$36$$35$$35$93 b$36$$35$$35$318 b$36$$35$$35$319))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$376 1)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$97 (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11475) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$11475) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11475) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$11475) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$11475) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$11475))) b$36$$35$$35$1571 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$179 b$36$$35$$35$180 b$36$$35$$35$181 b$36$$35$$35$182 b$36$$35$$35$183 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$504) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$504)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$504) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$504)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$504))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$504) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$504)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$504) 0)) b$36$$35$$35$93))
(push 1)
(assert (not (> (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$956) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$504))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (= t$35$$35$aj09 (apply$35$$35$0 (as fst Int) ds_dj8u)) (= ts2$35$$35$aj0b (apply$35$$35$0 (as snd Int) ds_dj8u)) (>= (apply$35$$35$0 (as len Int) ts2$35$$35$aj0b) 0) (exists ((lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6268 Int) (lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6268 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6268 Int) (lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6268 Int) (lq_tmp$36$x$35$$35$6269 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6268 Int) (lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6268 Int) (lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6268 Int) (lq_karg$36$VV$35$$35$6267$35$$35$k_$35$$35$6268 Int)) (and (= lq_karg$36$VV$35$$35$6267$35$$35$k_$35$$35$6268 lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK) (= lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6268 ds_dj8u) (= lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6268 h$35$$35$aiOM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6268 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6268 lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ) (= lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6268 t$35$$35$aj09) (= lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6268 ts1$35$$35$aiOP) (= lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6268 ts2$35$$35$aj0b) (= lq_tmp$36$x$35$$35$6269 lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK) (exists ((VV$35$$35$7360 Int) (VV$35$$35$F$35$$35$35 Int)) (and (= VV$35$$35$7360 (apply$35$$35$0 (as fst Int) ds_dj8u)) (= VV$35$$35$7360 t$35$$35$aj09) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$7360) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7360)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7360) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7360)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7360))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7360) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$7360)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7360) 0) (= lq_karg$36$VV$35$$35$6267$35$$35$k_$35$$35$6268 VV$35$$35$F$35$$35$35) (= lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6268 ds_dj8u) (= lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6268 h$35$$35$aiOM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6268 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6268 lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ) (= lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6268 t$35$$35$aj09) (= lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6268 ts1$35$$35$aiOP) (= lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6268 ts2$35$$35$aj0b))))) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6393 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM$35$$35$k_$35$$35$6393 Int) (lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6393 Int) (lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6393 Int) (lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6393 Int) (lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6393 Int) (lq_karg$36$VV$35$$35$6392$35$$35$k_$35$$35$6393 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK$35$$35$k_$35$$35$6393 Int) (lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6393 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL$35$$35$k_$35$$35$6393 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN$35$$35$k_$35$$35$6393 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6393 Int)) (and (= lq_karg$36$VV$35$$35$6392$35$$35$k_$35$$35$6393 VV$35$$35$7267) (= lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6393 ds_dj8u) (= lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6393 h$35$$35$aiOM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6393 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6393 lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK$35$$35$k_$35$$35$6393 lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL$35$$35$k_$35$$35$6393 lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM$35$$35$k_$35$$35$6393 lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN$35$$35$k_$35$$35$6393 lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN) (= lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6393 t$35$$35$aj09) (= lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6393 ts1$35$$35$aiOP) (= lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6393 ts2$35$$35$aj0b) (exists ((VV$35$$35$F$35$$35$26 Int)) (and (apply$35$$35$1 (as is$36$Binomial.Heap Int) VV$35$$35$F$35$$35$26) (= VV$35$$35$F$35$$35$26 lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN) (= VV$35$$35$F$35$$35$26 (apply$35$$35$0 (as Binomial.Heap Int) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM)) (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$F$35$$35$26) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM)) (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$F$35$$35$26) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$26))) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$26) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM)) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$26) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$26))) (= (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$26) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Heap$35$$35$1 Int) VV$35$$35$F$35$$35$26) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM) (>= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$26) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$26)) (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$26)) (= lq_karg$36$VV$35$$35$6392$35$$35$k_$35$$35$6393 VV$35$$35$F$35$$35$26) (= lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6393 ds_dj8u) (= lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6393 h$35$$35$aiOM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6393 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6393 lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK$35$$35$k_$35$$35$6393 lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL$35$$35$k_$35$$35$6393 lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM$35$$35$k_$35$$35$6393 lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN$35$$35$k_$35$$35$6393 lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN) (= lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6393 t$35$$35$aj09) (= lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6393 ts1$35$$35$aiOP) (= lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6393 ts2$35$$35$aj0b))))) (exists ((lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6391 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL$35$$35$k_$35$$35$6391 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN$35$$35$k_$35$$35$6391 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6391 Int) (lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6391 Int) (lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6391 Int) (lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6391 Int) (lq_karg$36$VV$35$$35$6392$35$$35$k_$35$$35$6391 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK$35$$35$k_$35$$35$6391 Int) (lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6391 Int) (lq_karg$36$VV$35$$35$6390$35$$35$k_$35$$35$6391 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM$35$$35$k_$35$$35$6391 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6391 Int)) (and (= lq_karg$36$VV$35$$35$6390$35$$35$k_$35$$35$6391 VV$35$$35$F$35$$35$25) (= lq_karg$36$VV$35$$35$6392$35$$35$k_$35$$35$6391 VV$35$$35$7267) (= lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6391 ds_dj8u) (= lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6391 h$35$$35$aiOM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6391 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6391 lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK$35$$35$k_$35$$35$6391 lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL$35$$35$k_$35$$35$6391 lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM$35$$35$k_$35$$35$6391 lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN$35$$35$k_$35$$35$6391 lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN) (= lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6391 t$35$$35$aj09) (= lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6391 ts1$35$$35$aiOP) (= lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6391 ts2$35$$35$aj0b) (exists ((VV$35$$35$F$35$$35$28 Int) (VV$35$$35$7278 Int)) (and (exists ((lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6365 Int) (lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6365 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK$35$$35$k_$35$$35$6365 Int) (lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6365 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL$35$$35$k_$35$$35$6365 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6365 Int) (lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6365 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6365 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM$35$$35$k_$35$$35$6365 Int) (lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6365 Int) (lq_karg$36$VV$35$$35$6364$35$$35$k_$35$$35$6365 Int)) (and (= lq_karg$36$VV$35$$35$6364$35$$35$k_$35$$35$6365 VV$35$$35$F$35$$35$28) (= lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6365 ds_dj8u) (= lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6365 h$35$$35$aiOM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6365 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6365 lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK$35$$35$k_$35$$35$6365 lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL$35$$35$k_$35$$35$6365 lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM$35$$35$k_$35$$35$6365 lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM) (= lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6365 t$35$$35$aj09) (= lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6365 ts1$35$$35$aiOP) (= lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6365 ts2$35$$35$aj0b) (exists ((VV$35$$35$7292 Int) (VV$35$$35$F$35$$35$31 Int) (VV$35$$35$7284 Int)) (and (or (exists ((lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6333 Int) (lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6333 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6333 Int) (lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6333 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6333 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL$35$$35$k_$35$$35$6333 Int) (lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6333 Int) (lq_karg$36$VV$35$$35$6332$35$$35$k_$35$$35$6333 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK$35$$35$k_$35$$35$6333 Int) (lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6333 Int)) (and (= lq_karg$36$VV$35$$35$6332$35$$35$k_$35$$35$6333 VV$35$$35$F$35$$35$31) (= lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6333 ds_dj8u) (= lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6333 h$35$$35$aiOM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6333 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6333 lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK$35$$35$k_$35$$35$6333 lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL$35$$35$k_$35$$35$6333 lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL) (= lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6333 t$35$$35$aj09) (= lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6333 ts1$35$$35$aiOP) (= lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6333 ts2$35$$35$aj0b) (exists ((VV$35$$35$F$35$$35$33 Int) (VV$35$$35$7322 Int) (VV$35$$35$7330 Int)) (and (exists ((lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6291 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6291 Int) (lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6291 Int) (lq_karg$36$VV$35$$35$6290$35$$35$k_$35$$35$6291 Int) (lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6291 Int) (lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6291 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK$35$$35$k_$35$$35$6291 Int) (lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6291 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6291 Int)) (and (= lq_karg$36$VV$35$$35$6290$35$$35$k_$35$$35$6291 VV$35$$35$F$35$$35$33) (= lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6291 ds_dj8u) (= lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6291 h$35$$35$aiOM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6291 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6291 lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK$35$$35$k_$35$$35$6291 lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK) (= lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6291 t$35$$35$aj09) (= lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6291 ts1$35$$35$aiOP) (= lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6291 ts2$35$$35$aj0b) (exists ((VV$35$$35$7341 Int) (VV$35$$35$7349 Int) (VV$35$$35$F$35$$35$34 Int)) (and (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6257 Int) (lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6257 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6257 Int) (lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6257 Int) (lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6257 Int) (lq_karg$36$VV$35$$35$6256$35$$35$k_$35$$35$6257 Int) (lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6257 Int)) (and (= lq_karg$36$VV$35$$35$6256$35$$35$k_$35$$35$6257 VV$35$$35$F$35$$35$34) (= lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6257 ds_dj8u) (= lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6257 h$35$$35$aiOM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6257 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6257 lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ) (= lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6257 t$35$$35$aj09) (= lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6257 ts2$35$$35$aj0b) (exists ((VV$35$$35$7365 Int) (VV$35$$35$F$35$$35$36 Int)) (and (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6240 Int) (lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6240 Int) (lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6240 Int) (lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6240 Int) (lq_karg$36$VV$35$$35$6239$35$$35$k_$35$$35$6240 Int) (lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6240 Int)) (and (= lq_karg$36$VV$35$$35$6239$35$$35$k_$35$$35$6240 VV$35$$35$F$35$$35$36) (= lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6240 ds_dj8u) (= lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6240 h$35$$35$aiOM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6240 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (= lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6240 t$35$$35$aj09) (= lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6240 ts2$35$$35$aj0b) (exists ((VV$35$$35$F$35$$35$37 Int) (VV$35$$35$7370 Int)) (and (= VV$35$$35$7370 (apply$35$$35$0 (as fst Int) ds_dj8u)) (= VV$35$$35$7370 t$35$$35$aj09) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$7370) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7370)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7370) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7370)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7370))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7370) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$7370)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7370) 0) (= lq_karg$36$VV$35$$35$6239$35$$35$k_$35$$35$6240 VV$35$$35$F$35$$35$37) (= lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6240 ds_dj8u) (= lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6240 h$35$$35$aiOM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6240 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (= lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6240 t$35$$35$aj09) (= lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6240 ts2$35$$35$aj0b))))) (= VV$35$$35$7365 lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ) (= VV$35$$35$7365 t$35$$35$aj09) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$7365) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7365)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7365) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7365)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7365))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7365) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$7365)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7365) 0) (<= (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aj09) VV$35$$35$F$35$$35$36) (= lq_karg$36$VV$35$$35$6256$35$$35$k_$35$$35$6257 VV$35$$35$F$35$$35$36) (= lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6257 ds_dj8u) (= lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6257 h$35$$35$aiOM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6257 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6257 lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ) (= lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6257 t$35$$35$aj09) (= lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6257 ts2$35$$35$aj0b))))) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7341) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$7341) 0)) (= VV$35$$35$7341 ts1$35$$35$aiOP) (= (smt_map_cup (smt_map_sto (smt_map_def 0) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ) (+ 1 (smt_map_sel (smt_map_def 0) (apply$35$$35$0 (as Binomial.root Int) lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ)))) (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$7341)) (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ)) (= (+ 1 (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7341)) (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7341) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$7341) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$7341) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7341)) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$7349) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7349)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7349) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7349)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7349))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7349) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$7349)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7349) 0) (= lq_karg$36$VV$35$$35$6290$35$$35$k_$35$$35$6291 VV$35$$35$F$35$$35$34) (= lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6291 ds_dj8u) (= lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6291 h$35$$35$aiOM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6291 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6291 lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK$35$$35$k_$35$$35$6291 lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK) (= lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6291 t$35$$35$aj09) (= lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6291 ts1$35$$35$aiOP) (= lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6291 ts2$35$$35$aj0b))))) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7322) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$7322) 0)) (= VV$35$$35$7322 lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$7322) (apply$35$$35$3 (as Binomial.treeListElts Int) ts1$35$$35$aiOP)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7322) (apply$35$$35$0 (as Binomial.treeListSize Int) ts1$35$$35$aiOP)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7322) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$7322) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$7322) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7322)) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$7330) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7330)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7330) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7330)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7330))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7330) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$7330)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7330) 0) (= lq_karg$36$VV$35$$35$6332$35$$35$k_$35$$35$6333 VV$35$$35$F$35$$35$33) (= lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6333 ds_dj8u) (= lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6333 h$35$$35$aiOM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6333 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6333 lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK$35$$35$k_$35$$35$6333 lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL$35$$35$k_$35$$35$6333 lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL) (= lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6333 t$35$$35$aj09) (= lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6333 ts1$35$$35$aiOP) (= lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6333 ts2$35$$35$aj0b))))) (exists ((lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6333 Int) (lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6333 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6333 Int) (lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6333 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6333 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL$35$$35$k_$35$$35$6333 Int) (lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6333 Int) (lq_karg$36$VV$35$$35$6332$35$$35$k_$35$$35$6333 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK$35$$35$k_$35$$35$6333 Int) (lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6333 Int)) (and (= lq_karg$36$VV$35$$35$6332$35$$35$k_$35$$35$6333 VV$35$$35$F$35$$35$31) (= lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6333 ds_dj8u) (= lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6333 h$35$$35$aiOM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6333 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6333 lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK$35$$35$k_$35$$35$6333 lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL$35$$35$k_$35$$35$6333 lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL) (= lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6333 t$35$$35$aj09) (= lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6333 ts1$35$$35$aiOP) (= lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6333 ts2$35$$35$aj0b) (exists ((VV$35$$35$7303 Int) (VV$35$$35$7311 Int) (VV$35$$35$F$35$$35$32 Int)) (and (= VV$35$$35$7303 (apply$35$$35$0 (as snd Int) ds_dj8u)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$7303) 0) (<= (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aj09) VV$35$$35$F$35$$35$32) (<= (apply$35$$35$0 (as Binomial.root Int) (apply$35$$35$0 (as fst Int) ds_dj8u)) VV$35$$35$F$35$$35$32) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7303) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$7303) 0)) (= VV$35$$35$7303 ts2$35$$35$aj0b) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7303) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$7303) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$7303) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7303)) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$7311) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7311)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7311) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7311)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7311))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7311) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$7311)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7311) 0) (= lq_karg$36$VV$35$$35$6332$35$$35$k_$35$$35$6333 VV$35$$35$F$35$$35$32) (= lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6333 ds_dj8u) (= lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6333 h$35$$35$aiOM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6333 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6333 lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK$35$$35$k_$35$$35$6333 lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL$35$$35$k_$35$$35$6333 lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL) (= lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6333 t$35$$35$aj09) (= lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6333 ts1$35$$35$aiOP) (= lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6333 ts2$35$$35$aj0b)))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$7292) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7292)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7292) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7292)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7292))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7292) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$7292)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7292) 0) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7284) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$7284) 0)) (= VV$35$$35$7284 lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$7284) (smt_map_cup (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL) (apply$35$$35$3 (as Binomial.treeListElts Int) ts2$35$$35$aj0b))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7284) (+ (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL) (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$35$$35$aj0b))) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7284) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$7284) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$7284) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$7284)) (= lq_karg$36$VV$35$$35$6364$35$$35$k_$35$$35$6365 VV$35$$35$F$35$$35$31) (= lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6365 ds_dj8u) (= lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6365 h$35$$35$aiOM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6365 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6365 lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK$35$$35$k_$35$$35$6365 lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL$35$$35$k_$35$$35$6365 lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM$35$$35$k_$35$$35$6365 lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM) (= lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6365 t$35$$35$aj09) (= lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6365 ts1$35$$35$aiOP) (= lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6365 ts2$35$$35$aj0b))))) (apply$35$$35$1 (as is$36$Binomial.Heap Int) VV$35$$35$7278) (= VV$35$$35$7278 lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN) (= VV$35$$35$7278 (apply$35$$35$0 (as Binomial.Heap Int) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM)) (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$7278) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM)) (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$7278) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$7278))) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$7278) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM)) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$7278) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$7278))) (= (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$7278) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Heap$35$$35$1 Int) VV$35$$35$7278) lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM) (>= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$7278) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$7278)) (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$7278)) (= lq_karg$36$VV$35$$35$6390$35$$35$k_$35$$35$6391 VV$35$$35$F$35$$35$28) (= lq_karg$36$VV$35$$35$6392$35$$35$k_$35$$35$6391 VV$35$$35$7278) (= lq_karg$36$ds_dj8u$35$$35$k_$35$$35$6391 ds_dj8u) (= lq_karg$36$h$35$$35$aiOM$35$$35$k_$35$$35$6391 h$35$$35$aiOM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI$35$$35$k_$35$$35$6391 lq_anf$36$$35$$35$7205759403792867362$35$$35$djbI) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ$35$$35$k_$35$$35$6391 lq_anf$36$$35$$35$7205759403792867363$35$$35$djbJ) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK$35$$35$k_$35$$35$6391 lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL$35$$35$k_$35$$35$6391 lq_anf$36$$35$$35$7205759403792867365$35$$35$djbL) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM$35$$35$k_$35$$35$6391 lq_anf$36$$35$$35$7205759403792867366$35$$35$djbM) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN$35$$35$k_$35$$35$6391 lq_anf$36$$35$$35$7205759403792867367$35$$35$djbN) (= lq_karg$36$t$35$$35$aj09$35$$35$k_$35$$35$6391 t$35$$35$aj09) (= lq_karg$36$ts1$35$$35$aiOP$35$$35$k_$35$$35$6391 ts1$35$$35$aiOP) (= lq_karg$36$ts2$35$$35$aj0b$35$$35$k_$35$$35$6391 ts2$35$$35$aj0b)))))) b$36$$35$$35$97 b$36$$35$$35$584 b$36$$35$$35$585 b$36$$35$$35$586 b$36$$35$$35$43 b$36$$35$$35$47 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aj09) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$35$$35$aj09)) (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aj09) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$35$$35$aj09)) (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aj09))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aj09) (apply$35$$35$0 (as Binomial.rank Int) t$35$$35$aj09)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) t$35$$35$aj09) 0)) (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$35$$35$aj0b) 0) (= (apply$35$$35$0 (as len Int) ts2$35$$35$aj0b) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$35$$35$aj0b) 0) (>= (apply$35$$35$0 (as len Int) ts2$35$$35$aj0b) 0) (<= (apply$35$$35$0 (as len Int) ts2$35$$35$aj0b) (apply$35$$35$0 (as Binomial.treeListSize Int) ts2$35$$35$aj0b))) b$36$$35$$35$597 b$36$$35$$35$598 (= lq_anf$36$$35$$35$7205759403792867364$35$$35$djbK (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aj09)) b$36$$35$$35$600 b$36$$35$$35$601 b$36$$35$$35$602 b$36$$35$$35$762 (and (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$7267) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$7267))) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$7267) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$7267))) (>= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$7267) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$7267)) (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$7267))) b$36$$35$$35$93))
(push 1)
(assert (not (<= (apply$35$$35$0 (as fst Int) VV$35$$35$7257) VV$35$$35$F$35$$35$25)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$544 b$36$$35$$35$97 b$36$$35$$35$545 b$36$$35$$35$546 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$892 b$36$$35$$35$93 b$36$$35$$35$541 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$7940) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7940)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7940) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$7940)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$7940))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7940) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$7940)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$7940) 0)) b$36$$35$$35$542))
(push 1)
(assert (not (<= x$35$$35$aiOm VV$35$$35$F$35$$35$89)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$43 b$36$$35$$35$461 b$36$$35$$35$462 b$36$$35$$35$47 b$36$$35$$35$463 b$36$$35$$35$464 b$36$$35$$35$465 b$36$$35$$35$466 b$36$$35$$35$467 b$36$$35$$35$469 b$36$$35$$35$470 b$36$$35$$35$471 b$36$$35$$35$472 b$36$$35$$35$473 b$36$$35$$35$93 b$36$$35$$35$1981))
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$153) (+ 1 (apply$35$$35$0 (as Binomial.size Int) ds_dj6s)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$320 b$36$$35$$35$1984 b$36$$35$$35$97 b$36$$35$$35$321 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$314 b$36$$35$$35$315 b$36$$35$$35$316 b$36$$35$$35$93 b$36$$35$$35$318 b$36$$35$$35$319))
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$377) r$35$$35$aiO5)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$1985 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$179 b$36$$35$$35$180 b$36$$35$$35$181 b$36$$35$$35$182 b$36$$35$$35$183 b$36$$35$$35$93))
(push 1)
(assert (not (apply$35$$35$11 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$320 b$36$$35$$35$97 b$36$$35$$35$321 b$36$$35$$35$1992 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$1360 b$36$$35$$35$314 b$36$$35$$35$315 b$36$$35$$35$316 b$36$$35$$35$93 b$36$$35$$35$318 b$36$$35$$35$319))
(push 1)
(assert (not (> r$35$$35$aiO5 (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$378))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$1993 b$36$$35$$35$43 b$36$$35$$35$174 b$36$$35$$35$47 b$36$$35$$35$175 b$36$$35$$35$176 b$36$$35$$35$177 b$36$$35$$35$93))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$506 (= (apply$35$$35$0 (as Binomial.size Int) h$35$$35$aiOl) 0))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$544 b$36$$35$$35$97 b$36$$35$$35$545 b$36$$35$$35$546 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$91) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$91)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$91) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$91)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$91))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$91) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$91)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$91) 0)) b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$892 b$36$$35$$35$93 b$36$$35$$35$541 b$36$$35$$35$542 b$36$$35$$35$894))
(push 1)
(assert (not (> (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$5593) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$91))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$320 b$36$$35$$35$97 b$36$$35$$35$321 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$1999 b$36$$35$$35$1360 b$36$$35$$35$1361 b$36$$35$$35$314 b$36$$35$$35$315 b$36$$35$$35$316 b$36$$35$$35$93 b$36$$35$$35$318 b$36$$35$$35$319))
(push 1)
(assert (not (<= x$35$$35$aiO4 VV$35$$35$F$35$$35$379)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867237$35$$35$dj9H$35$$35$k_$35$$35$1738 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867226$35$$35$dj9w$35$$35$k_$35$$35$1738 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u$35$$35$k_$35$$35$1738 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867228$35$$35$dj9y$35$$35$k_$35$$35$1738 Int) (lq_karg$36$ds_dj4a$35$$35$k_$35$$35$1738 Int) (lq_karg$36$residual$35$$35$aiNU$35$$35$k_$35$$35$1738 Int) (lq_karg$36$VV$35$$35$1737$35$$35$k_$35$$35$1738 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867229$35$$35$dj9z$35$$35$k_$35$$35$1738 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867233$35$$35$dj9D$35$$35$k_$35$$35$1738 Int) (lq_karg$36$ds_dj4J$35$$35$k_$35$$35$1738 Int) (lq_karg$36$ds_dj4K$35$$35$k_$35$$35$1738 Int) (lq_karg$36$t$35$$35$aiNT$35$$35$k_$35$$35$1738 Int) (lq_karg$36$ds_dj4L$35$$35$k_$35$$35$1738 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t$35$$35$k_$35$$35$1738 Int) (lq_karg$36$ds_dj4M$35$$35$k_$35$$35$1738 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G$35$$35$k_$35$$35$1738 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E$35$$35$k_$35$$35$1738 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867230$35$$35$dj9A$35$$35$k_$35$$35$1738 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867232$35$$35$dj9C$35$$35$k_$35$$35$1738 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867238$35$$35$dj9I$35$$35$k_$35$$35$1738 Map) (lq_karg$36$ts$35$$35$aiNR$35$$35$k_$35$$35$1738 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867227$35$$35$dj9x$35$$35$k_$35$$35$1738 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867235$35$$35$dj9F$35$$35$k_$35$$35$1738 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867239$35$$35$dj9J$35$$35$k_$35$$35$1738 Map) (lq_karg$36$x$35$$35$aiNN$35$$35$k_$35$$35$1738 Int)) (and (= lq_karg$36$VV$35$$35$1737$35$$35$k_$35$$35$1738 VV$35$$35$F$35$$35$443) (= lq_karg$36$ds_dj4J$35$$35$k_$35$$35$1738 ds_dj4J) (= lq_karg$36$ds_dj4K$35$$35$k_$35$$35$1738 ds_dj4K) (= lq_karg$36$ds_dj4L$35$$35$k_$35$$35$1738 ds_dj4L) (= lq_karg$36$ds_dj4M$35$$35$k_$35$$35$1738 ds_dj4M) (= lq_karg$36$ds_dj4a$35$$35$k_$35$$35$1738 ds_dj4a) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t$35$$35$k_$35$$35$1738 lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u$35$$35$k_$35$$35$1738 lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867226$35$$35$dj9w$35$$35$k_$35$$35$1738 lq_anf$36$$35$$35$7205759403792867226$35$$35$dj9w) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867227$35$$35$dj9x$35$$35$k_$35$$35$1738 lq_anf$36$$35$$35$7205759403792867227$35$$35$dj9x) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867228$35$$35$dj9y$35$$35$k_$35$$35$1738 lq_anf$36$$35$$35$7205759403792867228$35$$35$dj9y) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867229$35$$35$dj9z$35$$35$k_$35$$35$1738 lq_anf$36$$35$$35$7205759403792867229$35$$35$dj9z) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867230$35$$35$dj9A$35$$35$k_$35$$35$1738 lq_anf$36$$35$$35$7205759403792867230$35$$35$dj9A) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867232$35$$35$dj9C$35$$35$k_$35$$35$1738 lq_anf$36$$35$$35$7205759403792867232$35$$35$dj9C) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867233$35$$35$dj9D$35$$35$k_$35$$35$1738 lq_anf$36$$35$$35$7205759403792867233$35$$35$dj9D) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E$35$$35$k_$35$$35$1738 lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867235$35$$35$dj9F$35$$35$k_$35$$35$1738 lq_anf$36$$35$$35$7205759403792867235$35$$35$dj9F) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G$35$$35$k_$35$$35$1738 lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867237$35$$35$dj9H$35$$35$k_$35$$35$1738 lq_anf$36$$35$$35$7205759403792867237$35$$35$dj9H) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867238$35$$35$dj9I$35$$35$k_$35$$35$1738 lq_anf$36$$35$$35$7205759403792867238$35$$35$dj9I) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867239$35$$35$dj9J$35$$35$k_$35$$35$1738 lq_anf$36$$35$$35$7205759403792867239$35$$35$dj9J) (= lq_karg$36$residual$35$$35$aiNU$35$$35$k_$35$$35$1738 residual$35$$35$aiNU) (= lq_karg$36$t$35$$35$aiNT$35$$35$k_$35$$35$1738 t$35$$35$aiNT) (= lq_karg$36$ts$35$$35$aiNR$35$$35$k_$35$$35$1738 ts$35$$35$aiNR) (= lq_karg$36$x$35$$35$aiNN$35$$35$k_$35$$35$1738 x$35$$35$aiNN) (exists ((VV$35$$35$F$35$$35$450 Map) (lq_tmp$36$x$35$$35$1718 Map)) (and (exists ((lq_karg$36$ds_dj4L$35$$35$k_$35$$35$1550 Int) (lq_karg$36$t$35$$35$aiNT$35$$35$k_$35$$35$1550 Int) (lq_karg$36$x$35$$35$aiNN$35$$35$k_$35$$35$1550 Int) (lq_karg$36$ds_dj4M$35$$35$k_$35$$35$1550 Int) (lq_karg$36$VV$35$$35$1549$35$$35$k_$35$$35$1550 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867227$35$$35$dj9x$35$$35$k_$35$$35$1550 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t$35$$35$k_$35$$35$1550 Int) (lq_karg$36$ds_dj4J$35$$35$k_$35$$35$1550 Int) (lq_karg$36$ds_dj4K$35$$35$k_$35$$35$1550 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867228$35$$35$dj9y$35$$35$k_$35$$35$1550 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u$35$$35$k_$35$$35$1550 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867226$35$$35$dj9w$35$$35$k_$35$$35$1550 Int) (lq_karg$36$ds_dj4a$35$$35$k_$35$$35$1550 Int) (lq_karg$36$ts$35$$35$aiNR$35$$35$k_$35$$35$1550 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867230$35$$35$dj9A$35$$35$k_$35$$35$1550 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867229$35$$35$dj9z$35$$35$k_$35$$35$1550 Int)) (and (= lq_karg$36$VV$35$$35$1549$35$$35$k_$35$$35$1550 VV$35$$35$F$35$$35$450) (= lq_karg$36$ds_dj4J$35$$35$k_$35$$35$1550 ds_dj4J) (= lq_karg$36$ds_dj4K$35$$35$k_$35$$35$1550 ds_dj4K) (= lq_karg$36$ds_dj4L$35$$35$k_$35$$35$1550 ds_dj4L) (= lq_karg$36$ds_dj4M$35$$35$k_$35$$35$1550 ds_dj4M) (= lq_karg$36$ds_dj4a$35$$35$k_$35$$35$1550 ds_dj4a) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t$35$$35$k_$35$$35$1550 lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u$35$$35$k_$35$$35$1550 lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867226$35$$35$dj9w$35$$35$k_$35$$35$1550 lq_anf$36$$35$$35$7205759403792867226$35$$35$dj9w) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867227$35$$35$dj9x$35$$35$k_$35$$35$1550 lq_anf$36$$35$$35$7205759403792867227$35$$35$dj9x) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867228$35$$35$dj9y$35$$35$k_$35$$35$1550 lq_anf$36$$35$$35$7205759403792867228$35$$35$dj9y) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867229$35$$35$dj9z$35$$35$k_$35$$35$1550 lq_anf$36$$35$$35$7205759403792867229$35$$35$dj9z) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867230$35$$35$dj9A$35$$35$k_$35$$35$1550 lq_anf$36$$35$$35$7205759403792867230$35$$35$dj9A) (= lq_karg$36$t$35$$35$aiNT$35$$35$k_$35$$35$1550 t$35$$35$aiNT) (= lq_karg$36$ts$35$$35$aiNR$35$$35$k_$35$$35$1550 ts$35$$35$aiNR) (= lq_karg$36$x$35$$35$aiNN$35$$35$k_$35$$35$1550 x$35$$35$aiNN) (exists ((VV$35$$35$F$35$$35$447 Map)) (and (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867232$35$$35$dj9C$35$$35$k_$35$$35$1729 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867238$35$$35$dj9I$35$$35$k_$35$$35$1729 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G$35$$35$k_$35$$35$1729 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867230$35$$35$dj9A$35$$35$k_$35$$35$1729 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E$35$$35$k_$35$$35$1729 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867229$35$$35$dj9z$35$$35$k_$35$$35$1729 Int) (lq_karg$36$ts$35$$35$aiNR$35$$35$k_$35$$35$1729 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867239$35$$35$dj9J$35$$35$k_$35$$35$1729 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867235$35$$35$dj9F$35$$35$k_$35$$35$1729 Int) (lq_karg$36$x$35$$35$aiNN$35$$35$k_$35$$35$1729 Int) (lq_karg$36$ds_dj4K$35$$35$k_$35$$35$1729 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867237$35$$35$dj9H$35$$35$k_$35$$35$1729 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t$35$$35$k_$35$$35$1729 Int) (lq_karg$36$ds_dj4M$35$$35$k_$35$$35$1729 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867233$35$$35$dj9D$35$$35$k_$35$$35$1729 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867227$35$$35$dj9x$35$$35$k_$35$$35$1729 Int) (lq_karg$36$ds_dj4J$35$$35$k_$35$$35$1729 Int) (lq_karg$36$VV$35$$35$1728$35$$35$k_$35$$35$1729 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867226$35$$35$dj9w$35$$35$k_$35$$35$1729 Int) (lq_karg$36$ds_dj4a$35$$35$k_$35$$35$1729 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867228$35$$35$dj9y$35$$35$k_$35$$35$1729 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u$35$$35$k_$35$$35$1729 Int) (lq_karg$36$t$35$$35$aiNT$35$$35$k_$35$$35$1729 Int) (lq_karg$36$ds_dj4L$35$$35$k_$35$$35$1729 Int) (lq_karg$36$residual$35$$35$aiNU$35$$35$k_$35$$35$1729 Int)) (and (= lq_karg$36$VV$35$$35$1728$35$$35$k_$35$$35$1729 VV$35$$35$F$35$$35$447) (= lq_karg$36$ds_dj4J$35$$35$k_$35$$35$1729 ds_dj4J) (= lq_karg$36$ds_dj4K$35$$35$k_$35$$35$1729 ds_dj4K) (= lq_karg$36$ds_dj4L$35$$35$k_$35$$35$1729 ds_dj4L) (= lq_karg$36$ds_dj4M$35$$35$k_$35$$35$1729 ds_dj4M) (= lq_karg$36$ds_dj4a$35$$35$k_$35$$35$1729 ds_dj4a) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867226$35$$35$dj9w$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867226$35$$35$dj9w) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867227$35$$35$dj9x$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867227$35$$35$dj9x) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867228$35$$35$dj9y$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867228$35$$35$dj9y) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867229$35$$35$dj9z$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867229$35$$35$dj9z) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867230$35$$35$dj9A$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867230$35$$35$dj9A) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867232$35$$35$dj9C$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867232$35$$35$dj9C) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867233$35$$35$dj9D$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867233$35$$35$dj9D) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867235$35$$35$dj9F$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867235$35$$35$dj9F) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867237$35$$35$dj9H$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867237$35$$35$dj9H) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867238$35$$35$dj9I$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867238$35$$35$dj9I) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867239$35$$35$dj9J$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867239$35$$35$dj9J) (= lq_karg$36$residual$35$$35$aiNU$35$$35$k_$35$$35$1729 residual$35$$35$aiNU) (= lq_karg$36$t$35$$35$aiNT$35$$35$k_$35$$35$1729 t$35$$35$aiNT) (= lq_karg$36$ts$35$$35$aiNR$35$$35$k_$35$$35$1729 ts$35$$35$aiNR) (= lq_karg$36$x$35$$35$aiNN$35$$35$k_$35$$35$1729 x$35$$35$aiNN) (exists ((VV$35$$35$F$35$$35$444 Map)) (and (= VV$35$$35$F$35$$35$444 lq_anf$36$$35$$35$7205759403792867239$35$$35$dj9J) (= VV$35$$35$F$35$$35$444 (smt_map_cup lq_anf$36$$35$$35$7205759403792867237$35$$35$dj9H lq_anf$36$$35$$35$7205759403792867238$35$$35$dj9I)) (= lq_karg$36$VV$35$$35$1728$35$$35$k_$35$$35$1729 VV$35$$35$F$35$$35$444) (= lq_karg$36$ds_dj4J$35$$35$k_$35$$35$1729 ds_dj4J) (= lq_karg$36$ds_dj4K$35$$35$k_$35$$35$1729 ds_dj4K) (= lq_karg$36$ds_dj4L$35$$35$k_$35$$35$1729 ds_dj4L) (= lq_karg$36$ds_dj4M$35$$35$k_$35$$35$1729 ds_dj4M) (= lq_karg$36$ds_dj4a$35$$35$k_$35$$35$1729 ds_dj4a) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867226$35$$35$dj9w$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867226$35$$35$dj9w) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867227$35$$35$dj9x$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867227$35$$35$dj9x) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867228$35$$35$dj9y$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867228$35$$35$dj9y) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867229$35$$35$dj9z$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867229$35$$35$dj9z) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867230$35$$35$dj9A$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867230$35$$35$dj9A) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867232$35$$35$dj9C$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867232$35$$35$dj9C) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867233$35$$35$dj9D$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867233$35$$35$dj9D) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867235$35$$35$dj9F$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867235$35$$35$dj9F) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867237$35$$35$dj9H$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867237$35$$35$dj9H) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867238$35$$35$dj9I$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867238$35$$35$dj9I) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867239$35$$35$dj9J$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867239$35$$35$dj9J) (= lq_karg$36$residual$35$$35$aiNU$35$$35$k_$35$$35$1729 residual$35$$35$aiNU) (= lq_karg$36$t$35$$35$aiNT$35$$35$k_$35$$35$1729 t$35$$35$aiNT) (= lq_karg$36$ts$35$$35$aiNR$35$$35$k_$35$$35$1729 ts$35$$35$aiNR) (= lq_karg$36$x$35$$35$aiNN$35$$35$k_$35$$35$1729 x$35$$35$aiNN))))) (= lq_karg$36$VV$35$$35$1549$35$$35$k_$35$$35$1550 VV$35$$35$F$35$$35$447) (= lq_karg$36$ds_dj4J$35$$35$k_$35$$35$1550 ds_dj4J) (= lq_karg$36$ds_dj4K$35$$35$k_$35$$35$1550 ds_dj4K) (= lq_karg$36$ds_dj4L$35$$35$k_$35$$35$1550 ds_dj4L) (= lq_karg$36$ds_dj4M$35$$35$k_$35$$35$1550 ds_dj4M) (= lq_karg$36$ds_dj4a$35$$35$k_$35$$35$1550 ds_dj4a) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t$35$$35$k_$35$$35$1550 lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u$35$$35$k_$35$$35$1550 lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867226$35$$35$dj9w$35$$35$k_$35$$35$1550 lq_anf$36$$35$$35$7205759403792867226$35$$35$dj9w) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867227$35$$35$dj9x$35$$35$k_$35$$35$1550 lq_anf$36$$35$$35$7205759403792867227$35$$35$dj9x) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867228$35$$35$dj9y$35$$35$k_$35$$35$1550 lq_anf$36$$35$$35$7205759403792867228$35$$35$dj9y) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867229$35$$35$dj9z$35$$35$k_$35$$35$1550 lq_anf$36$$35$$35$7205759403792867229$35$$35$dj9z) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867230$35$$35$dj9A$35$$35$k_$35$$35$1550 lq_anf$36$$35$$35$7205759403792867230$35$$35$dj9A) (= lq_karg$36$t$35$$35$aiNT$35$$35$k_$35$$35$1550 t$35$$35$aiNT) (= lq_karg$36$ts$35$$35$aiNR$35$$35$k_$35$$35$1550 ts$35$$35$aiNR) (= lq_karg$36$x$35$$35$aiNN$35$$35$k_$35$$35$1550 x$35$$35$aiNN))))) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867232$35$$35$dj9C$35$$35$k_$35$$35$1729 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867238$35$$35$dj9I$35$$35$k_$35$$35$1729 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G$35$$35$k_$35$$35$1729 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867230$35$$35$dj9A$35$$35$k_$35$$35$1729 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E$35$$35$k_$35$$35$1729 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867229$35$$35$dj9z$35$$35$k_$35$$35$1729 Int) (lq_karg$36$ts$35$$35$aiNR$35$$35$k_$35$$35$1729 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867239$35$$35$dj9J$35$$35$k_$35$$35$1729 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867235$35$$35$dj9F$35$$35$k_$35$$35$1729 Int) (lq_karg$36$x$35$$35$aiNN$35$$35$k_$35$$35$1729 Int) (lq_karg$36$ds_dj4K$35$$35$k_$35$$35$1729 Int) (lq_tmp$36$x$35$$35$1732 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867237$35$$35$dj9H$35$$35$k_$35$$35$1729 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t$35$$35$k_$35$$35$1729 Int) (lq_karg$36$ds_dj4M$35$$35$k_$35$$35$1729 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867233$35$$35$dj9D$35$$35$k_$35$$35$1729 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867227$35$$35$dj9x$35$$35$k_$35$$35$1729 Int) (lq_karg$36$ds_dj4J$35$$35$k_$35$$35$1729 Int) (lq_karg$36$VV$35$$35$1728$35$$35$k_$35$$35$1729 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867226$35$$35$dj9w$35$$35$k_$35$$35$1729 Int) (lq_karg$36$ds_dj4a$35$$35$k_$35$$35$1729 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867228$35$$35$dj9y$35$$35$k_$35$$35$1729 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u$35$$35$k_$35$$35$1729 Int) (lq_karg$36$t$35$$35$aiNT$35$$35$k_$35$$35$1729 Int) (lq_karg$36$ds_dj4L$35$$35$k_$35$$35$1729 Int) (lq_karg$36$residual$35$$35$aiNU$35$$35$k_$35$$35$1729 Int)) (and (= lq_karg$36$VV$35$$35$1728$35$$35$k_$35$$35$1729 lq_tmp$36$x$35$$35$1718) (= lq_karg$36$ds_dj4J$35$$35$k_$35$$35$1729 ds_dj4J) (= lq_karg$36$ds_dj4K$35$$35$k_$35$$35$1729 ds_dj4K) (= lq_karg$36$ds_dj4L$35$$35$k_$35$$35$1729 ds_dj4L) (= lq_karg$36$ds_dj4M$35$$35$k_$35$$35$1729 ds_dj4M) (= lq_karg$36$ds_dj4a$35$$35$k_$35$$35$1729 ds_dj4a) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867226$35$$35$dj9w$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867226$35$$35$dj9w) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867227$35$$35$dj9x$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867227$35$$35$dj9x) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867228$35$$35$dj9y$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867228$35$$35$dj9y) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867229$35$$35$dj9z$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867229$35$$35$dj9z) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867230$35$$35$dj9A$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867230$35$$35$dj9A) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867232$35$$35$dj9C$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867232$35$$35$dj9C) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867233$35$$35$dj9D$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867233$35$$35$dj9D) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867235$35$$35$dj9F$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867235$35$$35$dj9F) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867237$35$$35$dj9H$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867237$35$$35$dj9H) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867238$35$$35$dj9I$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867238$35$$35$dj9I) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867239$35$$35$dj9J$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867239$35$$35$dj9J) (= lq_karg$36$residual$35$$35$aiNU$35$$35$k_$35$$35$1729 residual$35$$35$aiNU) (= lq_karg$36$t$35$$35$aiNT$35$$35$k_$35$$35$1729 t$35$$35$aiNT) (= lq_karg$36$ts$35$$35$aiNR$35$$35$k_$35$$35$1729 ts$35$$35$aiNR) (= lq_karg$36$x$35$$35$aiNN$35$$35$k_$35$$35$1729 x$35$$35$aiNN) (= lq_tmp$36$x$35$$35$1732 lq_tmp$36$x$35$$35$1718) (exists ((VV$35$$35$F$35$$35$444 Map)) (and (= VV$35$$35$F$35$$35$444 lq_anf$36$$35$$35$7205759403792867239$35$$35$dj9J) (= VV$35$$35$F$35$$35$444 (smt_map_cup lq_anf$36$$35$$35$7205759403792867237$35$$35$dj9H lq_anf$36$$35$$35$7205759403792867238$35$$35$dj9I)) (= lq_karg$36$VV$35$$35$1728$35$$35$k_$35$$35$1729 VV$35$$35$F$35$$35$444) (= lq_karg$36$ds_dj4J$35$$35$k_$35$$35$1729 ds_dj4J) (= lq_karg$36$ds_dj4K$35$$35$k_$35$$35$1729 ds_dj4K) (= lq_karg$36$ds_dj4L$35$$35$k_$35$$35$1729 ds_dj4L) (= lq_karg$36$ds_dj4M$35$$35$k_$35$$35$1729 ds_dj4M) (= lq_karg$36$ds_dj4a$35$$35$k_$35$$35$1729 ds_dj4a) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867226$35$$35$dj9w$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867226$35$$35$dj9w) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867227$35$$35$dj9x$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867227$35$$35$dj9x) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867228$35$$35$dj9y$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867228$35$$35$dj9y) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867229$35$$35$dj9z$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867229$35$$35$dj9z) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867230$35$$35$dj9A$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867230$35$$35$dj9A) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867232$35$$35$dj9C$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867232$35$$35$dj9C) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867233$35$$35$dj9D$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867233$35$$35$dj9D) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867235$35$$35$dj9F$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867235$35$$35$dj9F) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867237$35$$35$dj9H$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867237$35$$35$dj9H) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867238$35$$35$dj9I$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867238$35$$35$dj9I) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867239$35$$35$dj9J$35$$35$k_$35$$35$1729 lq_anf$36$$35$$35$7205759403792867239$35$$35$dj9J) (= lq_karg$36$residual$35$$35$aiNU$35$$35$k_$35$$35$1729 residual$35$$35$aiNU) (= lq_karg$36$t$35$$35$aiNT$35$$35$k_$35$$35$1729 t$35$$35$aiNT) (= lq_karg$36$ts$35$$35$aiNR$35$$35$k_$35$$35$1729 ts$35$$35$aiNR) (= lq_karg$36$x$35$$35$aiNN$35$$35$k_$35$$35$1729 x$35$$35$aiNN))))) (= VV$35$$35$F$35$$35$450 lq_tmp$36$x$35$$35$1718) (= lq_karg$36$VV$35$$35$1737$35$$35$k_$35$$35$1738 VV$35$$35$F$35$$35$450) (= lq_karg$36$ds_dj4J$35$$35$k_$35$$35$1738 ds_dj4J) (= lq_karg$36$ds_dj4K$35$$35$k_$35$$35$1738 ds_dj4K) (= lq_karg$36$ds_dj4L$35$$35$k_$35$$35$1738 ds_dj4L) (= lq_karg$36$ds_dj4M$35$$35$k_$35$$35$1738 ds_dj4M) (= lq_karg$36$ds_dj4a$35$$35$k_$35$$35$1738 ds_dj4a) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t$35$$35$k_$35$$35$1738 lq_anf$36$$35$$35$7205759403792867223$35$$35$dj9t) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u$35$$35$k_$35$$35$1738 lq_anf$36$$35$$35$7205759403792867224$35$$35$dj9u) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867226$35$$35$dj9w$35$$35$k_$35$$35$1738 lq_anf$36$$35$$35$7205759403792867226$35$$35$dj9w) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867227$35$$35$dj9x$35$$35$k_$35$$35$1738 lq_anf$36$$35$$35$7205759403792867227$35$$35$dj9x) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867228$35$$35$dj9y$35$$35$k_$35$$35$1738 lq_anf$36$$35$$35$7205759403792867228$35$$35$dj9y) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867229$35$$35$dj9z$35$$35$k_$35$$35$1738 lq_anf$36$$35$$35$7205759403792867229$35$$35$dj9z) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867230$35$$35$dj9A$35$$35$k_$35$$35$1738 lq_anf$36$$35$$35$7205759403792867230$35$$35$dj9A) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867232$35$$35$dj9C$35$$35$k_$35$$35$1738 lq_anf$36$$35$$35$7205759403792867232$35$$35$dj9C) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867233$35$$35$dj9D$35$$35$k_$35$$35$1738 lq_anf$36$$35$$35$7205759403792867233$35$$35$dj9D) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E$35$$35$k_$35$$35$1738 lq_anf$36$$35$$35$7205759403792867234$35$$35$dj9E) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867235$35$$35$dj9F$35$$35$k_$35$$35$1738 lq_anf$36$$35$$35$7205759403792867235$35$$35$dj9F) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G$35$$35$k_$35$$35$1738 lq_anf$36$$35$$35$7205759403792867236$35$$35$dj9G) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867237$35$$35$dj9H$35$$35$k_$35$$35$1738 lq_anf$36$$35$$35$7205759403792867237$35$$35$dj9H) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867238$35$$35$dj9I$35$$35$k_$35$$35$1738 lq_anf$36$$35$$35$7205759403792867238$35$$35$dj9I) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867239$35$$35$dj9J$35$$35$k_$35$$35$1738 lq_anf$36$$35$$35$7205759403792867239$35$$35$dj9J) (= lq_karg$36$residual$35$$35$aiNU$35$$35$k_$35$$35$1738 residual$35$$35$aiNU) (= lq_karg$36$t$35$$35$aiNT$35$$35$k_$35$$35$1738 t$35$$35$aiNT) (= lq_karg$36$ts$35$$35$aiNR$35$$35$k_$35$$35$1738 ts$35$$35$aiNR) (= lq_karg$36$x$35$$35$aiNN$35$$35$k_$35$$35$1738 x$35$$35$aiNN))))) b$36$$35$$35$224 b$36$$35$$35$97 b$36$$35$$35$225 b$36$$35$$35$229 b$36$$35$$35$230 b$36$$35$$35$231 b$36$$35$$35$232 b$36$$35$$35$233 b$36$$35$$35$234 b$36$$35$$35$43 b$36$$35$$35$235 b$36$$35$$35$236 b$36$$35$$35$237 b$36$$35$$35$238 b$36$$35$$35$47 b$36$$35$$35$240 b$36$$35$$35$241 b$36$$35$$35$242 b$36$$35$$35$243 b$36$$35$$35$244 b$36$$35$$35$245 b$36$$35$$35$246 b$36$$35$$35$247 b$36$$35$$35$248 b$36$$35$$35$217 b$36$$35$$35$218 b$36$$35$$35$219 b$36$$35$$35$93 b$36$$35$$35$221 b$36$$35$$35$222 b$36$$35$$35$223))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$443 (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) ds_dj4a)) (apply$35$$35$0 (as Binomial.root Int) ds_dj4a) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) ds_dj4a)) (apply$35$$35$0 (as Binomial.root Int) ds_dj4a)))))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$224 b$36$$35$$35$97 b$36$$35$$35$225 b$36$$35$$35$229 b$36$$35$$35$230 b$36$$35$$35$231 b$36$$35$$35$232 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$2001 b$36$$35$$35$217 b$36$$35$$35$218 b$36$$35$$35$219 b$36$$35$$35$93 b$36$$35$$35$221 b$36$$35$$35$222 b$36$$35$$35$223))
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$475) 1)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$544 b$36$$35$$35$97 b$36$$35$$35$545 b$36$$35$$35$546 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$2003 b$36$$35$$35$93 b$36$$35$$35$541 b$36$$35$$35$542))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$92 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$448 b$36$$35$$35$97 b$36$$35$$35$449 b$36$$35$$35$450 b$36$$35$$35$451 b$36$$35$$35$43 b$36$$35$$35$427 b$36$$35$$35$428 b$36$$35$$35$429 b$36$$35$$35$47 b$36$$35$$35$435 b$36$$35$$35$436 b$36$$35$$35$2004 b$36$$35$$35$437 b$36$$35$$35$438 b$36$$35$$35$439 b$36$$35$$35$440 b$36$$35$$35$441 b$36$$35$$35$442 b$36$$35$$35$443 b$36$$35$$35$444 b$36$$35$$35$93 b$36$$35$$35$445 b$36$$35$$35$446 b$36$$35$$35$447))
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$188) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t$35$$35$aiOn) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj5Q)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3805 Map) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3805 Int) (lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3805 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3805 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3805 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3805 Bool) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3805 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3805 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3805 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3805 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3805 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3805 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3805 Bool) (lq_karg$36$VV$35$$35$3804$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3805 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3805 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3805 Int)) (and (= lq_karg$36$VV$35$$35$3804$35$$35$k_$35$$35$3805 VV$35$$35$F$35$$35$252) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867289$35$$35$djax) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867290$35$$35$djay) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA) (= lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3805 new$35$$35$aiOj) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3805 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3805 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3805 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3805 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3805 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3805 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3805 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3805 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3805 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3805 x2$35$$35$aiOe) (exists ((lq_tmp$36$x$35$$35$3790 Int) (VV$35$$35$F$35$$35$259 Int)) (and (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3799 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3799 Int) (lq_tmp$36$x$35$$35$3801 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3799 Bool) (lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3799 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3799 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3799 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3799 Int) (lq_karg$36$VV$35$$35$3798$35$$35$k_$35$$35$3799 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3799 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3799 Map) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3799 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3799 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3799 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3799 Int) (lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3799 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3799 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3799 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3799 Int)) (and (= lq_karg$36$VV$35$$35$3798$35$$35$k_$35$$35$3799 lq_tmp$36$x$35$$35$3790) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867289$35$$35$djax) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867290$35$$35$djay) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA) (= lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3799 new$35$$35$aiOj) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3799 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3799 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3799 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3799 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3799 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3799 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3799 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3799 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3799 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3799 x2$35$$35$aiOe) (= lq_tmp$36$x$35$$35$3801 lq_tmp$36$x$35$$35$3790) (exists ((VV$35$$35$F$35$$35$255 Int)) (and (apply$35$$35$1 (as is$36$Binomial.Node Int) VV$35$$35$F$35$$35$255) (= VV$35$$35$F$35$$35$255 new$35$$35$aiOj) (= VV$35$$35$F$35$$35$255 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x2$35$$35$aiOe) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) lq_anf$36$$35$$35$7205759403792867287$35$$35$djav)) (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$255) x2$35$$35$aiOe) (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$255) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$255)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$255) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$255)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$255))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$255) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (smt_map_sto (smt_map_def 0) x2$35$$35$aiOe (+ 1 (smt_map_sel (smt_map_def 0) x2$35$$35$aiOe))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x2$35$$35$aiOe) (- lq_anf$36$$35$$35$7205759403792867284$35$$35$djas 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau)) (- lq_anf$36$$35$$35$7205759403792867287$35$$35$djav (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$255) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$255)) (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) VV$35$$35$F$35$$35$255) x2$35$$35$aiOe) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$255) 0) (= lq_karg$36$VV$35$$35$3798$35$$35$k_$35$$35$3799 VV$35$$35$F$35$$35$255) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867289$35$$35$djax) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867290$35$$35$djay) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA) (= lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3799 new$35$$35$aiOj) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3799 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3799 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3799 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3799 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3799 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3799 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3799 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3799 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3799 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3799 x2$35$$35$aiOe))))) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3778 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3778 Map) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3778 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3778 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3778 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3778 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3778 Int) (lq_karg$36$VV$35$$35$3777$35$$35$k_$35$$35$3778 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3778 Bool) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3778 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3778 Map) (lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3778 Int) (lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3778 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3778 Int) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3778 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3778 Bool)) (and (= lq_karg$36$VV$35$$35$3777$35$$35$k_$35$$35$3778 VV$35$$35$F$35$$35$259) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867289$35$$35$djax) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867290$35$$35$djay) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA) (= lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3778 new$35$$35$aiOj) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3778 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3778 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3778 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3778 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3778 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3778 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3778 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3778 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3778 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3778 x2$35$$35$aiOe) (exists ((VV$35$$35$F$35$$35$257 Int)) (and (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3799 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3799 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3799 Bool) (lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3799 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3799 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3799 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3799 Int) (lq_karg$36$VV$35$$35$3798$35$$35$k_$35$$35$3799 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3799 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3799 Map) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3799 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3799 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3799 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3799 Int) (lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3799 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3799 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3799 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3799 Int)) (and (= lq_karg$36$VV$35$$35$3798$35$$35$k_$35$$35$3799 VV$35$$35$F$35$$35$257) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867289$35$$35$djax) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867290$35$$35$djay) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA) (= lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3799 new$35$$35$aiOj) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3799 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3799 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3799 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3799 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3799 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3799 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3799 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3799 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3799 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3799 x2$35$$35$aiOe) (exists ((VV$35$$35$F$35$$35$255 Int)) (and (apply$35$$35$1 (as is$36$Binomial.Node Int) VV$35$$35$F$35$$35$255) (= VV$35$$35$F$35$$35$255 new$35$$35$aiOj) (= VV$35$$35$F$35$$35$255 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x2$35$$35$aiOe) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) lq_anf$36$$35$$35$7205759403792867287$35$$35$djav)) (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$255) x2$35$$35$aiOe) (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$255) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$255)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$255) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$255)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$255))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$255) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (smt_map_sto (smt_map_def 0) x2$35$$35$aiOe (+ 1 (smt_map_sel (smt_map_def 0) x2$35$$35$aiOe))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x2$35$$35$aiOe) (- lq_anf$36$$35$$35$7205759403792867284$35$$35$djas 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau)) (- lq_anf$36$$35$$35$7205759403792867287$35$$35$djav (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$255) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$255)) (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) VV$35$$35$F$35$$35$255) x2$35$$35$aiOe) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$255) 0) (= lq_karg$36$VV$35$$35$3798$35$$35$k_$35$$35$3799 VV$35$$35$F$35$$35$255) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867289$35$$35$djax) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867290$35$$35$djay) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA) (= lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3799 new$35$$35$aiOj) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3799 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3799 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3799 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3799 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3799 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3799 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3799 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3799 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3799 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3799 x2$35$$35$aiOe))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$257) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$257)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$257) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$257)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$257))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$257) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$257)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$257) 0) (= lq_karg$36$VV$35$$35$3777$35$$35$k_$35$$35$3778 VV$35$$35$F$35$$35$257) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867289$35$$35$djax) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867290$35$$35$djay) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA) (= lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3778 new$35$$35$aiOj) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3778 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3778 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3778 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3778 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3778 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3778 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3778 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3778 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3778 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3778 x2$35$$35$aiOe))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_tmp$36$x$35$$35$3790) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$3790)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$3790) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$3790)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$3790))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$3790) (apply$35$$35$0 (as Binomial.rank Int) lq_tmp$36$x$35$$35$3790)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$3790) 0) (= VV$35$$35$F$35$$35$259 lq_tmp$36$x$35$$35$3790) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$259) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$259)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$259) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$259)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$259))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$259) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$259)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$259) 0) (= lq_karg$36$VV$35$$35$3804$35$$35$k_$35$$35$3805 VV$35$$35$F$35$$35$259) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867289$35$$35$djax) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867290$35$$35$djay) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA) (= lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3805 new$35$$35$aiOj) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3805 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3805 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3805 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3805 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3805 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3805 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3805 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3805 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3805 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3805 x2$35$$35$aiOe))))) b$36$$35$$35$384 b$36$$35$$35$97 b$36$$35$$35$386 b$36$$35$$35$387 b$36$$35$$35$388 b$36$$35$$35$389 b$36$$35$$35$390 b$36$$35$$35$391 b$36$$35$$35$392 b$36$$35$$35$393 b$36$$35$$35$394 b$36$$35$$35$43 b$36$$35$$35$395 b$36$$35$$35$396 b$36$$35$$35$397 b$36$$35$$35$47 b$36$$35$$35$399 b$36$$35$$35$400 b$36$$35$$35$401 b$36$$35$$35$402 b$36$$35$$35$403 b$36$$35$$35$404 b$36$$35$$35$405 b$36$$35$$35$374 b$36$$35$$35$406 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$252) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$252)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$252) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$252)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$252))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$252) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$252)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$252) 0)) b$36$$35$$35$375 b$36$$35$$35$376 b$36$$35$$35$377 b$36$$35$$35$379 b$36$$35$$35$380 b$36$$35$$35$93 b$36$$35$$35$381 b$36$$35$$35$382 b$36$$35$$35$383))
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$252) (+ (apply$35$$35$0 (as Binomial.rank Int) t1$35$$35$aiO8) 1))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$224 b$36$$35$$35$97 b$36$$35$$35$225 b$36$$35$$35$229 b$36$$35$$35$230 b$36$$35$$35$231 b$36$$35$$35$232 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$217 b$36$$35$$35$218 b$36$$35$$35$1530 b$36$$35$$35$219 b$36$$35$$35$2011 b$36$$35$$35$93 b$36$$35$$35$221 b$36$$35$$35$222 b$36$$35$$35$223))
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$11276) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$476))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$43 b$36$$35$$35$461 b$36$$35$$35$462 b$36$$35$$35$47 b$36$$35$$35$463 b$36$$35$$35$464 b$36$$35$$35$465 b$36$$35$$35$466 b$36$$35$$35$467 b$36$$35$$35$469 b$36$$35$$35$470 b$36$$35$$35$471 b$36$$35$$35$2012 b$36$$35$$35$93))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$157 (+ 1 (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867321$35$$35$djb3)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$448 b$36$$35$$35$97 b$36$$35$$35$449 b$36$$35$$35$450 b$36$$35$$35$451 b$36$$35$$35$43 b$36$$35$$35$427 b$36$$35$$35$428 b$36$$35$$35$429 b$36$$35$$35$47 b$36$$35$$35$435 b$36$$35$$35$436 b$36$$35$$35$437 b$36$$35$$35$438 b$36$$35$$35$439 b$36$$35$$35$440 b$36$$35$$35$441 b$36$$35$$35$442 b$36$$35$$35$443 b$36$$35$$35$444 b$36$$35$$35$93 b$36$$35$$35$445 b$36$$35$$35$2013 b$36$$35$$35$446 b$36$$35$$35$447))
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$189) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t$35$$35$aiOn) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj5Q)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3805 Map) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3805 Int) (lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3805 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3805 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3805 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3805 Bool) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3805 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3805 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3805 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3805 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3805 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3805 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3805 Bool) (lq_karg$36$VV$35$$35$3804$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3805 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3805 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3805 Int)) (and (= lq_karg$36$VV$35$$35$3804$35$$35$k_$35$$35$3805 VV$35$$35$F$35$$35$253) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867289$35$$35$djax) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867290$35$$35$djay) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA) (= lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3805 new$35$$35$aiOj) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3805 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3805 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3805 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3805 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3805 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3805 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3805 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3805 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3805 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3805 x2$35$$35$aiOe) (exists ((lq_tmp$36$x$35$$35$3790 Int) (VV$35$$35$F$35$$35$259 Int)) (and (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3799 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3799 Int) (lq_tmp$36$x$35$$35$3801 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3799 Bool) (lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3799 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3799 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3799 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3799 Int) (lq_karg$36$VV$35$$35$3798$35$$35$k_$35$$35$3799 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3799 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3799 Map) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3799 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3799 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3799 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3799 Int) (lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3799 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3799 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3799 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3799 Int)) (and (= lq_karg$36$VV$35$$35$3798$35$$35$k_$35$$35$3799 lq_tmp$36$x$35$$35$3790) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867289$35$$35$djax) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867290$35$$35$djay) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA) (= lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3799 new$35$$35$aiOj) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3799 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3799 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3799 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3799 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3799 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3799 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3799 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3799 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3799 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3799 x2$35$$35$aiOe) (= lq_tmp$36$x$35$$35$3801 lq_tmp$36$x$35$$35$3790) (exists ((VV$35$$35$F$35$$35$255 Int)) (and (apply$35$$35$1 (as is$36$Binomial.Node Int) VV$35$$35$F$35$$35$255) (= VV$35$$35$F$35$$35$255 new$35$$35$aiOj) (= VV$35$$35$F$35$$35$255 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x2$35$$35$aiOe) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) lq_anf$36$$35$$35$7205759403792867287$35$$35$djav)) (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$255) x2$35$$35$aiOe) (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$255) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$255)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$255) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$255)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$255))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$255) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (smt_map_sto (smt_map_def 0) x2$35$$35$aiOe (+ 1 (smt_map_sel (smt_map_def 0) x2$35$$35$aiOe))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x2$35$$35$aiOe) (- lq_anf$36$$35$$35$7205759403792867284$35$$35$djas 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau)) (- lq_anf$36$$35$$35$7205759403792867287$35$$35$djav (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$255) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$255)) (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) VV$35$$35$F$35$$35$255) x2$35$$35$aiOe) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$255) 0) (= lq_karg$36$VV$35$$35$3798$35$$35$k_$35$$35$3799 VV$35$$35$F$35$$35$255) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867289$35$$35$djax) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867290$35$$35$djay) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA) (= lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3799 new$35$$35$aiOj) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3799 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3799 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3799 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3799 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3799 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3799 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3799 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3799 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3799 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3799 x2$35$$35$aiOe))))) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3778 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3778 Map) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3778 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3778 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3778 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3778 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3778 Int) (lq_karg$36$VV$35$$35$3777$35$$35$k_$35$$35$3778 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3778 Bool) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3778 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3778 Map) (lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3778 Int) (lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3778 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3778 Int) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3778 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3778 Bool)) (and (= lq_karg$36$VV$35$$35$3777$35$$35$k_$35$$35$3778 VV$35$$35$F$35$$35$259) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867289$35$$35$djax) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867290$35$$35$djay) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA) (= lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3778 new$35$$35$aiOj) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3778 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3778 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3778 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3778 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3778 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3778 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3778 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3778 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3778 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3778 x2$35$$35$aiOe) (exists ((VV$35$$35$F$35$$35$257 Int)) (and (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3799 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3799 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3799 Bool) (lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3799 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3799 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3799 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3799 Int) (lq_karg$36$VV$35$$35$3798$35$$35$k_$35$$35$3799 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3799 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3799 Map) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3799 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3799 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3799 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3799 Int) (lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3799 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3799 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3799 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3799 Int)) (and (= lq_karg$36$VV$35$$35$3798$35$$35$k_$35$$35$3799 VV$35$$35$F$35$$35$257) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867289$35$$35$djax) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867290$35$$35$djay) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA) (= lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3799 new$35$$35$aiOj) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3799 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3799 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3799 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3799 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3799 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3799 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3799 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3799 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3799 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3799 x2$35$$35$aiOe) (exists ((VV$35$$35$F$35$$35$255 Int)) (and (apply$35$$35$1 (as is$36$Binomial.Node Int) VV$35$$35$F$35$$35$255) (= VV$35$$35$F$35$$35$255 new$35$$35$aiOj) (= VV$35$$35$F$35$$35$255 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x2$35$$35$aiOe) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) lq_anf$36$$35$$35$7205759403792867287$35$$35$djav)) (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$255) x2$35$$35$aiOe) (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$255) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$255)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$255) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$255)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$255))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$255) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (smt_map_sto (smt_map_def 0) x2$35$$35$aiOe (+ 1 (smt_map_sel (smt_map_def 0) x2$35$$35$aiOe))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x2$35$$35$aiOe) (- lq_anf$36$$35$$35$7205759403792867284$35$$35$djas 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau)) (- lq_anf$36$$35$$35$7205759403792867287$35$$35$djav (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$255) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$255)) (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) VV$35$$35$F$35$$35$255) x2$35$$35$aiOe) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$255) 0) (= lq_karg$36$VV$35$$35$3798$35$$35$k_$35$$35$3799 VV$35$$35$F$35$$35$255) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867289$35$$35$djax) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867290$35$$35$djay) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA) (= lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3799 new$35$$35$aiOj) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3799 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3799 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3799 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3799 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3799 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3799 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3799 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3799 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3799 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3799 x2$35$$35$aiOe))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$257) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$257)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$257) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$257)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$257))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$257) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$257)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$257) 0) (= lq_karg$36$VV$35$$35$3777$35$$35$k_$35$$35$3778 VV$35$$35$F$35$$35$257) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867289$35$$35$djax) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867290$35$$35$djay) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA) (= lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3778 new$35$$35$aiOj) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3778 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3778 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3778 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3778 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3778 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3778 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3778 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3778 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3778 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3778 x2$35$$35$aiOe))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_tmp$36$x$35$$35$3790) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$3790)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$3790) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$3790)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$3790))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$3790) (apply$35$$35$0 (as Binomial.rank Int) lq_tmp$36$x$35$$35$3790)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$3790) 0) (= VV$35$$35$F$35$$35$259 lq_tmp$36$x$35$$35$3790) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$259) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$259)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$259) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$259)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$259))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$259) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$259)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$259) 0) (= lq_karg$36$VV$35$$35$3804$35$$35$k_$35$$35$3805 VV$35$$35$F$35$$35$259) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867289$35$$35$djax) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867290$35$$35$djay) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA) (= lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3805 new$35$$35$aiOj) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3805 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3805 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3805 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3805 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3805 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3805 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3805 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3805 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3805 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3805 x2$35$$35$aiOe))))) b$36$$35$$35$384 b$36$$35$$35$97 b$36$$35$$35$386 b$36$$35$$35$387 b$36$$35$$35$388 b$36$$35$$35$389 b$36$$35$$35$390 b$36$$35$$35$391 b$36$$35$$35$392 b$36$$35$$35$393 b$36$$35$$35$394 b$36$$35$$35$43 b$36$$35$$35$395 b$36$$35$$35$396 b$36$$35$$35$397 b$36$$35$$35$47 b$36$$35$$35$399 b$36$$35$$35$400 b$36$$35$$35$401 b$36$$35$$35$402 b$36$$35$$35$403 b$36$$35$$35$404 b$36$$35$$35$405 b$36$$35$$35$374 b$36$$35$$35$406 b$36$$35$$35$375 b$36$$35$$35$376 b$36$$35$$35$377 b$36$$35$$35$379 b$36$$35$$35$380 b$36$$35$$35$93 b$36$$35$$35$381 b$36$$35$$35$382 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$253) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$253)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$253) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$253)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$253))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$253) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$253)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$253) 0)) b$36$$35$$35$383))
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$253) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) t1$35$$35$aiO8) (apply$35$$35$3 (as Binomial.treeElts Int) t2$35$$35$aiOd)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (= ts$39$$35$$35$aiUV (apply$35$$35$0 (as snd Int) ds_dj1U)) (>= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV) 0) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3101 Int) (lq_tmp$36$x$35$$35$3102 Int) (lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3101 Int) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3101 Int) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3101 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3101 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3101 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3101 Int) (lq_karg$36$VV$35$$35$3100$35$$35$k_$35$$35$3101 Int) (lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3101 Int) (lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3101 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3101 Int)) (and (= lq_karg$36$VV$35$$35$3100$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3101 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3101 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3101 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3101 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3101 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3101 ts$39$$35$$35$aiUV) (= lq_tmp$36$x$35$$35$3102 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (exists ((VV$35$$35$10224 Int) (VV$35$$35$F$35$$35$344 Int)) (and (= VV$35$$35$10224 t$35$$35$aiOu) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10224) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10224)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10224) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10224)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10224))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10224) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10224)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10224) 0) (= lq_karg$36$VV$35$$35$3100$35$$35$k_$35$$35$3101 VV$35$$35$F$35$$35$344) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3101 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3101 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3101 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3101 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3101 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3101 ts$39$$35$$35$aiUV))))) (exists ((lq_karg$36$VV$35$$35$3111$35$$35$k_$35$$35$3112 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3112 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3112 Int) (lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3112 Int) (lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3112 Int) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3112 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3112 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3112 Int) (lq_tmp$36$x$35$$35$3113 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3112 Int) (lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3112 Int) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3112 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3112 Int)) (and (= lq_karg$36$VV$35$$35$3111$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3112 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3112 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3112 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3112 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3112 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3112 ts$39$$35$$35$aiUV) (= lq_tmp$36$x$35$$35$3113 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (exists ((VV$35$$35$10219 Int) (VV$35$$35$F$35$$35$343 Int)) (and (= VV$35$$35$10219 (apply$35$$35$0 (as fst Int) ds_dj1U)) (= VV$35$$35$10219 t$39$$35$$35$aiUT) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10219) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10219)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10219) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10219)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10219))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10219) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10219)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10219) 0) (= lq_karg$36$VV$35$$35$3111$35$$35$k_$35$$35$3112 VV$35$$35$F$35$$35$343) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3112 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3112 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3112 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3112 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3112 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3112 ts$39$$35$$35$aiUV))))) (= t$39$$35$$35$aiUT (apply$35$$35$0 (as fst Int) ds_dj1U))) b$36$$35$$35$97 (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV) 0) (= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV) 0) (>= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV) 0) (<= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV))) (= lq_anf$36$$35$$35$7205759403792867267$35$$35$djab (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aiOu)) (= lq_anf$36$$35$$35$7205759403792867268$35$$35$djac (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT)) b$36$$35$$35$325 b$36$$35$$35$357 b$36$$35$$35$326 b$36$$35$$35$358 b$36$$35$$35$359 b$36$$35$$35$360 b$36$$35$$35$361 b$36$$35$$35$330 b$36$$35$$35$43 b$36$$35$$35$331 b$36$$35$$35$363 b$36$$35$$35$332 b$36$$35$$35$333 b$36$$35$$35$334 b$36$$35$$35$47 b$36$$35$$35$340 b$36$$35$$35$341 b$36$$35$$35$342 b$36$$35$$35$343 b$36$$35$$35$344 b$36$$35$$35$93 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) t$39$$35$$35$aiUT) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$39$$35$$35$aiUT)) (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$39$$35$$35$aiUT)) (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) t$39$$35$$35$aiUT) (apply$35$$35$0 (as Binomial.rank Int) t$39$$35$$35$aiUT)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) t$39$$35$$35$aiUT) 0)) b$36$$35$$35$2015))
(push 1)
(assert (not (= (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$317)) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as snd Int) VV$35$$35$F$35$$35$317))) (apply$35$$35$3 (as Binomial.treeListElts Int) ds_dj1J))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$320 b$36$$35$$35$2016 b$36$$35$$35$97 b$36$$35$$35$321 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$1360 b$36$$35$$35$1362 b$36$$35$$35$314 b$36$$35$$35$315 b$36$$35$$35$316 b$36$$35$$35$93 b$36$$35$$35$318 b$36$$35$$35$319))
(push 1)
(assert (not (> (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$2652) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$381))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$VV$35$$35$5489$35$$35$k_$35$$35$5490 Int)) (and (= lq_karg$36$VV$35$$35$5489$35$$35$k_$35$$35$5490 VV$35$$35$F$35$$35$94) (exists ((lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt Int) (VV$35$$35$F$35$$35$96 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) 0)) (= lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) (smt_map_def 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) (smt_map_def 0)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) 0) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) (smt_map_def 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt)) (apply$35$$35$1 (as is$36$Binomial.Heap Int) VV$35$$35$F$35$$35$96) (= VV$35$$35$F$35$$35$96 (apply$35$$35$0 (as Binomial.Heap Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt)) (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$F$35$$35$96) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt)) (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$F$35$$35$96) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$96))) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$96) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt)) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$96) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$96))) (= (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$96) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Heap$35$$35$1 Int) VV$35$$35$F$35$$35$96) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) (>= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$96) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$96)) (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$96)) (= lq_karg$36$VV$35$$35$5489$35$$35$k_$35$$35$5490 VV$35$$35$F$35$$35$96))))) b$36$$35$$35$97 (and (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$F$35$$35$94) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$94))) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$94) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$94))) (>= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$94) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$94)) (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$94))) b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$93))
(push 1)
(assert (not (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$F$35$$35$94) (smt_map_def 0))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$2018 b$36$$35$$35$43 b$36$$35$$35$461 b$36$$35$$35$462 b$36$$35$$35$47 b$36$$35$$35$463 b$36$$35$$35$464 b$36$$35$$35$465 b$36$$35$$35$466 b$36$$35$$35$467 b$36$$35$$35$469 b$36$$35$$35$470 b$36$$35$$35$471 b$36$$35$$35$93))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$158 1)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$384 b$36$$35$$35$416 b$36$$35$$35$97 b$36$$35$$35$417 b$36$$35$$35$386 b$36$$35$$35$418 b$36$$35$$35$387 b$36$$35$$35$419 b$36$$35$$35$2019 b$36$$35$$35$388 b$36$$35$$35$420 b$36$$35$$35$389 b$36$$35$$35$421 b$36$$35$$35$390 b$36$$35$$35$422 b$36$$35$$35$391 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$374 b$36$$35$$35$375 b$36$$35$$35$376 b$36$$35$$35$408 b$36$$35$$35$377 b$36$$35$$35$409 b$36$$35$$35$410 b$36$$35$$35$379 b$36$$35$$35$411 b$36$$35$$35$380 b$36$$35$$35$412 b$36$$35$$35$93 b$36$$35$$35$381 b$36$$35$$35$413 b$36$$35$$35$382 b$36$$35$$35$383 b$36$$35$$35$415))
(push 1)
(assert (not VV$35$$35$F$35$$35$222))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3805 Map) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3805 Int) (lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3805 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3805 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3805 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3805 Bool) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3805 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3805 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3805 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3805 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3805 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3805 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3805 Bool) (lq_karg$36$VV$35$$35$3804$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3805 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3805 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3805 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3805 Int)) (and (= lq_karg$36$VV$35$$35$3804$35$$35$k_$35$$35$3805 VV$35$$35$F$35$$35$254) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867289$35$$35$djax) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867290$35$$35$djay) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA) (= lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3805 new$35$$35$aiOj) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3805 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3805 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3805 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3805 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3805 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3805 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3805 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3805 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3805 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3805 x2$35$$35$aiOe) (exists ((lq_tmp$36$x$35$$35$3790 Int) (VV$35$$35$F$35$$35$259 Int)) (and (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3799 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3799 Int) (lq_tmp$36$x$35$$35$3801 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3799 Bool) (lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3799 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3799 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3799 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3799 Int) (lq_karg$36$VV$35$$35$3798$35$$35$k_$35$$35$3799 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3799 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3799 Map) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3799 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3799 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3799 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3799 Int) (lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3799 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3799 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3799 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3799 Int)) (and (= lq_karg$36$VV$35$$35$3798$35$$35$k_$35$$35$3799 lq_tmp$36$x$35$$35$3790) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867289$35$$35$djax) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867290$35$$35$djay) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA) (= lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3799 new$35$$35$aiOj) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3799 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3799 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3799 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3799 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3799 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3799 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3799 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3799 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3799 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3799 x2$35$$35$aiOe) (= lq_tmp$36$x$35$$35$3801 lq_tmp$36$x$35$$35$3790) (exists ((VV$35$$35$F$35$$35$255 Int)) (and (apply$35$$35$1 (as is$36$Binomial.Node Int) VV$35$$35$F$35$$35$255) (= VV$35$$35$F$35$$35$255 new$35$$35$aiOj) (= VV$35$$35$F$35$$35$255 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x2$35$$35$aiOe) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) lq_anf$36$$35$$35$7205759403792867287$35$$35$djav)) (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$255) x2$35$$35$aiOe) (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$255) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$255)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$255) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$255)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$255))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$255) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (smt_map_sto (smt_map_def 0) x2$35$$35$aiOe (+ 1 (smt_map_sel (smt_map_def 0) x2$35$$35$aiOe))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x2$35$$35$aiOe) (- lq_anf$36$$35$$35$7205759403792867284$35$$35$djas 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau)) (- lq_anf$36$$35$$35$7205759403792867287$35$$35$djav (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$255) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$255)) (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) VV$35$$35$F$35$$35$255) x2$35$$35$aiOe) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$255) 0) (= lq_karg$36$VV$35$$35$3798$35$$35$k_$35$$35$3799 VV$35$$35$F$35$$35$255) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867289$35$$35$djax) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867290$35$$35$djay) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA) (= lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3799 new$35$$35$aiOj) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3799 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3799 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3799 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3799 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3799 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3799 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3799 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3799 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3799 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3799 x2$35$$35$aiOe))))) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3778 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3778 Map) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3778 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3778 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3778 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3778 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3778 Int) (lq_karg$36$VV$35$$35$3777$35$$35$k_$35$$35$3778 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3778 Bool) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3778 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3778 Map) (lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3778 Int) (lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3778 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3778 Int) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3778 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3778 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3778 Bool)) (and (= lq_karg$36$VV$35$$35$3777$35$$35$k_$35$$35$3778 VV$35$$35$F$35$$35$259) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867289$35$$35$djax) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867290$35$$35$djay) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA) (= lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3778 new$35$$35$aiOj) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3778 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3778 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3778 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3778 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3778 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3778 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3778 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3778 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3778 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3778 x2$35$$35$aiOe) (exists ((VV$35$$35$F$35$$35$257 Int)) (and (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3799 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3799 Int) (lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3799 Bool) (lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3799 Int) (lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3799 Int) (lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3799 Int) (lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3799 Int) (lq_karg$36$VV$35$$35$3798$35$$35$k_$35$$35$3799 Int) (lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3799 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3799 Map) (lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3799 Int) (lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3799 Int) (lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3799 Int) (lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3799 Int) (lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3799 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3799 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3799 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3799 Map) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3799 Int)) (and (= lq_karg$36$VV$35$$35$3798$35$$35$k_$35$$35$3799 VV$35$$35$F$35$$35$257) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867289$35$$35$djax) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867290$35$$35$djay) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA) (= lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3799 new$35$$35$aiOj) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3799 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3799 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3799 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3799 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3799 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3799 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3799 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3799 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3799 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3799 x2$35$$35$aiOe) (exists ((VV$35$$35$F$35$$35$255 Int)) (and (apply$35$$35$1 (as is$36$Binomial.Node Int) VV$35$$35$F$35$$35$255) (= VV$35$$35$F$35$$35$255 new$35$$35$aiOj) (= VV$35$$35$F$35$$35$255 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x2$35$$35$aiOe) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) lq_anf$36$$35$$35$7205759403792867287$35$$35$djav)) (= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$255) x2$35$$35$aiOe) (= (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$255) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$255)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$255) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$255)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$255))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$255) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (smt_map_sto (smt_map_def 0) x2$35$$35$aiOe (+ 1 (smt_map_sel (smt_map_def 0) x2$35$$35$aiOe))) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau)) (apply$35$$35$3 (as Binomial.treeElts Int) (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (as Binomial.Node Int) x2$35$$35$aiOe) (- lq_anf$36$$35$$35$7205759403792867284$35$$35$djas 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau)) (- lq_anf$36$$35$$35$7205759403792867287$35$$35$djav (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as Binomial.rankOfFirstTree Int) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau)))))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$255) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$255)) (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$1 Int) VV$35$$35$F$35$$35$255) x2$35$$35$aiOe) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$2 Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$3 Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Node$35$$35$4 Int) VV$35$$35$F$35$$35$255) lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$255) 0) (= lq_karg$36$VV$35$$35$3798$35$$35$k_$35$$35$3799 VV$35$$35$F$35$$35$255) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867289$35$$35$djax) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867290$35$$35$djay) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3799 lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA) (= lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3799 new$35$$35$aiOj) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3799 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3799 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3799 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3799 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3799 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3799 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3799 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3799 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3799 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3799 x2$35$$35$aiOe))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$257) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$257)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$257) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$257)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$257))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$257) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$257)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$257) 0) (= lq_karg$36$VV$35$$35$3777$35$$35$k_$35$$35$3778 VV$35$$35$F$35$$35$257) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867289$35$$35$djax) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867290$35$$35$djay) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3778 lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA) (= lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3778 new$35$$35$aiOj) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3778 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3778 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3778 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3778 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3778 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3778 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3778 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3778 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3778 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3778 x2$35$$35$aiOe))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) lq_tmp$36$x$35$$35$3790) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$3790)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$3790) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) lq_tmp$36$x$35$$35$3790)) (apply$35$$35$0 (as Binomial.root Int) lq_tmp$36$x$35$$35$3790))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$3790) (apply$35$$35$0 (as Binomial.rank Int) lq_tmp$36$x$35$$35$3790)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$3790) 0) (= VV$35$$35$F$35$$35$259 lq_tmp$36$x$35$$35$3790) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$259) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$259)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$259) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$259)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$259))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$259) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$259)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$259) 0) (= lq_karg$36$VV$35$$35$3804$35$$35$k_$35$$35$3805 VV$35$$35$F$35$$35$259) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867278$35$$35$djam$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867278$35$$35$djam) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867279$35$$35$djan$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867279$35$$35$djan) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867280$35$$35$djao$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867280$35$$35$djao) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867281$35$$35$djap$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867281$35$$35$djap) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867282$35$$35$djaq) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867283$35$$35$djar$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867283$35$$35$djar) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867284$35$$35$djas$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867284$35$$35$djas) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867285$35$$35$djat$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867285$35$$35$djat) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867286$35$$35$djau$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867286$35$$35$djau) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867287$35$$35$djav$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867287$35$$35$djav) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867288$35$$35$djaw) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867289$35$$35$djax$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867289$35$$35$djax) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867290$35$$35$djay$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867290$35$$35$djay) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867291$35$$35$djaz) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA$35$$35$k_$35$$35$3805 lq_anf$36$$35$$35$7205759403792867292$35$$35$djaA) (= lq_karg$36$new$35$$35$aiOj$35$$35$k_$35$$35$3805 new$35$$35$aiOj) (= lq_karg$36$r1$35$$35$aiOa$35$$35$k_$35$$35$3805 r1$35$$35$aiOa) (= lq_karg$36$r2$35$$35$aiOf$35$$35$k_$35$$35$3805 r2$35$$35$aiOf) (= lq_karg$36$sz1$35$$35$aiOc$35$$35$k_$35$$35$3805 sz1$35$$35$aiOc) (= lq_karg$36$sz2$35$$35$aiOh$35$$35$k_$35$$35$3805 sz2$35$$35$aiOh) (= lq_karg$36$t1$35$$35$aiO8$35$$35$k_$35$$35$3805 t1$35$$35$aiO8) (= lq_karg$36$t2$35$$35$aiOd$35$$35$k_$35$$35$3805 t2$35$$35$aiOd) (= lq_karg$36$ts1$35$$35$aiOb$35$$35$k_$35$$35$3805 ts1$35$$35$aiOb) (= lq_karg$36$ts2$35$$35$aiOg$35$$35$k_$35$$35$3805 ts2$35$$35$aiOg) (= lq_karg$36$x1$35$$35$aiO9$35$$35$k_$35$$35$3805 x1$35$$35$aiO9) (= lq_karg$36$x2$35$$35$aiOe$35$$35$k_$35$$35$3805 x2$35$$35$aiOe))))) b$36$$35$$35$384 b$36$$35$$35$97 b$36$$35$$35$386 b$36$$35$$35$387 b$36$$35$$35$388 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$254) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$254)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$254) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$254)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$254))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$254) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$254)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$254) 0)) b$36$$35$$35$389 b$36$$35$$35$390 b$36$$35$$35$391 b$36$$35$$35$392 b$36$$35$$35$393 b$36$$35$$35$394 b$36$$35$$35$43 b$36$$35$$35$395 b$36$$35$$35$396 b$36$$35$$35$397 b$36$$35$$35$47 b$36$$35$$35$399 b$36$$35$$35$400 b$36$$35$$35$401 b$36$$35$$35$402 b$36$$35$$35$403 b$36$$35$$35$404 b$36$$35$$35$405 b$36$$35$$35$374 b$36$$35$$35$406 b$36$$35$$35$375 b$36$$35$$35$376 b$36$$35$$35$377 b$36$$35$$35$379 b$36$$35$$35$380 b$36$$35$$35$93 b$36$$35$$35$381 b$36$$35$$35$382 b$36$$35$$35$383))
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.treeSize Int) VV$35$$35$F$35$$35$254) (+ (apply$35$$35$0 (as Binomial.treeSize Int) t1$35$$35$aiO8) (apply$35$$35$0 (as Binomial.treeSize Int) t2$35$$35$aiOd)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (= ts$39$$35$$35$aiUV (apply$35$$35$0 (as snd Int) ds_dj1U)) (>= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV) 0) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3101 Int) (lq_tmp$36$x$35$$35$3102 Int) (lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3101 Int) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3101 Int) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3101 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3101 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3101 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3101 Int) (lq_karg$36$VV$35$$35$3100$35$$35$k_$35$$35$3101 Int) (lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3101 Int) (lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3101 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3101 Int)) (and (= lq_karg$36$VV$35$$35$3100$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3101 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3101 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3101 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3101 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3101 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3101 ts$39$$35$$35$aiUV) (= lq_tmp$36$x$35$$35$3102 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (exists ((VV$35$$35$10224 Int) (VV$35$$35$F$35$$35$344 Int)) (and (= VV$35$$35$10224 t$35$$35$aiOu) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10224) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10224)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10224) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10224)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10224))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10224) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10224)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10224) 0) (= lq_karg$36$VV$35$$35$3100$35$$35$k_$35$$35$3101 VV$35$$35$F$35$$35$344) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3101 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3101 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3101 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3101 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3101 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3101 ts$39$$35$$35$aiUV))))) (exists ((lq_karg$36$VV$35$$35$3111$35$$35$k_$35$$35$3112 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3112 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3112 Int) (lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3112 Int) (lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3112 Int) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3112 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3112 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3112 Int) (lq_tmp$36$x$35$$35$3113 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3112 Int) (lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3112 Int) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3112 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3112 Int)) (and (= lq_karg$36$VV$35$$35$3111$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3112 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3112 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3112 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3112 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3112 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3112 ts$39$$35$$35$aiUV) (= lq_tmp$36$x$35$$35$3113 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (exists ((VV$35$$35$10219 Int) (VV$35$$35$F$35$$35$343 Int)) (and (= VV$35$$35$10219 (apply$35$$35$0 (as fst Int) ds_dj1U)) (= VV$35$$35$10219 t$39$$35$$35$aiUT) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10219) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10219)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10219) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10219)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10219))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10219) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10219)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10219) 0) (= lq_karg$36$VV$35$$35$3111$35$$35$k_$35$$35$3112 VV$35$$35$F$35$$35$343) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3112 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3112 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3112 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3112 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3112 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3112 ts$39$$35$$35$aiUV))))) (= t$39$$35$$35$aiUT (apply$35$$35$0 (as fst Int) ds_dj1U))) b$36$$35$$35$97 (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV) 0) (= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV) 0) (>= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV) 0) (<= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV))) (= lq_anf$36$$35$$35$7205759403792867267$35$$35$djab (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aiOu)) (= lq_anf$36$$35$$35$7205759403792867268$35$$35$djac (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT)) b$36$$35$$35$325 b$36$$35$$35$357 b$36$$35$$35$326 b$36$$35$$35$358 b$36$$35$$35$2022 b$36$$35$$35$359 b$36$$35$$35$360 b$36$$35$$35$361 b$36$$35$$35$330 b$36$$35$$35$43 b$36$$35$$35$331 b$36$$35$$35$363 b$36$$35$$35$332 b$36$$35$$35$333 b$36$$35$$35$334 b$36$$35$$35$47 b$36$$35$$35$340 b$36$$35$$35$341 b$36$$35$$35$342 b$36$$35$$35$343 b$36$$35$$35$344 b$36$$35$$35$93 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) t$39$$35$$35$aiUT) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$39$$35$$35$aiUT)) (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$39$$35$$35$aiUT)) (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) t$39$$35$$35$aiUT) (apply$35$$35$0 (as Binomial.rank Int) t$39$$35$$35$aiUT)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) t$39$$35$$35$aiUT) 0))))
(push 1)
(assert (not (= (+ (apply$35$$35$0 (as Binomial.treeSize Int) (apply$35$$35$0 (as fst Int) VV$35$$35$F$35$$35$318)) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as snd Int) VV$35$$35$F$35$$35$318))) (apply$35$$35$0 (as Binomial.treeListSize Int) ds_dj1J))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$320 b$36$$35$$35$97 b$36$$35$$35$321 b$36$$35$$35$2024 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$314 b$36$$35$$35$315 b$36$$35$$35$316 b$36$$35$$35$93 b$36$$35$$35$318 b$36$$35$$35$319))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$382 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$288 b$36$$35$$35$97 b$36$$35$$35$289 b$36$$35$$35$290 b$36$$35$$35$292 b$36$$35$$35$293 b$36$$35$$35$294 b$36$$35$$35$295 b$36$$35$$35$296 b$36$$35$$35$297 b$36$$35$$35$2025 b$36$$35$$35$43 b$36$$35$$35$269 b$36$$35$$35$270 b$36$$35$$35$47 b$36$$35$$35$271 b$36$$35$$35$273 b$36$$35$$35$274 b$36$$35$$35$275 b$36$$35$$35$276 b$36$$35$$35$277 b$36$$35$$35$281 b$36$$35$$35$282 b$36$$35$$35$283 b$36$$35$$35$284 b$36$$35$$35$93 b$36$$35$$35$285 b$36$$35$$35$286 b$36$$35$$35$287))
(push 1)
(assert (not (>= (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$414) 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$224 b$36$$35$$35$97 b$36$$35$$35$225 b$36$$35$$35$229 b$36$$35$$35$230 b$36$$35$$35$231 b$36$$35$$35$232 b$36$$35$$35$2026 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$217 b$36$$35$$35$218 b$36$$35$$35$1530 b$36$$35$$35$219 b$36$$35$$35$1532 b$36$$35$$35$93 b$36$$35$$35$221 b$36$$35$$35$222 b$36$$35$$35$223))
(push 1)
(assert (not (> (apply$35$$35$0 (as Binomial.treeRank Int) lq_tmp$36$x$35$$35$1471) (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$478))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$168 b$36$$35$$35$169 b$36$$35$$35$170 b$36$$35$$35$43 b$36$$35$$35$171 b$36$$35$$35$2027 b$36$$35$$35$172 b$36$$35$$35$47 b$36$$35$$35$93))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$510 (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) ds_dj3J)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$VV$35$$35$5489$35$$35$k_$35$$35$5490 Int)) (and (= lq_karg$36$VV$35$$35$5489$35$$35$k_$35$$35$5490 VV$35$$35$F$35$$35$95) (exists ((lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt Int) (VV$35$$35$F$35$$35$96 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) 0)) (= lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$3 (as Binomial.listElts Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) (smt_map_def 0)) (= (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) (smt_map_def 0)) (= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) 0) (= (apply$35$$35$3 (as fromList Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) (smt_map_def 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) 0) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) 0) (<= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt)) (apply$35$$35$1 (as is$36$Binomial.Heap Int) VV$35$$35$F$35$$35$96) (= VV$35$$35$F$35$$35$96 (apply$35$$35$0 (as Binomial.Heap Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt)) (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$F$35$$35$96) (apply$35$$35$3 (as Binomial.treeListElts Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt)) (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$F$35$$35$96) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$96))) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$96) (apply$35$$35$0 (as Binomial.treeListSize Int) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt)) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$96) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$96))) (= (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$96) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$Binomial.Heap$35$$35$1 Int) VV$35$$35$F$35$$35$96) lq_anf$36$$35$$35$7205759403792867347$35$$35$djbt) (>= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$96) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$96)) (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$96)) (= lq_karg$36$VV$35$$35$5489$35$$35$k_$35$$35$5490 VV$35$$35$F$35$$35$96))))) b$36$$35$$35$97 b$36$$35$$35$43 (and (= (apply$35$$35$3 (as Binomial.elts Int) VV$35$$35$F$35$$35$95) (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$95))) (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$95) (apply$35$$35$0 (as Binomial.treeListSize Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$95))) (>= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$95) 0) (<= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (as Binomial.unheap Int) VV$35$$35$F$35$$35$95)) (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$95))) b$36$$35$$35$47 b$36$$35$$35$93))
(push 1)
(assert (not (= (apply$35$$35$0 (as Binomial.size Int) VV$35$$35$F$35$$35$95) 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$43 b$36$$35$$35$461 b$36$$35$$35$462 b$36$$35$$35$2030 b$36$$35$$35$47 b$36$$35$$35$463 b$36$$35$$35$464 b$36$$35$$35$465 b$36$$35$$35$466 b$36$$35$$35$467 b$36$$35$$35$469 b$36$$35$$35$470 b$36$$35$$35$471 b$36$$35$$35$93))
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$159) lq_anf$36$$35$$35$7205759403792867320$35$$35$djb2)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (= ts$39$$35$$35$aiUV (apply$35$$35$0 (as snd Int) ds_dj1U)) (>= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV) 0) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3101 Int) (lq_tmp$36$x$35$$35$3102 Int) (lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3101 Int) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3101 Int) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3101 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3101 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3101 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3101 Int) (lq_karg$36$VV$35$$35$3100$35$$35$k_$35$$35$3101 Int) (lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3101 Int) (lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3101 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3101 Int)) (and (= lq_karg$36$VV$35$$35$3100$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3101 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3101 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3101 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3101 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3101 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3101 ts$39$$35$$35$aiUV) (= lq_tmp$36$x$35$$35$3102 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (exists ((VV$35$$35$10224 Int) (VV$35$$35$F$35$$35$344 Int)) (and (= VV$35$$35$10224 t$35$$35$aiOu) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10224) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10224)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10224) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10224)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10224))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10224) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10224)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10224) 0) (= lq_karg$36$VV$35$$35$3100$35$$35$k_$35$$35$3101 VV$35$$35$F$35$$35$344) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3101 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3101 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3101 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3101 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3101 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3101 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3101 ts$39$$35$$35$aiUV))))) (exists ((lq_karg$36$VV$35$$35$3111$35$$35$k_$35$$35$3112 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3112 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3112 Int) (lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3112 Int) (lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3112 Int) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3112 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3112 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3112 Int) (lq_tmp$36$x$35$$35$3113 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3112 Int) (lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3112 Int) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3112 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3112 Int)) (and (= lq_karg$36$VV$35$$35$3111$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3112 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3112 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3112 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3112 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3112 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3112 ts$39$$35$$35$aiUV) (= lq_tmp$36$x$35$$35$3113 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (exists ((VV$35$$35$10219 Int) (VV$35$$35$F$35$$35$343 Int)) (and (= VV$35$$35$10219 (apply$35$$35$0 (as fst Int) ds_dj1U)) (= VV$35$$35$10219 t$39$$35$$35$aiUT) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10219) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10219)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10219) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10219)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10219))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10219) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10219)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10219) 0) (= lq_karg$36$VV$35$$35$3111$35$$35$k_$35$$35$3112 VV$35$$35$F$35$$35$343) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3112 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3112 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3112 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3112 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3112 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3112 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3112 ts$39$$35$$35$aiUV))))) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3221 Int) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3221 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3221 Bool) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3221 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3221 Int) (lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3221 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3221 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3221 Int) (lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3221 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3221 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867272$35$$35$djag$35$$35$k_$35$$35$3221 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3221 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3221 Bool) (lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3221 Int) (lq_karg$36$VV$35$$35$3220$35$$35$k_$35$$35$3221 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3221 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf$35$$35$k_$35$$35$3221 Int)) (and (= lq_karg$36$VV$35$$35$3220$35$$35$k_$35$$35$3221 VV$35$$35$10125) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3221 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3221 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3221 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3221 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3221 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3221 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3221 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3221 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3221 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf$35$$35$k_$35$$35$3221 lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867272$35$$35$djag$35$$35$k_$35$$35$3221 lq_anf$36$$35$$35$7205759403792867272$35$$35$djag) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3221 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3221 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3221 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3221 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3221 ts$39$$35$$35$aiUV) (exists ((VV$35$$35$F$35$$35$320 Int)) (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$320) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$320)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$320) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) 0)) (= VV$35$$35$F$35$$35$320 lq_anf$36$$35$$35$7205759403792867272$35$$35$djag) (= VV$35$$35$F$35$$35$320 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) ts$39$$35$$35$aiUV)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$F$35$$35$320) (smt_map_cup (smt_map_sto (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf (+ 1 (smt_map_sel (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf))) (apply$35$$35$3 (as Binomial.listElts Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$F$35$$35$320) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (apply$35$$35$3 (as Binomial.treeListElts Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$320) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$F$35$$35$320) (smt_map_sto (apply$35$$35$3 (as fromList Int) ts$39$$35$$35$aiUV) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ts$39$$35$$35$aiUV) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf)))) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$320) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (+ 1 (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$320) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$320) ts$39$$35$$35$aiUV) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$320) ts$39$$35$$35$aiUV) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$320) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$F$35$$35$320)) (= lq_karg$36$VV$35$$35$3220$35$$35$k_$35$$35$3221 VV$35$$35$F$35$$35$320) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3221 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3221 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3221 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3221 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3221 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3221 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3221 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3221 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3221 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf$35$$35$k_$35$$35$3221 lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867272$35$$35$djag$35$$35$k_$35$$35$3221 lq_anf$36$$35$$35$7205759403792867272$35$$35$djag) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3221 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3221 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3221 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3221 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3221 ts$39$$35$$35$aiUV))))) (exists ((lq_karg$36$VV$35$$35$3220$35$$35$k_$35$$35$3212 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf$35$$35$k_$35$$35$3212 Int) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3212 Int) (lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3212 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3212 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3212 Int) (lq_karg$36$VV$35$$35$3211$35$$35$k_$35$$35$3212 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3212 Int) (lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3212 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3212 Int) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3212 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3212 Int) (lq_karg$36$VV$35$$35$3213$35$$35$k_$35$$35$3212 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3212 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3212 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3212 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867272$35$$35$djag$35$$35$k_$35$$35$3212 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3212 Int) (lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3212 Int)) (and (= lq_karg$36$VV$35$$35$3211$35$$35$k_$35$$35$3212 VV$35$$35$F$35$$35$319) (= lq_karg$36$VV$35$$35$3213$35$$35$k_$35$$35$3212 VV$35$$35$10133) (= lq_karg$36$VV$35$$35$3220$35$$35$k_$35$$35$3212 VV$35$$35$10125) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3212 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3212 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3212 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3212 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3212 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3212 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3212 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3212 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3212 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf$35$$35$k_$35$$35$3212 lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867272$35$$35$djag$35$$35$k_$35$$35$3212 lq_anf$36$$35$$35$7205759403792867272$35$$35$djag) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3212 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3212 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3212 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3212 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3212 ts$39$$35$$35$aiUV) (exists ((VV$35$$35$F$35$$35$324 Int) (VV$35$$35$10164 Int) (VV$35$$35$10172 Int)) (and (or (exists ((lq_karg$36$VV$35$$35$3171$35$$35$k_$35$$35$3172 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3172 Int) (lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3172 Int) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3172 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3172 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3172 Int) (lq_karg$36$VV$35$$35$3173$35$$35$k_$35$$35$3172 Int) (lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3172 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3172 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3172 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3172 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3172 Int) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3172 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf$35$$35$k_$35$$35$3172 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3172 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3172 Int) (lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3172 Int)) (and (= lq_karg$36$VV$35$$35$3171$35$$35$k_$35$$35$3172 VV$35$$35$F$35$$35$324) (= lq_karg$36$VV$35$$35$3173$35$$35$k_$35$$35$3172 VV$35$$35$10172) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3172 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3172 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3172 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3172 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3172 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3172 ts$39$$35$$35$aiUV) (exists ((VV$35$$35$10207 Int) (VV$35$$35$F$35$$35$339 Int)) (and (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3150 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3150 Int) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3150 Int) (lq_karg$36$VV$35$$35$3149$35$$35$k_$35$$35$3150 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3150 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3150 Int) (lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3150 Int) (lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3150 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3150 Int) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3150 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3150 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3150 Int) (lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3150 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3150 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3150 Int)) (and (= lq_karg$36$VV$35$$35$3149$35$$35$k_$35$$35$3150 VV$35$$35$F$35$$35$339) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3150 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3150 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3150 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3150 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3150 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3150 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3150 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3150 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3150 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3150 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3150 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3150 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3150 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3150 ts$39$$35$$35$aiUV) (exists ((VV$35$$35$10212 Int) (VV$35$$35$F$35$$35$340 Int)) (and (= VV$35$$35$10212 t$35$$35$aiOu) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10212) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10212)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10212) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10212)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10212))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10212) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10212)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10212) 0) (= lq_karg$36$VV$35$$35$3149$35$$35$k_$35$$35$3150 VV$35$$35$F$35$$35$340) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3150 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3150 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3150 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3150 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3150 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3150 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3150 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3150 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3150 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3150 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3150 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3150 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3150 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3150 ts$39$$35$$35$aiUV))))) (= VV$35$$35$10207 lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= VV$35$$35$10207 t$35$$35$aiOu) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10207) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10207)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10207) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10207)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10207))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10207) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10207)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10207) 0) (<= (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aiOu) VV$35$$35$F$35$$35$339) (= lq_karg$36$VV$35$$35$3171$35$$35$k_$35$$35$3172 VV$35$$35$F$35$$35$339) (= lq_karg$36$VV$35$$35$3173$35$$35$k_$35$$35$3172 VV$35$$35$10207) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3172 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3172 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3172 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3172 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3172 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3172 ts$39$$35$$35$aiUV))))) (exists ((lq_karg$36$VV$35$$35$3171$35$$35$k_$35$$35$3172 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3172 Int) (lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3172 Int) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3172 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3172 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3172 Int) (lq_karg$36$VV$35$$35$3173$35$$35$k_$35$$35$3172 Int) (lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3172 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3172 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3172 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3172 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3172 Int) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3172 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf$35$$35$k_$35$$35$3172 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3172 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3172 Int) (lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3172 Int)) (and (= lq_karg$36$VV$35$$35$3171$35$$35$k_$35$$35$3172 VV$35$$35$F$35$$35$324) (= lq_karg$36$VV$35$$35$3173$35$$35$k_$35$$35$3172 VV$35$$35$10172) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3172 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3172 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3172 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3172 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3172 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3172 ts$39$$35$$35$aiUV) (exists ((VV$35$$35$F$35$$35$334 Int) (VV$35$$35$10188 Int) (VV$35$$35$10196 Int)) (and (<= (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT) VV$35$$35$F$35$$35$334) (<= (apply$35$$35$0 (as Binomial.root Int) (apply$35$$35$0 (as fst Int) ds_dj1U)) VV$35$$35$F$35$$35$334) (= VV$35$$35$10188 (apply$35$$35$0 (as snd Int) ds_dj1U)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$10188) 0) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10188) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$10188) 0)) (= VV$35$$35$10188 ts$39$$35$$35$aiUV) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10188) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$10188) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$10188) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10188)) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10196) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10196)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10196) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10196)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10196))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10196) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10196)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10196) 0) (= lq_karg$36$VV$35$$35$3171$35$$35$k_$35$$35$3172 VV$35$$35$F$35$$35$334) (= lq_karg$36$VV$35$$35$3173$35$$35$k_$35$$35$3172 VV$35$$35$10196) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3172 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3172 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3172 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3172 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3172 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3172 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3172 ts$39$$35$$35$aiUV)))))) (or (exists ((lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3174 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3174 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3174 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3174 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf$35$$35$k_$35$$35$3174 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3174 Int) (lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3174 Int) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3174 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3174 Int) (lq_karg$36$VV$35$$35$3173$35$$35$k_$35$$35$3174 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3174 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3174 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3174 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3174 Bool) (lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3174 Int) (lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3174 Int)) (and (= lq_karg$36$VV$35$$35$3173$35$$35$k_$35$$35$3174 VV$35$$35$10172) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3174 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3174 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3174 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3174 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3174 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3174 ts$39$$35$$35$aiUV) (exists ((VV$35$$35$F$35$$35$338 Int)) (and (= VV$35$$35$F$35$$35$338 lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= VV$35$$35$F$35$$35$338 t$35$$35$aiOu) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$338) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$338)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$338) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$338)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$338))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$338) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$338)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$338) 0) (= lq_karg$36$VV$35$$35$3173$35$$35$k_$35$$35$3174 VV$35$$35$F$35$$35$338) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3174 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3174 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3174 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3174 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3174 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3174 ts$39$$35$$35$aiUV))))) (exists ((lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3174 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3174 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3174 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3174 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf$35$$35$k_$35$$35$3174 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3174 Int) (lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3174 Int) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3174 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3174 Int) (lq_karg$36$VV$35$$35$3173$35$$35$k_$35$$35$3174 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3174 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3174 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3174 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3174 Bool) (lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3174 Int) (lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3174 Int)) (and (= lq_karg$36$VV$35$$35$3173$35$$35$k_$35$$35$3174 VV$35$$35$10172) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3174 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3174 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3174 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3174 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3174 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3174 ts$39$$35$$35$aiUV) (exists ((VV$35$$35$10188 Int) (VV$35$$35$F$35$$35$332 Int)) (and (= VV$35$$35$10188 (apply$35$$35$0 (as snd Int) ds_dj1U)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$10188) 0) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10188) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$10188) 0)) (= VV$35$$35$10188 ts$39$$35$$35$aiUV) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10188) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$10188) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$10188) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10188)) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$332) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$332)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$332) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$332)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$332))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$332) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$332)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$332) 0) (= lq_karg$36$VV$35$$35$3173$35$$35$k_$35$$35$3174 VV$35$$35$F$35$$35$332) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3174 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3174 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3174 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3174 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3174 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3174 ts$39$$35$$35$aiUV)))))) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$10164) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$10164)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10164) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$10164) 0)) (= VV$35$$35$10164 lq_anf$36$$35$$35$7205759403792867272$35$$35$djag) (= VV$35$$35$10164 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) ts$39$$35$$35$aiUV)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$10164) (smt_map_cup (smt_map_sto (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf (+ 1 (smt_map_sel (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf))) (apply$35$$35$3 (as Binomial.listElts Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$10164) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (apply$35$$35$3 (as Binomial.treeListElts Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10164) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$10164) (smt_map_sto (apply$35$$35$3 (as fromList Int) ts$39$$35$$35$aiUV) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ts$39$$35$$35$aiUV) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf)))) (= (apply$35$$35$0 (as head Int) VV$35$$35$10164) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= (apply$35$$35$0 (as len Int) VV$35$$35$10164) (+ 1 (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$10164) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$10164) ts$39$$35$$35$aiUV) (= (apply$35$$35$0 (as tail Int) VV$35$$35$10164) ts$39$$35$$35$aiUV) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10164) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$10164) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$10164) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10164)) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10172) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10172)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10172) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10172)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10172))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10172) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10172)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10172) 0) (= lq_karg$36$VV$35$$35$3211$35$$35$k_$35$$35$3212 VV$35$$35$F$35$$35$324) (= lq_karg$36$VV$35$$35$3213$35$$35$k_$35$$35$3212 VV$35$$35$10172) (= lq_karg$36$VV$35$$35$3220$35$$35$k_$35$$35$3212 VV$35$$35$10164) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3212 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3212 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3212 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3212 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3212 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3212 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3212 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3212 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3212 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf$35$$35$k_$35$$35$3212 lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867272$35$$35$djag$35$$35$k_$35$$35$3212 lq_anf$36$$35$$35$7205759403792867272$35$$35$djag) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3212 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3212 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3212 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3212 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3212 ts$39$$35$$35$aiUV))))) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3214 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf$35$$35$k_$35$$35$3214 Int) (lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3214 Int) (lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3214 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3214 Int) (lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3214 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3214 Int) (lq_karg$36$VV$35$$35$3220$35$$35$k_$35$$35$3214 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3214 Bool) (lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3214 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3214 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867272$35$$35$djag$35$$35$k_$35$$35$3214 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3214 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3214 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3214 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3214 Int) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3214 Int) (lq_karg$36$VV$35$$35$3213$35$$35$k_$35$$35$3214 Int)) (and (= lq_karg$36$VV$35$$35$3213$35$$35$k_$35$$35$3214 VV$35$$35$10133) (= lq_karg$36$VV$35$$35$3220$35$$35$k_$35$$35$3214 VV$35$$35$10125) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3214 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3214 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3214 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3214 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3214 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3214 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3214 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3214 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3214 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf$35$$35$k_$35$$35$3214 lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867272$35$$35$djag$35$$35$k_$35$$35$3214 lq_anf$36$$35$$35$7205759403792867272$35$$35$djag) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3214 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3214 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3214 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3214 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3214 ts$39$$35$$35$aiUV) (exists ((VV$35$$35$F$35$$35$322 Int) (VV$35$$35$10164 Int)) (and (or (exists ((lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3174 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3174 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3174 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3174 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf$35$$35$k_$35$$35$3174 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3174 Int) (lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3174 Int) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3174 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3174 Int) (lq_karg$36$VV$35$$35$3173$35$$35$k_$35$$35$3174 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3174 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3174 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3174 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3174 Bool) (lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3174 Int) (lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3174 Int)) (and (= lq_karg$36$VV$35$$35$3173$35$$35$k_$35$$35$3174 VV$35$$35$F$35$$35$322) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3174 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3174 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3174 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3174 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3174 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3174 ts$39$$35$$35$aiUV) (exists ((VV$35$$35$F$35$$35$338 Int)) (and (= VV$35$$35$F$35$$35$338 lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= VV$35$$35$F$35$$35$338 t$35$$35$aiOu) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$338) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$338)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$338) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$338)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$338))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$338) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$338)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$338) 0) (= lq_karg$36$VV$35$$35$3173$35$$35$k_$35$$35$3174 VV$35$$35$F$35$$35$338) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3174 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3174 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3174 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3174 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3174 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3174 ts$39$$35$$35$aiUV))))) (exists ((lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3174 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3174 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3174 Int) (lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3174 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf$35$$35$k_$35$$35$3174 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3174 Int) (lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3174 Int) (lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3174 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3174 Int) (lq_karg$36$VV$35$$35$3173$35$$35$k_$35$$35$3174 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3174 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3174 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3174 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3174 Bool) (lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3174 Int) (lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3174 Int)) (and (= lq_karg$36$VV$35$$35$3173$35$$35$k_$35$$35$3174 VV$35$$35$F$35$$35$322) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3174 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3174 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3174 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3174 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3174 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3174 ts$39$$35$$35$aiUV) (exists ((VV$35$$35$10188 Int) (VV$35$$35$F$35$$35$332 Int)) (and (= VV$35$$35$10188 (apply$35$$35$0 (as snd Int) ds_dj1U)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$10188) 0) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10188) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$10188) 0)) (= VV$35$$35$10188 ts$39$$35$$35$aiUV) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10188) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$10188) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$10188) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10188)) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$332) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$332)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$332) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$332)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$332))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$332) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$332)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$332) 0) (= lq_karg$36$VV$35$$35$3173$35$$35$k_$35$$35$3174 VV$35$$35$F$35$$35$332) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3174 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3174 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3174 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3174 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3174 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3174 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3174 ts$39$$35$$35$aiUV)))))) (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$F$35$$35$322) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$322)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$322) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$F$35$$35$322)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$F$35$$35$322))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$322) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$322)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$F$35$$35$322) 0) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$10164) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$10164)) (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10164) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$10164) 0)) (= VV$35$$35$10164 lq_anf$36$$35$$35$7205759403792867272$35$$35$djag) (= VV$35$$35$10164 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) ts$39$$35$$35$aiUV)) (= (apply$35$$35$3 (as Binomial.listElts Int) VV$35$$35$10164) (smt_map_cup (smt_map_sto (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf (+ 1 (smt_map_sel (smt_map_def 0) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf))) (apply$35$$35$3 (as Binomial.listElts Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$3 (as Binomial.treeListElts Int) VV$35$$35$10164) (smt_map_cup (apply$35$$35$3 (as Binomial.treeElts Int) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (apply$35$$35$3 (as Binomial.treeListElts Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10164) (+ (apply$35$$35$0 (as Binomial.treeSize Int) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$3 (as fromList Int) VV$35$$35$10164) (smt_map_sto (apply$35$$35$3 (as fromList Int) ts$39$$35$$35$aiUV) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf (+ 1 (smt_map_sel (apply$35$$35$3 (as fromList Int) ts$39$$35$$35$aiUV) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf)))) (= (apply$35$$35$0 (as head Int) VV$35$$35$10164) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= (apply$35$$35$0 (as len Int) VV$35$$35$10164) (+ 1 (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$10164) lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$10164) ts$39$$35$$35$aiUV) (= (apply$35$$35$0 (as tail Int) VV$35$$35$10164) ts$39$$35$$35$aiUV) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10164) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$10164) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$10164) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10164)) (= lq_karg$36$VV$35$$35$3213$35$$35$k_$35$$35$3214 VV$35$$35$F$35$$35$322) (= lq_karg$36$VV$35$$35$3220$35$$35$k_$35$$35$3214 VV$35$$35$10164) (= lq_karg$36$ds_dj1J$35$$35$k_$35$$35$3214 ds_dj1J) (= lq_karg$36$ds_dj1U$35$$35$k_$35$$35$3214 ds_dj1U) (= lq_karg$36$ds_dj2p$35$$35$k_$35$$35$3214 ds_dj2p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8$35$$35$k_$35$$35$3214 lq_anf$36$$35$$35$7205759403792867264$35$$35$dja8) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa$35$$35$k_$35$$35$3214 lq_anf$36$$35$$35$7205759403792867266$35$$35$djaa) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867267$35$$35$djab$35$$35$k_$35$$35$3214 lq_anf$36$$35$$35$7205759403792867267$35$$35$djab) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867268$35$$35$djac$35$$35$k_$35$$35$3214 lq_anf$36$$35$$35$7205759403792867268$35$$35$djac) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867269$35$$35$djad$35$$35$k_$35$$35$3214 lq_anf$36$$35$$35$7205759403792867269$35$$35$djad) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867270$35$$35$djae$35$$35$k_$35$$35$3214 lq_anf$36$$35$$35$7205759403792867270$35$$35$djae) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf$35$$35$k_$35$$35$3214 lq_anf$36$$35$$35$7205759403792867271$35$$35$djaf) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867272$35$$35$djag$35$$35$k_$35$$35$3214 lq_anf$36$$35$$35$7205759403792867272$35$$35$djag) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867276$35$$35$djak$35$$35$k_$35$$35$3214 lq_anf$36$$35$$35$7205759403792867276$35$$35$djak) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792867277$35$$35$djal$35$$35$k_$35$$35$3214 lq_anf$36$$35$$35$7205759403792867277$35$$35$djal) (= lq_karg$36$t$35$$35$aiOu$35$$35$k_$35$$35$3214 t$35$$35$aiOu) (= lq_karg$36$t$39$$35$$35$aiUT$35$$35$k_$35$$35$3214 t$39$$35$$35$aiUT) (= lq_karg$36$ts$39$$35$$35$aiUV$35$$35$k_$35$$35$3214 ts$39$$35$$35$aiUV))))) (= t$39$$35$$35$aiUT (apply$35$$35$0 (as fst Int) ds_dj1U))) b$36$$35$$35$97 (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV) 0) (= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV) 0) (>= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV) 0) (<= (apply$35$$35$0 (as len Int) ts$39$$35$$35$aiUV) (apply$35$$35$0 (as Binomial.treeListSize Int) ts$39$$35$$35$aiUV))) (= lq_anf$36$$35$$35$7205759403792867267$35$$35$djab (apply$35$$35$0 (as Binomial.root Int) t$35$$35$aiOu)) (= lq_anf$36$$35$$35$7205759403792867268$35$$35$djac (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT)) b$36$$35$$35$325 b$36$$35$$35$357 b$36$$35$$35$326 b$36$$35$$35$358 b$36$$35$$35$359 b$36$$35$$35$360 b$36$$35$$35$361 b$36$$35$$35$330 b$36$$35$$35$43 b$36$$35$$35$331 b$36$$35$$35$363 b$36$$35$$35$332 b$36$$35$$35$333 b$36$$35$$35$1294 b$36$$35$$35$334 b$36$$35$$35$47 (and (= (= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10125) 0) (= (apply$35$$35$0 (as len Int) VV$35$$35$10125) 0)) (>= (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10125) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$10125) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$10125) (apply$35$$35$0 (as Binomial.treeListSize Int) VV$35$$35$10125))) (and (= (apply$35$$35$3 (as Binomial.treeElts Int) VV$35$$35$10133) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10133)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10133) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) VV$35$$35$10133)) (apply$35$$35$0 (as Binomial.root Int) VV$35$$35$10133))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10133) (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$10133)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) VV$35$$35$10133) 0)) b$36$$35$$35$340 b$36$$35$$35$341 b$36$$35$$35$342 b$36$$35$$35$343 b$36$$35$$35$344 b$36$$35$$35$93 (and (= (apply$35$$35$3 (as Binomial.treeElts Int) t$39$$35$$35$aiUT) (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$39$$35$$35$aiUT)) (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) t$39$$35$$35$aiUT)) (apply$35$$35$0 (as Binomial.root Int) t$39$$35$$35$aiUT))))) (= (apply$35$$35$0 (as Binomial.treeRank Int) t$39$$35$$35$aiUT) (apply$35$$35$0 (as Binomial.rank Int) t$39$$35$$35$aiUT)) (>= (apply$35$$35$0 (as Binomial.treeRank Int) t$39$$35$$35$aiUT) 0))))
(push 1)
(assert (not (<= (apply$35$$35$0 (as Binomial.root Int) (apply$35$$35$0 (as fst Int) VV$35$$35$10102)) VV$35$$35$F$35$$35$319)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$288 b$36$$35$$35$97 b$36$$35$$35$289 b$36$$35$$35$290 b$36$$35$$35$292 b$36$$35$$35$293 b$36$$35$$35$294 b$36$$35$$35$295 b$36$$35$$35$296 b$36$$35$$35$297 b$36$$35$$35$43 b$36$$35$$35$269 b$36$$35$$35$270 b$36$$35$$35$47 b$36$$35$$35$271 b$36$$35$$35$273 b$36$$35$$35$274 b$36$$35$$35$275 b$36$$35$$35$2035 b$36$$35$$35$276 b$36$$35$$35$277 b$36$$35$$35$281 b$36$$35$$35$282 b$36$$35$$35$283 b$36$$35$$35$284 b$36$$35$$35$93 b$36$$35$$35$285 b$36$$35$$35$286 b$36$$35$$35$287))
(push 1)
(assert (not (< (apply$35$$35$0 (as Binomial.rank Int) VV$35$$35$F$35$$35$415) (apply$35$$35$0 (as Binomial.rank Int) ds_dj7T))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$224 b$36$$35$$35$97 b$36$$35$$35$225 b$36$$35$$35$226 b$36$$35$$35$227 b$36$$35$$35$228 b$36$$35$$35$43 b$36$$35$$35$47 b$36$$35$$35$2037 b$36$$35$$35$217 b$36$$35$$35$218 b$36$$35$$35$219 b$36$$35$$35$93 b$36$$35$$35$221 b$36$$35$$35$222 b$36$$35$$35$223))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$479 (smt_map_sto (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) ds_dj4a)) (apply$35$$35$0 (as Binomial.root Int) ds_dj4a) (+ 1 (smt_map_sel (apply$35$$35$3 (as Binomial.treeListElts Int) (apply$35$$35$0 (as Binomial.subtrees Int) ds_dj4a)) (apply$35$$35$0 (as Binomial.root Int) ds_dj4a)))))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$97 b$36$$35$$35$168 b$36$$35$$35$169 b$36$$35$$35$170 b$36$$35$$35$43 b$36$$35$$35$171 b$36$$35$$35$172 b$36$$35$$35$47 b$36$$35$$35$2038 b$36$$35$$35$93))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$511 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(pop 1)
(pop 1)
(exit)
