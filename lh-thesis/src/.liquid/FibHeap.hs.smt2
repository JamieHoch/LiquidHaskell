(set-option :auto-config false)
(set-option :model true)

(set-option :smt.mbqi false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort LSet () (Array Elt Bool))
(define-fun smt_set_emp () LSet ((as const LSet) false))
(define-fun smt_set_sng ((x Elt)) LSet (store ((as const LSet) false) x true))
(define-fun smt_set_mem ((x Elt) (s LSet)) Bool (select s x))
(define-fun smt_set_add ((s LSet) (x Elt)) LSet (store s x true))
(define-fun smt_set_cup ((s1 LSet) (s2 LSet)) LSet ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 LSet) (s2 LSet)) LSet ((_ map and) s1 s2))
(define-fun smt_set_com ((s LSet)) LSet ((_ map not) s))
(define-fun smt_set_dif ((s1 LSet) (s2 LSet)) LSet (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 LSet) (s2 LSet)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun smt_map_cup ((m1 Map) (m2 Map)) Map ((_ map (+ (Elt Elt) Elt)) m1 m2))
(define-fun smt_map_prj ((s LSet) (m Map)) Map ((_ map (ite (Bool Elt Elt) Elt)) s m ((as const (Array Elt Elt)) 0)))
(define-fun smt_map_to_set ((m Map)) LSet ((_ map (> (Elt Elt) Bool)) m ((as const (Array Elt Elt)) 0)))
(define-fun smt_map_max ((m1 Map) (m2 Map)) Map (lambda ((i Int)) (ite (> (select m1 i) (select m2 i)) (select m1 i) (select m2 i))))
(define-fun smt_map_min ((m1 Map) (m2 Map)) Map (lambda ((i Int)) (ite (< (select m1 i) (select m2 i)) (select m1 i) (select m2 i))))
(define-fun smt_map_shift ((n Int) (m Map)) Map (lambda ((i Int)) (select m (- i n))))
(define-fun smt_map_def ((v Elt)) Map ((as const (Map)) v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-datatypes ((GHC.Maybe.Maybe 1)) ((par (T0) (GHC.Maybe.Nothing (GHC.Maybe.Just (lqdc$35$$35$$36$select$35$$35$GHC.Maybe.Just$35$$35$1 T0))))))
(declare-datatypes ((FibHeap.FibTree 1)) ((par (T0) ((FibHeap.Node (FibHeap.rank Int) (FibHeap.root T0) (FibHeap.subtrees Int) (FibHeap.marked Bool))))))
(declare-datatypes ((FibHeap.FibHeap 1)) ((par (T0) ((junk$35$$35$FibHeap.FibHeap (junk$35$$35$FibHeap.FibHeap$35$$35$0 T0)) (FibHeap.FH (FibHeap.minTree (FibHeap.FibTree T0)) (FibHeap.trees Int)) FibHeap.E))))
(declare-fun lq_tmp$36$x$35$$35$2358 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v () Int)
(declare-fun papp7 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F$35$$35$k_$35$$35$3637 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g () Int)
(declare-fun GHC.Base.id () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805296$35$$35$d32E$35$$35$k_$35$$35$4061 () (FibHeap.FibTree Int))
(declare-fun ds_d2TJ () (FibHeap.FibTree Int))
(declare-fun lit$36$FibHeap () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805229$35$$35$d31z () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805305$35$$35$d32N () Int)
(declare-fun GHC.Types.KindRepTypeLitS () Int)
(declare-fun lq_karg$36$ts2$35$$35$a1XU$35$$35$k_$35$$35$2056 () Int)
(declare-fun totalityError () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805221$35$$35$d31r () Int)
(declare-fun VV$35$$35$F$35$$35$122 () Int)
(declare-fun is$36$GHC.Types.$58$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805270$35$$35$d32e () Str)
(declare-fun ds_d2Zt () Int)
(declare-fun x$35$$35$a1XX () (FibHeap.FibTree Int))
(declare-fun VV$35$$35$F$35$$35$320 () Int)
(declare-fun fix$36$$36$dOrd_a24f () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805309$35$$35$d32R () (FibHeap.FibTree Int))
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v$35$$35$k_$35$$35$1875 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805301$35$$35$d32J () Int)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun VV$35$$35$F$35$$35$40 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805286$35$$35$d32u$35$$35$k_$35$$35$3637 () (FibHeap.FibTree Int))
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t$35$$35$k_$35$$35$4061 () Int)
(declare-fun VV$35$$35$F$35$$35$381 () Int)
(declare-fun minTr2$35$$35$a1XT () (FibHeap.FibTree Int))
(declare-fun VV$35$$35$F$35$$35$309 () (FibHeap.FibHeap Int))
(declare-fun VV$35$$35$F$35$$35$310 () Int)
(declare-fun VV$35$$35$F$35$$35$112 () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I$35$$35$k_$35$$35$1875 () Int)
(declare-fun VV$35$$35$F$35$$35$34 () Int)
(declare-fun r$35$$35$a1XI () Int)
(declare-fun lq_tmp$36$x$35$$35$5741 () Int)
(declare-fun subtr$35$$35$a1Yl () Int)
(declare-fun GHC.Real.divMod () Int)
(declare-fun VV$35$$35$F$35$$35$70 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805251$35$$35$d31V () Int)
(declare-fun FibHeap.insert () Int)
(declare-fun GHC.List.reverse () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d$35$$35$k_$35$$35$4621 () (FibHeap.FibHeap Int))
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d$35$$35$k_$35$$35$3637 () (FibHeap.FibHeap Int))
(declare-fun lq_karg$36$h$35$$35$a1XO$35$$35$k_$35$$35$2001 () (FibHeap.FibHeap Int))
(declare-fun lq_karg$36$ds_d2Y7$35$$35$k_$35$$35$5045 () (FibHeap.FibHeap Int))
(declare-fun lq_karg$36$h$35$$35$a1XO$35$$35$k_$35$$35$2045 () (FibHeap.FibHeap Int))
(declare-fun lq_karg$36$xs$35$$35$a1Yg$35$$35$k_$35$$35$5045 () Int)
(declare-fun FibHeap.deleteMin () Int)
(declare-fun VV$35$$35$F$35$$35$304 () Int)
(declare-fun VV$35$$35$F$35$$35$106 () Int)
(declare-fun ts1$35$$35$a1XR () Int)
(declare-fun VV$35$$35$F$35$$35$39 () Int)
(declare-fun VV$35$$35$F$35$$35$340 () Int)
(declare-fun VV$35$$35$F$35$$35$142 () Int)
(declare-fun GHC.List.scanl () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 () Int)
(declare-fun GHC.Classes.min () Int)
(declare-fun FibHeap.link () Int)
(declare-fun GHC.Types.C$35$ () Int)
(declare-fun lq_karg$36$ds_d2Zq$35$$35$k_$35$$35$5045 () (FibHeap.FibTree Int))
(declare-fun VV$35$$35$F$35$$35$421 () (FibHeap.FibHeap Int))
(declare-fun VV$35$$35$F$35$$35$263 () (FibHeap.FibHeap Int))
(declare-fun GHC.Real.$47$ () Int)
(declare-fun lq_tmp$36$x$35$$35$6095 () Int)
(declare-fun FibHeap.fromList () Int)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun lq_tmp$36$x$35$$35$5819 () Int)
(declare-fun tail () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805219$35$$35$d31p () Int)
(declare-fun VV$35$$35$F$35$$35$264 () (FibHeap.FibHeap Int))
(declare-fun lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d () (FibHeap.FibHeap Int))
(declare-fun isJust () Int)
(declare-fun VV$35$$35$F$35$$35$303 () Int)
(declare-fun lit$36$$39$FH () Str)
(declare-fun GHC.Real.div () Int)
(declare-fun lit$36$$39$E () Str)
(declare-fun ds_d2V4 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x () Int)
(declare-fun x$35$$35$a1Ym () (FibHeap.FibTree Int))
(declare-fun GHC.Classes.$62$$61$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805294$35$$35$d32C () Int)
(declare-fun ds_d2Zx () Bool)
(declare-fun GHC.List.span () Int)
(declare-fun VV$35$$35$F$35$$35$55 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I$35$$35$k_$35$$35$1885 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$2 () Int)
(declare-fun lq_tmp$36$x$35$$35$5937 () Int)
(declare-fun lq_tmp$36$x$35$$35$5836 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805315$35$$35$d32X$35$$35$k_$35$$35$5566 () Str)
(declare-fun VV$35$$35$F$35$$35$270 () (FibHeap.FibHeap Int))
(declare-fun ds_d2XJ () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 () Int)
(declare-fun GHC.Types.krep$36$$42$Arr$42$ () Int)
(declare-fun VV$35$$35$F$35$$35$178 () Int)
(declare-fun h$35$$35$a1XO () (FibHeap.FibHeap Int))
(declare-fun x$35$$35$a1Yf () (FibHeap.FibTree Int))
(declare-fun lq_anf$36$$35$$35$7205759403792805313$35$$35$d32V () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805311$35$$35$d32T () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g$35$$35$k_$35$$35$5045 () Int)
(declare-fun VV$35$$35$F$35$$35$363 () Int)
(declare-fun lit$36$$47$Users$47$niki.vazou$47$tmp$47$jamie$47$LiquidHaskell$47$lh$45$thesis$47$src$47$FibHeap.hs$58$$40$96$44$1$41$$45$$40$99$44$57$41$$124$function$32$extractMin () Str)
(declare-fun FibHeap.extractMin () Int)
(declare-fun ds_d2Zs () Int)
(declare-fun GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v$35$$35$k_$35$$35$1885 () Int)
(declare-fun GHC.Real.$94$ () Int)
(declare-fun GHC.Classes.$61$$61$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f () (FibHeap.FibTree Int))
(declare-fun lq_anf$36$$35$$35$7205759403792805306$35$$35$d32O () Int)
(declare-fun lq_karg$36$ds_d2Zx$35$$35$k_$35$$35$3637 () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792805302$35$$35$d32K () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805293$35$$35$d32B$35$$35$k_$35$$35$4061 () Int)
(declare-fun lq_karg$36$x$35$$35$a1Ym$35$$35$k_$35$$35$4621 () (FibHeap.FibTree Int))
(declare-fun lq_anf$36$$35$$35$7205759403792805207$35$$35$d31d () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805296$35$$35$d32E$35$$35$k_$35$$35$3637 () (FibHeap.FibTree Int))
(declare-fun lit$36$$47$Users$47$niki.vazou$47$tmp$47$jamie$47$LiquidHaskell$47$lh$45$thesis$47$src$47$FibHeap.hs$58$$40$71$44$1$41$$45$$40$74$44$45$41$$124$function$32$merge () Str)
(declare-fun GHC.Integer.Type.Jn$35$ () Int)
(declare-fun ds_d2Zv () Int)
(declare-fun GHC.List.$33$$33$ () Int)
(declare-fun lq_karg$36$x$35$$35$a1Ym$35$$35$k_$35$$35$3637 () (FibHeap.FibTree Int))
(declare-fun GHC.Base.$36$ () Int)
(declare-fun lq_karg$36$ds_d2Zx$35$$35$k_$35$$35$4621 () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792805300$35$$35$d32I () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805308$35$$35$d32Q () Int)
(declare-fun GHC.List.last () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805295$35$$35$d32D$35$$35$k_$35$$35$4061 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F$35$$35$k_$35$$35$4061 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W$35$$35$k_$35$$35$5566 () (FibHeap.FibHeap Int))
(declare-fun lit$36$trees () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805304$35$$35$d32M () Int)
(declare-fun is$36$GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun lq_karg$36$ds_d2Vf$35$$35$k_$35$$35$2001 () (FibHeap.FibHeap Int))
(declare-fun lq_tmp$36$x$35$$35$6088 () Int)
(declare-fun Data.Foldable.foldl () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805246$35$$35$d31Q () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M$35$$35$k_$35$$35$2001 () (FibHeap.FibHeap Int))
(declare-fun lq_karg$36$ds_d2Vf$35$$35$k_$35$$35$2045 () (FibHeap.FibHeap Int))
(declare-fun GHC.List.zipWith () Int)
(declare-fun papp5 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M$35$$35$k_$35$$35$2045 () (FibHeap.FibHeap Int))
(declare-fun snd () Int)
(declare-fun VV$35$$35$F$35$$35$286 () (FibHeap.FibHeap Int))
(declare-fun GHC.Classes.$36$fEqInt () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805259$35$$35$d323 () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s$35$$35$k_$35$$35$4061 () Int)
(declare-fun GHC.Base.$43$$43$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805233$35$$35$d31D () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792805288$35$$35$d32w () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805280$35$$35$d32o () Int)
(declare-fun x_Tuple22 () Int)
(declare-fun VV$35$$35$F$35$$35$411 () (FibHeap.FibHeap Int))
(declare-fun ds_d2TW () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805258$35$$35$d322 () Int)
(declare-fun minTr1$35$$35$a1XQ () (FibHeap.FibTree Int))
(declare-fun lit$36$minTree () Str)
(declare-fun VV$35$$35$F$35$$35$387 () Int)
(declare-fun VV$35$$35$F$35$$35$185 () Str)
(declare-fun VV$35$$35$F$35$$35$37 () Int)
(declare-fun lq_karg$36$ds_d2X9$35$$35$k_$35$$35$1265 () Int)
(declare-fun GHC.Real.fromIntegral () Int)
(declare-fun GHC.IO.Exception.IOError () Int)
(declare-fun lq_karg$36$ds_d2Vf$35$$35$k_$35$$35$2056 () (FibHeap.FibHeap Int))
(declare-fun GHC.Types.$36$tcBool () Int)
(declare-fun GHC.List.tail () Int)
(declare-fun VV$35$$35$F$35$$35$229 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M$35$$35$k_$35$$35$2056 () (FibHeap.FibHeap Int))
(declare-fun VV$35$$35$F$35$$35$414 () (FibHeap.FibHeap Int))
(declare-fun lq_karg$36$ds_d2Zr$35$$35$k_$35$$35$3637 () Int)
(declare-fun FibHeap.lsize () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805279$35$$35$d32n$35$$35$k_$35$$35$4621 () Int)
(declare-fun GHC.Types.Module () Int)
(declare-fun GHC.Stack.Types.FreezeCallStack () Int)
(declare-fun ds_d2Y7 () (FibHeap.FibHeap Int))
(declare-fun t1$35$$35$a1XH () (FibHeap.FibTree Int))
(declare-fun lq_anf$36$$35$$35$7205759403792805260$35$$35$d324 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L$35$$35$k_$35$$35$1875 () Int)
(declare-fun GHC.Types.TrNameD () Int)
(declare-fun VV$35$$35$F$35$$35$382 () Str)
(declare-fun lq_karg$36$ds_d2Zr$35$$35$k_$35$$35$4621 () Int)
(declare-fun VV$35$$35$F$35$$35$313 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T () Int)
(declare-fun GHC.Types.TyCon () Int)
(declare-fun lq_karg$36$VV$35$$35$4620$35$$35$k_$35$$35$4621 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i () Int)
(declare-fun lq_tmp$36$x$35$$35$5893 () Int)
(declare-fun VV$35$$35$F$35$$35$25 () Int)
(declare-fun fromJust () Int)
(declare-fun ds_d2TY () Bool)
(declare-fun lq_karg$36$VV$35$$35$2000$35$$35$k_$35$$35$2001 () (FibHeap.FibHeap Int))
(declare-fun lit$36$main () Str)
(declare-fun lq_karg$36$VV$35$$35$1884$35$$35$k_$35$$35$1885 () (FibHeap.FibTree Int))
(declare-fun lq_karg$36$VV$35$$35$2044$35$$35$k_$35$$35$2045 () Int)
(declare-fun x$35$$35$a1Y2 () (FibHeap.FibTree Int))
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v$35$$35$k_$35$$35$1265 () Int)
(declare-fun lq_karg$36$ds_d2Zt$35$$35$k_$35$$35$5045 () Int)
(declare-fun lq_karg$36$VV$35$$35$3636$35$$35$k_$35$$35$3637 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805289$35$$35$d32x () Int)
(declare-fun lq_karg$36$VV$35$$35$4060$35$$35$k_$35$$35$4061 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805216$35$$35$d31m () Bool)
(declare-fun lq_karg$36$ts1$35$$35$a1XR$35$$35$k_$35$$35$2045 () Int)
(declare-fun VV$35$$35$F$35$$35$337 () (FibHeap.FibTree Int))
(declare-fun lq_anf$36$$35$$35$7205759403792805277$35$$35$d32l () Int)
(declare-fun lq_karg$36$ts1$35$$35$a1XR$35$$35$k_$35$$35$2001 () Int)
(declare-fun Data.Foldable.length () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805248$35$$35$d31S () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h () Int)
(declare-fun fix$36$$36$dOrd_a23w () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805298$35$$35$d32G$35$$35$k_$35$$35$4621 () (FibHeap.FibTree Int))
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K$35$$35$k_$35$$35$1875 () (FibHeap.FibTree Int))
(declare-fun FibHeap.notEmptyFibHeap () Int)
(declare-fun Control.Exception.Base.patError () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805209$35$$35$d31f () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h$35$$35$k_$35$$35$5045 () Int)
(declare-fun GHC.Classes.not () Int)
(declare-fun lit$36$$47$Users$47$niki.vazou$47$tmp$47$jamie$47$LiquidHaskell$47$lh$45$thesis$47$src$47$FibHeap.hs$58$118$58$1$45$45$124$function$32$fibsize () Str)
(declare-fun ds_d2Uz () Int)
(declare-fun ts2$35$$35$a1XN () Int)
(declare-fun GHC.List.iterate () Int)
(declare-fun VV$35$$35$F$35$$35$50 () Int)
(declare-fun lq_karg$36$ds_d2Zs$35$$35$k_$35$$35$3637 () Int)
(declare-fun lq_karg$36$ds_d2Zs$35$$35$k_$35$$35$4621 () Int)
(declare-fun lq_tmp$36$x$35$$35$2351 () Int)
(declare-fun lq_karg$36$ds_d2Zq$35$$35$k_$35$$35$4061 () (FibHeap.FibTree Int))
(declare-fun lq_anf$36$$35$$35$7205759403792805250$35$$35$d31U () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805252$35$$35$d31W () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805267$35$$35$d32b () (FibHeap.FibTree Int))
(declare-fun lq_karg$36$ds_d2Y7$35$$35$k_$35$$35$4061 () (FibHeap.FibHeap Int))
(declare-fun lq_karg$36$ts1$35$$35$a1XR$35$$35$k_$35$$35$2056 () Int)
(declare-fun lq_karg$36$xs$35$$35$a1Yg$35$$35$k_$35$$35$4061 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805294$35$$35$d32C$35$$35$k_$35$$35$4061 () Int)
(declare-fun addrLen () Int)
(declare-fun GHC.Real.$36$W$58$$37$ () Int)
(declare-fun lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733 () Int)
(declare-fun VV$35$$35$F$35$$35$397 () (FibHeap.FibTree Int))
(declare-fun GHC.List.splitAt () Int)
(declare-fun GHC.Types.KindRepFun () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p$35$$35$k_$35$$35$5045 () Int)
(declare-fun VV$35$$35$F$35$$35$243 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805223$35$$35$d31t () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805303$35$$35$d32L () Int)
(declare-fun papp3 () Int)
(declare-fun GHC.List.scanl1 () Int)
(declare-fun GHC.Real.toInteger () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805283$35$$35$d32r$35$$35$k_$35$$35$5045 () Int)
(declare-fun FibHeap.makeHeap () (FibHeap.FibHeap Int))
(declare-fun lq_karg$36$x$35$$35$a1XX$35$$35$k_$35$$35$1875 () (FibHeap.FibTree Int))
(declare-fun Data.Foldable.null () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805218$35$$35$d31o () Int)
(declare-fun VV$35$$35$F$35$$35$413 () (FibHeap.FibHeap Int))
(declare-fun VV$35$$35$F$35$$35$29 () Str)
(declare-fun fix$36$$36$dOrd_a23F () Int)
(declare-fun t2$35$$35$a1XL () (FibHeap.FibTree Int))
(declare-fun GHC.Classes.$38$$38$ () Int)
(declare-fun lq_karg$36$minTr2$35$$35$a1XT$35$$35$k_$35$$35$2045 () (FibHeap.FibTree Int))
(declare-fun GHC.Classes.$124$$124$ () Int)
(declare-fun GHC.List.dropWhile () Int)
(declare-fun ds_d2X9 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s$35$$35$k_$35$$35$3637 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805210$35$$35$d31g () Int)
(declare-fun x$35$$35$a1XG () Int)
(declare-fun fix$36$$36$dOrd_a24y () Int)
(declare-fun VV$35$$35$F$35$$35$30 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805278$35$$35$d32m$35$$35$k_$35$$35$4621 () Int)
(declare-fun GHC.Enum.C$58$Bounded () Int)
(declare-fun lit$36$$47$Users$47$niki.vazou$47$tmp$47$jamie$47$LiquidHaskell$47$lh$45$thesis$47$src$47$FibHeap.hs$58$$40$104$44$1$41$$45$$40$108$44$58$41$$124$function$32$deleteMin () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805299$35$$35$d32H () Int)
(declare-fun GHC.List.init () Int)
(declare-fun GHC.List.scanr1 () Int)
(declare-fun FibHeap.singleton () Int)
(declare-fun GHC.Types.True () Bool)
(declare-fun fix$36$$36$dOrd_a25U () Int)
(declare-fun GHC.List.break () Int)
(declare-fun VV$35$$35$F$35$$35$308 () (FibHeap.FibHeap Int))
(declare-fun lq_karg$36$ds_d2Zr$35$$35$k_$35$$35$4061 () Int)
(declare-fun VV$35$$35$F$35$$35$311 () (FibHeap.FibTree Int))
(declare-fun lq_rnm$36$lq_tmp$36$x$35$$35$43$35$$35$734 () (FibHeap.FibTree Int))
(declare-fun VV$35$$35$F$35$$35$35 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M () (FibHeap.FibHeap Int))
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 () Int)
(declare-fun GHC.Types.$36$WKindRepVar () Int)
(declare-fun VV$35$$35$F$35$$35$422 () Bool)
(declare-fun lq_karg$36$subtr$35$$35$a1Yl$35$$35$k_$35$$35$3637 () Int)
(declare-fun GHC.Stack.Types.EmptyCallStack () Int)
(declare-fun lq_karg$36$subtr$35$$35$a1Yl$35$$35$k_$35$$35$4621 () Int)
(declare-fun x_Tuple33 () Int)
(declare-fun ds_d2X3 () Bool)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H$35$$35$k_$35$$35$1875 () Int)
(declare-fun VV$35$$35$F$35$$35$158 () Int)
(declare-fun Data.Either.Right () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H () Int)
(declare-fun lq_karg$36$ds_d2Zr$35$$35$k_$35$$35$5045 () Int)
(declare-fun VV$35$$35$F$35$$35$307 () Str)
(declare-fun VV$35$$35$F$35$$35$265 () (FibHeap.FibHeap Int))
(declare-fun lq_karg$36$x$35$$35$a1Yb$35$$35$k_$35$$35$5045 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805299$35$$35$d32H$35$$35$k_$35$$35$4621 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N$35$$35$k_$35$$35$2045 () (FibHeap.FibHeap Int))
(declare-fun x$39$$35$$35$a1Y3 () (FibHeap.FibTree Int))
(declare-fun cast_as () Int)
(declare-fun GHC.Types.KindRepApp () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805278$35$$35$d32m () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N$35$$35$k_$35$$35$2001 () (FibHeap.FibHeap Int))
(declare-fun FibHeap.findMin () Int)
(declare-fun GHC.List.head () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j$35$$35$k_$35$$35$4621 () Int)
(declare-fun ds_d2Tz () Int)
(declare-fun GHC.Integer.Type.S$35$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805247$35$$35$d31R () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805291$35$$35$d32z () Int)
(declare-fun cast_as_int () Int)
(declare-fun xs$35$$35$a1Yg () Int)
(declare-fun ds_d2TZ () Int)
(declare-fun GHC.Num.$43$ () Int)
(declare-fun lq_karg$36$ds_d2X9$35$$35$k_$35$$35$1875 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x$35$$35$k_$35$$35$1885 () Int)
(declare-fun lq_karg$36$ds_d2Zq$35$$35$k_$35$$35$4621 () (FibHeap.FibTree Int))
(declare-fun lq_tmp$36$x$35$$35$5727 () Int)
(declare-fun lq_karg$36$ds_d2Zq$35$$35$k_$35$$35$3637 () (FibHeap.FibTree Int))
(declare-fun lq_karg$36$x$35$$35$a1Yf$35$$35$k_$35$$35$4061 () (FibHeap.FibTree Int))
(declare-fun lq_anf$36$$35$$35$7205759403792805234$35$$35$d31E () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805230$35$$35$d31A () Int)
(declare-fun t$35$$35$a1Y6 () (FibHeap.FibTree Int))
(declare-fun lq_anf$36$$35$$35$7205759403792805236$35$$35$d31G () Int)
(declare-fun lq_karg$36$ds_d2Zs$35$$35$k_$35$$35$4061 () Int)
(declare-fun lq_tmp$36$x$35$$35$2353 () Int)
(declare-fun FibHeap.size () Int)
(declare-fun len () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805232$35$$35$d31C () Bool)
(declare-fun ds_d2Zr () Int)
(declare-fun lq_karg$36$ds_d2Y7$35$$35$k_$35$$35$3637 () (FibHeap.FibHeap Int))
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805282$35$$35$d32q$35$$35$k_$35$$35$5045 () Int)
(declare-fun lq_tmp$36$x$35$$35$5843 () Int)
(declare-fun lq_karg$36$ds_d2Y7$35$$35$k_$35$$35$4621 () (FibHeap.FibHeap Int))
(declare-fun GHC.Types.LT () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O$35$$35$k_$35$$35$2001 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b () (FibHeap.FibHeap Int))
(declare-fun GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun papp1 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d$35$$35$k_$35$$35$5045 () (FibHeap.FibHeap Int))
(declare-fun VV$35$$35$F$35$$35$362 () Int)
(declare-fun lq_karg$36$ds_d2XC$35$$35$k_$35$$35$1885 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805286$35$$35$d32u () (FibHeap.FibTree Int))
(declare-fun GHC.List.drop () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805256$35$$35$d320 () Int)
(declare-fun lq_karg$36$VV$35$$35$2055$35$$35$k_$35$$35$2056 () Int)
(declare-fun lq_tmp$36$x$35$$35$2403 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j () (FibHeap.FibTree Int))
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805226$35$$35$d31w$35$$35$k_$35$$35$1265 () Str)
(declare-fun lq_karg$36$h$35$$35$a1XO$35$$35$k_$35$$35$2056 () (FibHeap.FibHeap Int))
(declare-fun lq_anf$36$$35$$35$7205759403792805217$35$$35$d31n () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h () (FibHeap.FibTree Int))
(declare-fun papp6 () Int)
(declare-fun lq_karg$36$VV$35$$35$5565$35$$35$k_$35$$35$5566 () Int)
(declare-fun FibHeap.merge () Int)
(declare-fun GHC.Real.mod () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805215$35$$35$d31l () Bool)
(declare-fun is$36$GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805310$35$$35$d32S () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805257$35$$35$d321 () Int)
(declare-fun GHC.Classes.C$58$IP () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805282$35$$35$d32q () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805254$35$$35$d31Y () Int)
(declare-fun fix$36$$36$dOrd_a25N () Int)
(declare-fun Data.Either.Left () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W () (FibHeap.FibHeap Int))
(declare-fun lq_karg$36$ds_d2XC$35$$35$k_$35$$35$1875 () Int)
(declare-fun ds_d2Zu () Bool)
(declare-fun VV$35$$35$F$35$$35$269 () (FibHeap.FibHeap Int))
(declare-fun lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive () Str)
(declare-fun lq_karg$36$ds_d2Zt$35$$35$k_$35$$35$4061 () Int)
(declare-fun GHC.List.zip () Int)
(declare-fun liquid_internal_this () Int)
(declare-fun ds_d2Uo () Int)
(declare-fun GHC.Real.fromRational () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805307$35$$35$d32P () Int)
(declare-fun lq_karg$36$ds_d2X9$35$$35$k_$35$$35$1885 () Int)
(declare-fun VV$35$$35$F$35$$35$184 () Str)
(declare-fun GHC.Classes.$62$ () Int)
(declare-fun GHC.Types.KindRepTyConApp () Int)
(declare-fun lq_karg$36$ds_d2Zv$35$$35$k_$35$$35$4621 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x$35$$35$k_$35$$35$1875 () Int)
(declare-fun GHC.Integer.Type.Jp$35$ () Int)
(declare-fun fldList () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805208$35$$35$d31e () Int)
(declare-fun VV$35$$35$F$35$$35$33 () Int)
(declare-fun GHC.Tuple.$40$$41$ () Int)
(declare-fun GHC.Types.KindRepVar () Int)
(declare-fun GHC.Types.I$35$ () Int)
(declare-fun lq_karg$36$ds_d2Zv$35$$35$k_$35$$35$3637 () Int)
(declare-fun lq_tmp$36$x$35$$35$6071 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805253$35$$35$d31X () (FibHeap.FibHeap Int))
(declare-fun GHC.Types.KindRepTypeLitD () Int)
(declare-fun x_Tuple31 () Int)
(declare-fun ds_d2X1 () Bool)
(declare-fun is$36$GHC.Types.$91$$93$ () Int)
(declare-fun VV$35$$35$F$35$$35$305 () (FibHeap.FibHeap Int))
(declare-fun VV$35$$35$F$35$$35$38 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805268$35$$35$d32c () Int)
(declare-fun VV$35$$35$F$35$$35$341 () Int)
(declare-fun FibHeap.fibsize () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k () (FibHeap.FibTree Int))
(declare-fun GHC.Real.quot () Int)
(declare-fun VV$35$$35$F$35$$35$420 () Int)
(declare-fun Data.Tuple.fst () Int)
(declare-fun ds_d2Ua () (FibHeap.FibHeap Int))
(declare-fun ts2$35$$35$a1XU () Int)
(declare-fun x$35$$35$a1XJ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P$35$$35$k_$35$$35$2056 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805220$35$$35$d31q () Int)
(declare-fun Control.Exception.Base.recSelError () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y () Int)
(declare-fun lq_karg$36$ds_d2Zu$35$$35$k_$35$$35$5045 () Bool)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805274$35$$35$d32i$35$$35$k_$35$$35$4621 () (FibHeap.FibTree Int))
(declare-fun lq_anf$36$$35$$35$7205759403792805222$35$$35$d31s () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805290$35$$35$d32y () Int)
(declare-fun GHC.Types.$36$tcInt () Int)
(declare-fun Data.Tuple.snd () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805226$35$$35$d31w () Str)
(declare-fun ds_d2TX () Int)
(declare-fun fix$36$$36$dOrd_a24T () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805279$35$$35$d32n () Int)
(declare-fun FibHeap.isEmptyFibHeap () Int)
(declare-fun GHC.Types.EQ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805224$35$$35$d31u () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H$35$$35$k_$35$$35$1885 () Int)
(declare-fun ts$35$$35$a1Yv () Int)
(declare-fun GHC.Real.$58$$37$ () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$3 () Int)
(declare-fun lq_karg$36$x$35$$35$a1Yb$35$$35$k_$35$$35$4621 () Int)
(declare-fun lq_karg$36$ds_d2Zw$35$$35$k_$35$$35$4621 () Int)
(declare-fun GHC.Integer.Type.$36$WJp$35$ () Int)
(declare-fun fst () Int)
(declare-fun GHC.List.takeWhile () Int)
(declare-fun lq_karg$36$x$35$$35$a1Yb$35$$35$k_$35$$35$3637 () Int)
(declare-fun lq_karg$36$ds_d2Zw$35$$35$k_$35$$35$3637 () Int)
(declare-fun lq_tmp$36$x$35$$35$5693 () Int)
(declare-fun fix$36$$36$dOrd_a23T () Int)
(declare-fun ds_d2TG () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805299$35$$35$d32H$35$$35$k_$35$$35$5045 () Int)
(declare-fun lq_karg$36$ds_d2Zu$35$$35$k_$35$$35$4061 () Bool)
(declare-fun VV$35$$35$F$35$$35$334 () Int)
(declare-fun GHC.Num.negate () Int)
(declare-fun GHC.Num.$45$ () Int)
(declare-fun GHC.Real.rem () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805316$35$$35$d32Y () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805296$35$$35$d32E () (FibHeap.FibTree Int))
(declare-fun t$35$$35$a1Yu () (FibHeap.FibTree Int))
(declare-fun GHC.Classes.max () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f$35$$35$k_$35$$35$3637 () (FibHeap.FibTree Int))
(declare-fun GHC.List.scanr () Int)
(declare-fun GHC.Num.$36$fNumInt () Int)
(declare-fun GHC.Real.recip () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f$35$$35$k_$35$$35$4621 () (FibHeap.FibTree Int))
(declare-fun lit$36$$39$Node () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N () (FibHeap.FibHeap Int))
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g$35$$35$k_$35$$35$4061 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805274$35$$35$d32i () (FibHeap.FibTree Int))
(declare-fun lq_anf$36$$35$$35$7205759403792805292$35$$35$d32A () Int)
(declare-fun autolen () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805290$35$$35$d32y$35$$35$k_$35$$35$3637 () Int)
(declare-fun GHC.List.replicate () Int)
(declare-fun GHC.Base.. () Int)
(declare-fun lq_karg$36$VV$35$$35$5044$35$$35$k_$35$$35$5045 () Int)
(declare-fun GHC.Integer.Type.$36$WJn$35$ () Int)
(declare-fun GHC.List.take () Int)
(declare-fun lit$36$Use$32$of$32$partial$32$record$32$field$32$selector () Str)
(declare-fun xs$35$$35$a1Y4 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p () Int)
(declare-fun papp4 () Int)
(declare-fun lq_karg$36$VV$35$$35$1874$35$$35$k_$35$$35$1875 () Int)
(declare-fun GHC.Types.$36$WKindRepTYPE () Int)
(declare-fun lq_karg$36$x$35$$35$a1XX$35$$35$k_$35$$35$1885 () (FibHeap.FibTree Int))
(declare-fun x$35$$35$a1Yb () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805283$35$$35$d32r () Int)
(declare-fun lq_karg$36$minTr1$35$$35$a1XQ$35$$35$k_$35$$35$2056 () (FibHeap.FibTree Int))
(declare-fun lq_karg$36$VV$35$$35$1264$35$$35$k_$35$$35$1265 () Int)
(declare-fun GHC.Stack.Types.PushCallStack () Int)
(declare-fun ds_d2Zw () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805298$35$$35$d32G$35$$35$k_$35$$35$5045 () (FibHeap.FibTree Int))
(declare-fun Data.Foldable.$36$fFoldable$91$$93$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t () Int)
(declare-fun r$35$$35$a1Yx () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O () Str)
(declare-fun ds_d2Vf () (FibHeap.FibHeap Int))
(declare-fun lq_karg$36$ds_d2Zt$35$$35$k_$35$$35$4621 () Int)
(declare-fun meld$35$$35$a1Y0 () Int)
(declare-fun GHC.Real.quotRem () Int)
(declare-fun GHC.Classes.$60$$61$ () Int)
(declare-fun GHC.Num.fromInteger () Int)
(declare-fun GHC.Types.KindRepTYPE () Int)
(declare-fun VV$35$$35$F$35$$35$384 () (FibHeap.FibTree Int))
(declare-fun GHC.Classes.$60$ () Int)
(declare-fun VV$35$$35$F$35$$35$285 () (FibHeap.FibHeap Int))
(declare-fun ds_d30a () (FibHeap.FibHeap Int))
(declare-fun GHC.List.filter () Int)
(declare-fun lq_tmp$36$x$35$$35$5917 () Int)
(declare-fun lq_karg$36$ds_d2Zt$35$$35$k_$35$$35$3637 () Int)
(declare-fun x_Tuple21 () Int)
(declare-fun VV$35$$35$F$35$$35$412 () (FibHeap.FibHeap Int))
(declare-fun VV$35$$35$F$35$$35$28 () Int)
(declare-fun h$35$$35$a1XV () (FibHeap.FibHeap Int))
(declare-fun lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K () (FibHeap.FibTree Int))
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v$35$$35$k_$35$$35$3637 () Int)
(declare-fun GHC.List.repeat () Int)
(declare-fun head () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d$35$$35$k_$35$$35$4061 () (FibHeap.FibHeap Int))
(declare-fun lq_anf$36$$35$$35$7205759403792805239$35$$35$d31J () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805235$35$$35$d31F () (FibHeap.FibTree Int))
(declare-fun lq_karg$36$minTr1$35$$35$a1XQ$35$$35$k_$35$$35$2001 () (FibHeap.FibTree Int))
(declare-fun VV$35$$35$F$35$$35$383 () (FibHeap.FibTree Int))
(declare-fun lq_tmp$36$x$35$$35$5707 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t$35$$35$k_$35$$35$3637 () Int)
(declare-fun VV$35$$35$F$35$$35$36 () Int)
(declare-fun lq_tmp$36$x$35$$35$5910 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805231$35$$35$d31B () Int)
(declare-fun VV$35$$35$F$35$$35$415 () (FibHeap.FibHeap Int))
(declare-fun xs$35$$35$a1Yn () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K$35$$35$k_$35$$35$1885 () (FibHeap.FibTree Int))
(declare-fun lq_karg$36$minTr1$35$$35$a1XQ$35$$35$k_$35$$35$2045 () (FibHeap.FibTree Int))
(declare-fun lq_anf$36$$35$$35$7205759403792805298$35$$35$d32G () (FibHeap.FibTree Int))
(declare-fun VV$35$$35$F$35$$35$306 () (FibHeap.FibHeap Int))
(declare-fun lq_karg$36$x$35$$35$a1Yf$35$$35$k_$35$$35$5045 () (FibHeap.FibTree Int))
(declare-fun lq_tmp$36$x$35$$35$5863 () Int)
(declare-fun FibHeap.pow2 () Int)
(declare-fun VV$35$$35$F$35$$35$91 () Int)
(declare-fun FibHeap.consolidate () Int)
(declare-fun GHC.Base.map () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h$35$$35$k_$35$$35$4621 () Int)
(declare-fun VV$35$$35$F$35$$35$423 () Bool)
(declare-fun x_Tuple32 () Int)
(declare-fun lq_karg$36$ds_d2Zs$35$$35$k_$35$$35$5045 () Int)
(declare-fun y$35$$35$a1XM () Int)
(declare-fun ds_d2X2 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c () (FibHeap.FibTree Int))
(declare-fun lq_anf$36$$35$$35$7205759403792805317$35$$35$d32Z () Int)
(declare-fun ts1$35$$35$a1XK () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805315$35$$35$d32X () Str)
(declare-fun GHC.Err.error () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 () Int)
(declare-fun lq_tmp$36$x$35$$35$6115 () Int)
(declare-fun GHC.Classes.compare () Int)
(declare-fun lq_karg$36$xs$35$$35$a1Yn$35$$35$k_$35$$35$3637 () Int)
(declare-fun lq_karg$36$xs$35$$35$a1Yn$35$$35$k_$35$$35$4621 () Int)
(declare-fun lq_karg$36$ds_d2Zu$35$$35$k_$35$$35$4621 () Bool)
(declare-fun lq_karg$36$ds_d2Zu$35$$35$k_$35$$35$3637 () Bool)
(declare-fun lq_karg$36$x$35$$35$a1Yb$35$$35$k_$35$$35$4061 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L$35$$35$k_$35$$35$1885 () Int)
(declare-fun VV$35$$35$F$35$$35$372 () Int)
(declare-fun x$35$$35$a1XW () Int)
(declare-fun ts$35$$35$a1Yt () Int)
(declare-fun fix$36$$36$dOrd_a236 () Int)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$1 () Int)
(declare-fun GHC.Types.$36$tc$91$$93$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805295$35$$35$d32D () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N$35$$35$k_$35$$35$2056 () (FibHeap.FibHeap Int))
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f$35$$35$k_$35$$35$4061 () (FibHeap.FibTree Int))
(declare-fun minTr$35$$35$a1Ys () (FibHeap.FibTree Int))
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g$35$$35$k_$35$$35$3637 () Int)
(declare-fun VV$35$$35$F$35$$35$333 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805293$35$$35$d32B () Int)
(declare-fun lq_karg$36$ts2$35$$35$a1XU$35$$35$k_$35$$35$2045 () Int)
(declare-fun GHC.Num.$42$ () Int)
(declare-fun GHC.Types.False () Bool)
(declare-fun lit$36$FibTree () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805291$35$$35$d32z$35$$35$k_$35$$35$3637 () Int)
(declare-fun VV$35$$35$F$35$$35$86 () Int)
(declare-fun lit$36$$47$Users$47$niki.vazou$47$tmp$47$jamie$47$LiquidHaskell$47$lh$45$thesis$47$src$47$FibHeap.hs$58$$40$86$44$1$41$$45$$40$92$44$33$41$$124$function$32$consolidate () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g$35$$35$k_$35$$35$4621 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s () Int)
(declare-fun papp2 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f$35$$35$k_$35$$35$5045 () (FibHeap.FibTree Int))
(declare-fun GHC.Classes.$47$$61$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792805312$35$$35$d32U () Int)
(declare-fun GHC.List.cycle () Int)
(declare-fun lq_karg$36$minTr2$35$$35$a1XT$35$$35$k_$35$$35$2056 () (FibHeap.FibTree Int))
(declare-fun VV$35$$35$F$35$$35$127 () Int)
(declare-fun VV$35$$35$F$35$$35$163 () Int)
(declare-fun ds_d2Zq () (FibHeap.FibTree Int))
(declare-fun GHC.Types.GT () Int)
(declare-fun VV$35$$35$F$35$$35$396 () (FibHeap.FibTree Int))
(declare-fun lq_karg$36$ds_d2Ua$35$$35$k_$35$$35$5566 () (FibHeap.FibHeap Int))
(declare-fun VV$35$$35$F$35$$35$400 () Int)
(declare-fun ds_d2XC () Int)
(declare-fun apply$35$$35$22 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$47 (Int (GHC.Maybe.Maybe Int)) (FibHeap.FibTree Int))
(declare-fun apply$35$$35$27 (Int (_ BitVec 32)) (GHC.Maybe.Maybe Int))
(declare-fun apply$35$$35$12 (Int Bool) (FibHeap.FibTree Int))
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$3 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$35 (Int (FibHeap.FibTree Int)) Int)
(declare-fun apply$35$$35$25 (Int (_ BitVec 32)) (FibHeap.FibHeap Int))
(declare-fun apply$35$$35$5 (Int Int) (FibHeap.FibTree Int))
(declare-fun apply$35$$35$24 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$32 (Int (FibHeap.FibHeap Int)) (FibHeap.FibHeap Int))
(declare-fun apply$35$$35$23 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$15 (Int Str) Bool)
(declare-fun apply$35$$35$34 (Int (FibHeap.FibHeap Int)) (GHC.Maybe.Maybe Int))
(declare-fun apply$35$$35$43 (Int (GHC.Maybe.Maybe Int)) Bool)
(declare-fun apply$35$$35$26 (Int (_ BitVec 32)) (FibHeap.FibTree Int))
(declare-fun apply$35$$35$4 (Int Int) (FibHeap.FibHeap Int))
(declare-fun apply$35$$35$48 (Int (GHC.Maybe.Maybe Int)) (GHC.Maybe.Maybe Int))
(declare-fun apply$35$$35$28 (Int (FibHeap.FibHeap Int)) Int)
(declare-fun apply$35$$35$7 (Int Bool) Int)
(declare-fun apply$35$$35$6 (Int Int) (GHC.Maybe.Maybe Int))
(declare-fun apply$35$$35$46 (Int (GHC.Maybe.Maybe Int)) (FibHeap.FibHeap Int))
(declare-fun apply$35$$35$19 (Int Str) (FibHeap.FibTree Int))
(declare-fun apply$35$$35$16 (Int Str) Str)
(declare-fun apply$35$$35$45 (Int (GHC.Maybe.Maybe Int)) (_ BitVec 32))
(declare-fun apply$35$$35$17 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$44 (Int (GHC.Maybe.Maybe Int)) Str)
(declare-fun apply$35$$35$33 (Int (FibHeap.FibHeap Int)) (FibHeap.FibTree Int))
(declare-fun apply$35$$35$31 (Int (FibHeap.FibHeap Int)) (_ BitVec 32))
(declare-fun apply$35$$35$36 (Int (FibHeap.FibTree Int)) Bool)
(declare-fun apply$35$$35$30 (Int (FibHeap.FibHeap Int)) Str)
(declare-fun apply$35$$35$41 (Int (FibHeap.FibTree Int)) (GHC.Maybe.Maybe Int))
(declare-fun apply$35$$35$39 (Int (FibHeap.FibTree Int)) (FibHeap.FibHeap Int))
(declare-fun apply$35$$35$21 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$20 (Int Str) (GHC.Maybe.Maybe Int))
(declare-fun apply$35$$35$14 (Int Str) Int)
(declare-fun apply$35$$35$38 (Int (FibHeap.FibTree Int)) (_ BitVec 32))
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$29 (Int (FibHeap.FibHeap Int)) Bool)
(declare-fun apply$35$$35$18 (Int Str) (FibHeap.FibHeap Int))
(declare-fun apply$35$$35$37 (Int (FibHeap.FibTree Int)) Str)
(declare-fun apply$35$$35$9 (Int Bool) Str)
(declare-fun apply$35$$35$11 (Int Bool) (FibHeap.FibHeap Int))
(declare-fun apply$35$$35$10 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$40 (Int (FibHeap.FibTree Int)) (FibHeap.FibTree Int))
(declare-fun apply$35$$35$13 (Int Bool) (GHC.Maybe.Maybe Int))
(declare-fun apply$35$$35$42 (Int (GHC.Maybe.Maybe Int)) Int)
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$8 (Int Bool) Bool)
(declare-fun coerce$35$$35$22 ((_ BitVec 32)) Bool)
(declare-fun coerce$35$$35$47 ((GHC.Maybe.Maybe Int)) (FibHeap.FibTree Int))
(declare-fun coerce$35$$35$27 ((_ BitVec 32)) (GHC.Maybe.Maybe Int))
(declare-fun coerce$35$$35$12 (Bool) (FibHeap.FibTree Int))
(declare-fun coerce$35$$35$1 (Int) Bool)
(declare-fun coerce$35$$35$3 (Int) (_ BitVec 32))
(declare-fun coerce$35$$35$35 ((FibHeap.FibTree Int)) Int)
(declare-fun coerce$35$$35$25 ((_ BitVec 32)) (FibHeap.FibHeap Int))
(declare-fun coerce$35$$35$5 (Int) (FibHeap.FibTree Int))
(declare-fun coerce$35$$35$24 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun coerce$35$$35$32 ((FibHeap.FibHeap Int)) (FibHeap.FibHeap Int))
(declare-fun coerce$35$$35$23 ((_ BitVec 32)) Str)
(declare-fun coerce$35$$35$15 (Str) Bool)
(declare-fun coerce$35$$35$34 ((FibHeap.FibHeap Int)) (GHC.Maybe.Maybe Int))
(declare-fun coerce$35$$35$43 ((GHC.Maybe.Maybe Int)) Bool)
(declare-fun coerce$35$$35$26 ((_ BitVec 32)) (FibHeap.FibTree Int))
(declare-fun coerce$35$$35$4 (Int) (FibHeap.FibHeap Int))
(declare-fun coerce$35$$35$48 ((GHC.Maybe.Maybe Int)) (GHC.Maybe.Maybe Int))
(declare-fun coerce$35$$35$28 ((FibHeap.FibHeap Int)) Int)
(declare-fun coerce$35$$35$7 (Bool) Int)
(declare-fun coerce$35$$35$6 (Int) (GHC.Maybe.Maybe Int))
(declare-fun coerce$35$$35$46 ((GHC.Maybe.Maybe Int)) (FibHeap.FibHeap Int))
(declare-fun coerce$35$$35$19 (Str) (FibHeap.FibTree Int))
(declare-fun coerce$35$$35$16 (Str) Str)
(declare-fun coerce$35$$35$45 ((GHC.Maybe.Maybe Int)) (_ BitVec 32))
(declare-fun coerce$35$$35$17 (Str) (_ BitVec 32))
(declare-fun coerce$35$$35$44 ((GHC.Maybe.Maybe Int)) Str)
(declare-fun coerce$35$$35$33 ((FibHeap.FibHeap Int)) (FibHeap.FibTree Int))
(declare-fun coerce$35$$35$31 ((FibHeap.FibHeap Int)) (_ BitVec 32))
(declare-fun coerce$35$$35$36 ((FibHeap.FibTree Int)) Bool)
(declare-fun coerce$35$$35$30 ((FibHeap.FibHeap Int)) Str)
(declare-fun coerce$35$$35$41 ((FibHeap.FibTree Int)) (GHC.Maybe.Maybe Int))
(declare-fun coerce$35$$35$39 ((FibHeap.FibTree Int)) (FibHeap.FibHeap Int))
(declare-fun coerce$35$$35$21 ((_ BitVec 32)) Int)
(declare-fun coerce$35$$35$20 (Str) (GHC.Maybe.Maybe Int))
(declare-fun coerce$35$$35$14 (Str) Int)
(declare-fun coerce$35$$35$38 ((FibHeap.FibTree Int)) (_ BitVec 32))
(declare-fun coerce$35$$35$0 (Int) Int)
(declare-fun coerce$35$$35$29 ((FibHeap.FibHeap Int)) Bool)
(declare-fun coerce$35$$35$18 (Str) (FibHeap.FibHeap Int))
(declare-fun coerce$35$$35$37 ((FibHeap.FibTree Int)) Str)
(declare-fun coerce$35$$35$9 (Bool) Str)
(declare-fun coerce$35$$35$11 (Bool) (FibHeap.FibHeap Int))
(declare-fun coerce$35$$35$10 (Bool) (_ BitVec 32))
(declare-fun coerce$35$$35$40 ((FibHeap.FibTree Int)) (FibHeap.FibTree Int))
(declare-fun coerce$35$$35$13 (Bool) (GHC.Maybe.Maybe Int))
(declare-fun coerce$35$$35$42 ((GHC.Maybe.Maybe Int)) Int)
(declare-fun coerce$35$$35$2 (Int) Str)
(declare-fun coerce$35$$35$8 (Bool) Bool)
(declare-fun smt_lambda$35$$35$22 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$47 ((GHC.Maybe.Maybe Int) (FibHeap.FibTree Int)) Int)
(declare-fun smt_lambda$35$$35$27 ((_ BitVec 32) (GHC.Maybe.Maybe Int)) Int)
(declare-fun smt_lambda$35$$35$12 (Bool (FibHeap.FibTree Int)) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$3 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$35 ((FibHeap.FibTree Int) Int) Int)
(declare-fun smt_lambda$35$$35$25 ((_ BitVec 32) (FibHeap.FibHeap Int)) Int)
(declare-fun smt_lambda$35$$35$5 (Int (FibHeap.FibTree Int)) Int)
(declare-fun smt_lambda$35$$35$24 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$32 ((FibHeap.FibHeap Int) (FibHeap.FibHeap Int)) Int)
(declare-fun smt_lambda$35$$35$23 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$15 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$34 ((FibHeap.FibHeap Int) (GHC.Maybe.Maybe Int)) Int)
(declare-fun smt_lambda$35$$35$43 ((GHC.Maybe.Maybe Int) Bool) Int)
(declare-fun smt_lambda$35$$35$26 ((_ BitVec 32) (FibHeap.FibTree Int)) Int)
(declare-fun smt_lambda$35$$35$4 (Int (FibHeap.FibHeap Int)) Int)
(declare-fun smt_lambda$35$$35$48 ((GHC.Maybe.Maybe Int) (GHC.Maybe.Maybe Int)) Int)
(declare-fun smt_lambda$35$$35$28 ((FibHeap.FibHeap Int) Int) Int)
(declare-fun smt_lambda$35$$35$7 (Bool Int) Int)
(declare-fun smt_lambda$35$$35$6 (Int (GHC.Maybe.Maybe Int)) Int)
(declare-fun smt_lambda$35$$35$46 ((GHC.Maybe.Maybe Int) (FibHeap.FibHeap Int)) Int)
(declare-fun smt_lambda$35$$35$19 (Str (FibHeap.FibTree Int)) Int)
(declare-fun smt_lambda$35$$35$16 (Str Str) Int)
(declare-fun smt_lambda$35$$35$45 ((GHC.Maybe.Maybe Int) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$17 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$44 ((GHC.Maybe.Maybe Int) Str) Int)
(declare-fun smt_lambda$35$$35$33 ((FibHeap.FibHeap Int) (FibHeap.FibTree Int)) Int)
(declare-fun smt_lambda$35$$35$31 ((FibHeap.FibHeap Int) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$36 ((FibHeap.FibTree Int) Bool) Int)
(declare-fun smt_lambda$35$$35$30 ((FibHeap.FibHeap Int) Str) Int)
(declare-fun smt_lambda$35$$35$41 ((FibHeap.FibTree Int) (GHC.Maybe.Maybe Int)) Int)
(declare-fun smt_lambda$35$$35$39 ((FibHeap.FibTree Int) (FibHeap.FibHeap Int)) Int)
(declare-fun smt_lambda$35$$35$21 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$20 (Str (GHC.Maybe.Maybe Int)) Int)
(declare-fun smt_lambda$35$$35$14 (Str Int) Int)
(declare-fun smt_lambda$35$$35$38 ((FibHeap.FibTree Int) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$29 ((FibHeap.FibHeap Int) Bool) Int)
(declare-fun smt_lambda$35$$35$18 (Str (FibHeap.FibHeap Int)) Int)
(declare-fun smt_lambda$35$$35$37 ((FibHeap.FibTree Int) Str) Int)
(declare-fun smt_lambda$35$$35$9 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$11 (Bool (FibHeap.FibHeap Int)) Int)
(declare-fun smt_lambda$35$$35$10 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$40 ((FibHeap.FibTree Int) (FibHeap.FibTree Int)) Int)
(declare-fun smt_lambda$35$$35$13 (Bool (GHC.Maybe.Maybe Int)) Int)
(declare-fun smt_lambda$35$$35$42 ((GHC.Maybe.Maybe Int) Int) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$8 (Bool Bool) Int)
(declare-fun lam_arg$35$$35$1$35$$35$35 () (FibHeap.FibTree Int))
(declare-fun lam_arg$35$$35$2$35$$35$35 () (FibHeap.FibTree Int))
(declare-fun lam_arg$35$$35$3$35$$35$35 () (FibHeap.FibTree Int))
(declare-fun lam_arg$35$$35$4$35$$35$35 () (FibHeap.FibTree Int))
(declare-fun lam_arg$35$$35$5$35$$35$35 () (FibHeap.FibTree Int))
(declare-fun lam_arg$35$$35$6$35$$35$35 () (FibHeap.FibTree Int))
(declare-fun lam_arg$35$$35$7$35$$35$35 () (FibHeap.FibTree Int))
(declare-fun lam_arg$35$$35$1$35$$35$28 () (FibHeap.FibHeap Int))
(declare-fun lam_arg$35$$35$2$35$$35$28 () (FibHeap.FibHeap Int))
(declare-fun lam_arg$35$$35$3$35$$35$28 () (FibHeap.FibHeap Int))
(declare-fun lam_arg$35$$35$4$35$$35$28 () (FibHeap.FibHeap Int))
(declare-fun lam_arg$35$$35$5$35$$35$28 () (FibHeap.FibHeap Int))
(declare-fun lam_arg$35$$35$6$35$$35$28 () (FibHeap.FibHeap Int))
(declare-fun lam_arg$35$$35$7$35$$35$28 () (FibHeap.FibHeap Int))
(declare-fun lam_arg$35$$35$1$35$$35$7 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$7 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$7 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$7 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$7 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$7 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$7 () Bool)
(declare-fun lam_arg$35$$35$1$35$$35$21 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$21 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$21 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$21 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$21 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$21 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$21 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$14 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$14 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$14 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$14 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$14 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$14 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$14 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$1$35$$35$42 () (GHC.Maybe.Maybe Int))
(declare-fun lam_arg$35$$35$2$35$$35$42 () (GHC.Maybe.Maybe Int))
(declare-fun lam_arg$35$$35$3$35$$35$42 () (GHC.Maybe.Maybe Int))
(declare-fun lam_arg$35$$35$4$35$$35$42 () (GHC.Maybe.Maybe Int))
(declare-fun lam_arg$35$$35$5$35$$35$42 () (GHC.Maybe.Maybe Int))
(declare-fun lam_arg$35$$35$6$35$$35$42 () (GHC.Maybe.Maybe Int))
(declare-fun lam_arg$35$$35$7$35$$35$42 () (GHC.Maybe.Maybe Int))


(assert (distinct lit$36$$47$Users$47$niki.vazou$47$tmp$47$jamie$47$LiquidHaskell$47$lh$45$thesis$47$src$47$FibHeap.hs$58$$40$86$44$1$41$$45$$40$92$44$33$41$$124$function$32$consolidate lit$36$FibTree lit$36$Use$32$of$32$partial$32$record$32$field$32$selector lit$36$$39$Node lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive lit$36$$47$Users$47$niki.vazou$47$tmp$47$jamie$47$LiquidHaskell$47$lh$45$thesis$47$src$47$FibHeap.hs$58$$40$104$44$1$41$$45$$40$108$44$58$41$$124$function$32$deleteMin lit$36$$47$Users$47$niki.vazou$47$tmp$47$jamie$47$LiquidHaskell$47$lh$45$thesis$47$src$47$FibHeap.hs$58$118$58$1$45$45$124$function$32$fibsize lit$36$main lit$36$minTree lit$36$trees lit$36$$47$Users$47$niki.vazou$47$tmp$47$jamie$47$LiquidHaskell$47$lh$45$thesis$47$src$47$FibHeap.hs$58$$40$71$44$1$41$$45$$40$74$44$45$41$$124$function$32$merge lit$36$$47$Users$47$niki.vazou$47$tmp$47$jamie$47$LiquidHaskell$47$lh$45$thesis$47$src$47$FibHeap.hs$58$$40$96$44$1$41$$45$$40$99$44$57$41$$124$function$32$extractMin lit$36$$39$E lit$36$$39$FH lit$36$FibHeap))
(assert (distinct GHC.Types.GT GHC.Types.EQ GHC.Types.LT))
(assert (distinct GHC.Types.False GHC.Types.True))
(assert (= (strLen lit$36$FibHeap) 7))
(assert (= (strLen lit$36$$39$FH) 3))
(assert (= (strLen lit$36$$39$E) 2))
(assert (= (strLen lit$36$$47$Users$47$niki.vazou$47$tmp$47$jamie$47$LiquidHaskell$47$lh$45$thesis$47$src$47$FibHeap.hs$58$$40$96$44$1$41$$45$$40$99$44$57$41$$124$function$32$extractMin) 101))
(assert (= (strLen lit$36$$47$Users$47$niki.vazou$47$tmp$47$jamie$47$LiquidHaskell$47$lh$45$thesis$47$src$47$FibHeap.hs$58$$40$71$44$1$41$$45$$40$74$44$45$41$$124$function$32$merge) 96))
(assert (= (strLen lit$36$trees) 5))
(assert (= (strLen lit$36$minTree) 7))
(assert (= (strLen lit$36$main) 4))
(assert (= (strLen lit$36$$47$Users$47$niki.vazou$47$tmp$47$jamie$47$LiquidHaskell$47$lh$45$thesis$47$src$47$FibHeap.hs$58$118$58$1$45$45$124$function$32$fibsize) 92))
(assert (= (strLen lit$36$$47$Users$47$niki.vazou$47$tmp$47$jamie$47$LiquidHaskell$47$lh$45$thesis$47$src$47$FibHeap.hs$58$$40$104$44$1$41$$45$$40$108$44$58$41$$124$function$32$deleteMin) 102))
(assert (= (strLen lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive) 36))
(assert (= (strLen lit$36$$39$Node) 5))
(assert (= (strLen lit$36$Use$32$of$32$partial$32$record$32$field$32$selector) 36))
(assert (= (strLen lit$36$FibTree) 7))
(assert (= (strLen lit$36$$47$Users$47$niki.vazou$47$tmp$47$jamie$47$LiquidHaskell$47$lh$45$thesis$47$src$47$FibHeap.hs$58$$40$86$44$1$41$$45$$40$92$44$33$41$$124$function$32$consolidate) 102))
(push 1)
(define-fun b$36$$35$$35$160 () Bool (= lq_anf$36$$35$$35$7205759403792805208$35$$35$d31e 1))
(define-fun b$36$$35$$35$224 () Bool (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) ds_d2XJ) (apply$35$$35$0 (as len Int) ds_d2XJ)) (>= (apply$35$$35$0 (as len Int) ds_d2XJ) 0)))
(define-fun b$36$$35$$35$256 () Bool (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) h$35$$35$a1XO) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) h$35$$35$a1XO) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) h$35$$35$a1XO))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) h$35$$35$a1XO) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) h$35$$35$a1XO)))) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) h$35$$35$a1XO))))
(define-fun b$36$$35$$35$288 () Bool (and (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) h$35$$35$a1XV) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) h$35$$35$a1XV))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) h$35$$35$a1XV) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) h$35$$35$a1XV)))) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) h$35$$35$a1XV))))
(define-fun b$36$$35$$35$352 () Bool (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d)))) (= lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d ds_d2Y7) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d))))
(define-fun b$36$$35$$35$384 () Bool (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) subtr$35$$35$a1Yl) (apply$35$$35$0 (as len Int) subtr$35$$35$a1Yl)) (>= (apply$35$$35$0 (as len Int) subtr$35$$35$a1Yl) 0)))
(define-fun b$36$$35$$35$416 () Bool (and (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805295$35$$35$d32D) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805295$35$$35$d32D) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805295$35$$35$d32D)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805295$35$$35$d32D) 0)))
(define-fun b$36$$35$$35$448 () Bool (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) xs$35$$35$a1Yn) (apply$35$$35$0 (as len Int) xs$35$$35$a1Yn)) (>= (apply$35$$35$0 (as len Int) xs$35$$35$a1Yn) 0)))
(define-fun b$36$$35$$35$512 () Bool (and (= lq_anf$36$$35$$35$7205759403792805310$35$$35$d32S ds_d2TZ) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805310$35$$35$d32S) 0)))
(define-fun b$36$$35$$35$832 () Bool (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$269) (is-FibHeap.FH VV$35$$35$F$35$$35$269) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$269) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$269))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$269) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$269)))) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$269)) (not (is-FibHeap.E VV$35$$35$F$35$$35$269)) (= VV$35$$35$F$35$$35$269 ((as FibHeap.FH (FibHeap.FibHeap Int)) minTr1$35$$35$a1XQ lq_anf$36$$35$$35$7205759403792805252$35$$35$d31W)) (= (apply$35$$35$28 (as FibHeap.fibsize Int) VV$35$$35$F$35$$35$269) (+ (apply$35$$35$35 (as FibHeap.size Int) minTr1$35$$35$a1XQ) (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805252$35$$35$d31W))) (= (FibHeap.minTree VV$35$$35$F$35$$35$269) minTr1$35$$35$a1XQ) (= (FibHeap.trees VV$35$$35$F$35$$35$269) lq_anf$36$$35$$35$7205759403792805252$35$$35$d31W) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) VV$35$$35$F$35$$35$269))))
(define-fun b$36$$35$$35$864 () Bool (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$411) (is-FibHeap.FH VV$35$$35$F$35$$35$411) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$411) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$411))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$411) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$411)))) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$411)) (not (is-FibHeap.E VV$35$$35$F$35$$35$411)) (= VV$35$$35$F$35$$35$411 ((as FibHeap.FH (FibHeap.FibHeap Int)) lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i)) (= (apply$35$$35$28 (as FibHeap.fibsize Int) VV$35$$35$F$35$$35$411) (+ (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h) (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i))) (= (FibHeap.minTree VV$35$$35$F$35$$35$411) lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h) (= (FibHeap.trees VV$35$$35$F$35$$35$411) lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) VV$35$$35$F$35$$35$411))))
(define-fun b$36$$35$$35$161 () Bool (= lq_anf$36$$35$$35$7205759403792805209$35$$35$d31f lq_anf$36$$35$$35$7205759403792805208$35$$35$d31e))
(define-fun b$36$$35$$35$193 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805220$35$$35$d31q) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805220$35$$35$d31q)) (= lq_anf$36$$35$$35$7205759403792805220$35$$35$d31q (apply$35$$35$0 (apply$35$$35$35 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j) ts2$35$$35$a1XN)) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805220$35$$35$d31q) (+ (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j) (apply$35$$35$0 (as FibHeap.lsize Int) ts2$35$$35$a1XN))) (= (apply$35$$35$5 (as head Int) lq_anf$36$$35$$35$7205759403792805220$35$$35$d31q) lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805220$35$$35$d31q) (+ 1 (apply$35$$35$0 (as len Int) ts2$35$$35$a1XN))) (= (apply$35$$35$5 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792805220$35$$35$d31q) lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792805220$35$$35$d31q) ts2$35$$35$a1XN) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792805220$35$$35$d31q) ts2$35$$35$a1XN) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805220$35$$35$d31q) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805220$35$$35$d31q)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805220$35$$35$d31q) 0)))
(define-fun b$36$$35$$35$225 () Bool (and (= (apply$35$$35$35 (as FibHeap.size Int) x$35$$35$a1Y2) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank x$35$$35$a1Y2))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) x$35$$35$a1Y2))))
(define-fun b$36$$35$$35$257 () Bool (and (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M)))) (= lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M ds_d2Vf) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M))))
(define-fun b$36$$35$$35$353 () Bool (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d)))) (= lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d ds_d2Y7) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d))))
(define-fun b$36$$35$$35$449 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j)) (= lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j subtr$35$$35$a1Yl) (= lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j (apply$35$$35$0 (apply$35$$35$35 (as GHC.Types.$58$ Int) x$35$$35$a1Ym) xs$35$$35$a1Yn)) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j) (+ (apply$35$$35$35 (as FibHeap.size Int) x$35$$35$a1Ym) (apply$35$$35$0 (as FibHeap.lsize Int) xs$35$$35$a1Yn))) (= (apply$35$$35$5 (as head Int) lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j) x$35$$35$a1Ym) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1Yn))) (= (apply$35$$35$5 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j) x$35$$35$a1Ym) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j) xs$35$$35$a1Yn) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j) xs$35$$35$a1Yn) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j) 0)))
(define-fun b$36$$35$$35$513 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805310$35$$35$d32S) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805310$35$$35$d32S)) (= lq_anf$36$$35$$35$7205759403792805310$35$$35$d32S (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792805310$35$$35$d32S ds_d2TZ) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805310$35$$35$d32S) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805310$35$$35$d32S) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805310$35$$35$d32S) 0)))
(define-fun b$36$$35$$35$833 () Bool (and (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$333) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$333) (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$333)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$333) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$333) (+ (apply$35$$35$0 (as len Int) xs$35$$35$a1Y4) 1))))
(define-fun b$36$$35$$35$194 () Bool (and (= lq_anf$36$$35$$35$7205759403792805216$35$$35$d31m (< x$35$$35$a1XJ y$35$$35$a1XM)) (= lq_anf$36$$35$$35$7205759403792805216$35$$35$d31m lq_anf$36$$35$$35$7205759403792805215$35$$35$d31l)))
(define-fun b$36$$35$$35$226 () Bool (and (= lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y ds_d2XJ) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) 0)))
(define-fun b$36$$35$$35$258 () Bool (and (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M)))) (= lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M ds_d2Vf) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M))))
(define-fun b$36$$35$$35$290 () Bool (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805253$35$$35$d31X) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805253$35$$35$d31X) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805253$35$$35$d31X))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805253$35$$35$d31X) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805253$35$$35$d31X)))) (= (FibHeap.rank (FibHeap.minTree lq_anf$36$$35$$35$7205759403792805253$35$$35$d31X)) 1) (= (FibHeap.root (FibHeap.minTree lq_anf$36$$35$$35$7205759403792805253$35$$35$d31X)) x$35$$35$a1XW) (= (FibHeap.subtrees (FibHeap.minTree lq_anf$36$$35$$35$7205759403792805253$35$$35$d31X)) (as GHC.Types.$91$$93$ Int)) (= (FibHeap.trees lq_anf$36$$35$$35$7205759403792805253$35$$35$d31X) (as GHC.Types.$91$$93$ Int)) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) lq_anf$36$$35$$35$7205759403792805253$35$$35$d31X))))
(define-fun b$36$$35$$35$354 () Bool (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d) (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d) (is-FibHeap.E lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d)))) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d)) (not (is-FibHeap.FH lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d)) (= lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d (as FibHeap.E (FibHeap.FibHeap Int))) (= lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d ds_d2Y7) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d))))
(define-fun b$36$$35$$35$386 () Bool (and (is-FibHeap.Node lq_anf$36$$35$$35$7205759403792805286$35$$35$d32u) (= lq_anf$36$$35$$35$7205759403792805286$35$$35$d32u ds_d2Zq) (= lq_anf$36$$35$$35$7205759403792805286$35$$35$d32u ((as FibHeap.Node (FibHeap.FibTree Int)) ds_d2Zv ds_d2Zw subtr$35$$35$a1Yl ds_d2Zx)) (= (FibHeap.marked lq_anf$36$$35$$35$7205759403792805286$35$$35$d32u) ds_d2Zx) (= (FibHeap.rank lq_anf$36$$35$$35$7205759403792805286$35$$35$d32u) ds_d2Zv) (= (FibHeap.root lq_anf$36$$35$$35$7205759403792805286$35$$35$d32u) ds_d2Zw) (= (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805286$35$$35$d32u) (apply$35$$35$0 FibHeap.pow2 ds_d2Zv)) (= (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805286$35$$35$d32u) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank lq_anf$36$$35$$35$7205759403792805286$35$$35$d32u))) (= (FibHeap.subtrees lq_anf$36$$35$$35$7205759403792805286$35$$35$d32u) subtr$35$$35$a1Yl) (< 0 (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805286$35$$35$d32u))))
(define-fun b$36$$35$$35$514 () Bool (= lq_anf$36$$35$$35$7205759403792805311$35$$35$d32T 0))
(define-fun b$36$$35$$35$834 () Bool (and (is-FibHeap.Node VV$35$$35$F$35$$35$397) (= VV$35$$35$F$35$$35$397 ((as FibHeap.Node (FibHeap.FibTree Int)) lq_anf$36$$35$$35$7205759403792805219$35$$35$d31p y$35$$35$a1XM lq_anf$36$$35$$35$7205759403792805220$35$$35$d31q GHC.Types.False)) (= (FibHeap.marked VV$35$$35$F$35$$35$397) GHC.Types.False) (= (FibHeap.rank VV$35$$35$F$35$$35$397) lq_anf$36$$35$$35$7205759403792805219$35$$35$d31p) (= (FibHeap.root VV$35$$35$F$35$$35$397) y$35$$35$a1XM) (= (apply$35$$35$35 (as FibHeap.size Int) VV$35$$35$F$35$$35$397) (apply$35$$35$0 FibHeap.pow2 lq_anf$36$$35$$35$7205759403792805219$35$$35$d31p)) (= (apply$35$$35$35 (as FibHeap.size Int) VV$35$$35$F$35$$35$397) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank VV$35$$35$F$35$$35$397))) (= (FibHeap.subtrees VV$35$$35$F$35$$35$397) lq_anf$36$$35$$35$7205759403792805220$35$$35$d31q) (< 0 (apply$35$$35$35 (as FibHeap.size Int) VV$35$$35$F$35$$35$397))))
(define-fun b$36$$35$$35$866 () Bool (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$412) (is-FibHeap.FH VV$35$$35$F$35$$35$412) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$412) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$412))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$412) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$412)))) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$412)) (not (is-FibHeap.E VV$35$$35$F$35$$35$412)) (= VV$35$$35$F$35$$35$412 ((as FibHeap.FH (FibHeap.FibHeap Int)) lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i)) (= (apply$35$$35$28 (as FibHeap.fibsize Int) VV$35$$35$F$35$$35$412) (+ (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h) (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i))) (= (FibHeap.minTree VV$35$$35$F$35$$35$412) lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h) (= (FibHeap.trees VV$35$$35$F$35$$35$412) lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) VV$35$$35$F$35$$35$412))))
(define-fun b$36$$35$$35$163 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805210$35$$35$d31g) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805210$35$$35$d31g)) (= lq_anf$36$$35$$35$7205759403792805210$35$$35$d31g (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805210$35$$35$d31g) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805210$35$$35$d31g) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805210$35$$35$d31g) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805210$35$$35$d31g)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805210$35$$35$d31g) 0)))
(define-fun b$36$$35$$35$195 () Bool (and lq_anf$36$$35$$35$7205759403792805216$35$$35$d31m (= lq_anf$36$$35$$35$7205759403792805216$35$$35$d31m (< x$35$$35$a1XJ y$35$$35$a1XM)) (= lq_anf$36$$35$$35$7205759403792805216$35$$35$d31m lq_anf$36$$35$$35$7205759403792805215$35$$35$d31l)))
(define-fun b$36$$35$$35$227 () Bool (and (= lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y ds_d2XJ) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) 0)))
(define-fun b$36$$35$$35$259 () Bool (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) (is-FibHeap.E lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M)))) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M)) (not (is-FibHeap.FH lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M)) (= lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M (as FibHeap.E (FibHeap.FibHeap Int))) (= lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M ds_d2Vf) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M))))
(define-fun b$36$$35$$35$323 () Bool (and (= lq_anf$36$$35$$35$7205759403792805260$35$$35$d324 ds_d2V4) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324) 0)))
(define-fun b$36$$35$$35$355 () Bool (= lq_anf$36$$35$$35$7205759403792805270$35$$35$d32e lit$36$$47$Users$47$niki.vazou$47$tmp$47$jamie$47$LiquidHaskell$47$lh$45$thesis$47$src$47$FibHeap.hs$58$$40$104$44$1$41$$45$$40$108$44$58$41$$124$function$32$deleteMin))
(define-fun b$36$$35$$35$387 () Bool (and (= lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v subtr$35$$35$a1Yl) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v) 0)))
(define-fun b$36$$35$$35$451 () Bool (and (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805278$35$$35$d32m) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j) (apply$35$$35$0 (as len Int) ds_d2Zr))) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805278$35$$35$d32m) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805278$35$$35$d32m)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805278$35$$35$d32m) 0)))
(define-fun b$36$$35$$35$515 () Bool (and (= lq_anf$36$$35$$35$7205759403792805310$35$$35$d32S ds_d2TZ) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805310$35$$35$d32S) 0)))
(define-fun b$36$$35$$35$835 () Bool (and (= VV$35$$35$F$35$$35$142 lq_anf$36$$35$$35$7205759403792805294$35$$35$d32C) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$142) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805293$35$$35$d32B) (apply$35$$35$0 (as len Int) ds_d2Zr))) (>= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$142) (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$142)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$142) 0)))
(define-fun b$36$$35$$35$867 () Bool (and (= VV$35$$35$F$35$$35$29 lit$36$$47$Users$47$niki.vazou$47$tmp$47$jamie$47$LiquidHaskell$47$lh$45$thesis$47$src$47$FibHeap.hs$58$118$58$1$45$45$124$function$32$fibsize) (= VV$35$$35$F$35$$35$29 lq_anf$36$$35$$35$7205759403792805315$35$$35$d32X)))
(define-fun b$36$$35$$35$164 () Bool (and (is-FibHeap.Node lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h) (= lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h ((as FibHeap.Node (FibHeap.FibTree Int)) lq_anf$36$$35$$35$7205759403792805209$35$$35$d31f x$35$$35$a1XG lq_anf$36$$35$$35$7205759403792805210$35$$35$d31g GHC.Types.False)) (= (FibHeap.marked lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h) GHC.Types.False) (= (FibHeap.rank lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h) lq_anf$36$$35$$35$7205759403792805209$35$$35$d31f) (= (FibHeap.root lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h) x$35$$35$a1XG) (= (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h) (apply$35$$35$0 FibHeap.pow2 lq_anf$36$$35$$35$7205759403792805209$35$$35$d31f)) (= (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h))) (= (FibHeap.subtrees lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h) lq_anf$36$$35$$35$7205759403792805210$35$$35$d31g) (< 0 (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h))))
(define-fun b$36$$35$$35$196 () Bool (= lq_anf$36$$35$$35$7205759403792805221$35$$35$d31r 1))
(define-fun b$36$$35$$35$228 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y)) (= lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y ds_d2XJ) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) 0)))
(define-fun b$36$$35$$35$260 () Bool (and (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M)))) (= lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M ds_d2Vf) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M))))
(define-fun b$36$$35$$35$324 () Bool (and (= (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805267$35$$35$d32b) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank lq_anf$36$$35$$35$7205759403792805267$35$$35$d32b))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805267$35$$35$d32b))))
(define-fun b$36$$35$$35$356 () Bool (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d)))) (= lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d ds_d2Y7) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d))))
(define-fun b$36$$35$$35$388 () Bool (and (= lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v subtr$35$$35$a1Yl) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v) 0)))
(define-fun b$36$$35$$35$452 () Bool (and (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805279$35$$35$d32n) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805279$35$$35$d32n) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805279$35$$35$d32n)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805279$35$$35$d32n) 0)))
(define-fun b$36$$35$$35$516 () Bool (and (= (apply$35$$35$35 (as FibHeap.size Int) t$35$$35$a1Yu) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank t$35$$35$a1Yu))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) t$35$$35$a1Yu))))
(define-fun b$36$$35$$35$836 () Bool (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$270) (is-FibHeap.FH VV$35$$35$F$35$$35$270) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$270) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$270))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$270) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$270)))) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$270)) (not (is-FibHeap.E VV$35$$35$F$35$$35$270)) (= VV$35$$35$F$35$$35$270 ((as FibHeap.FH (FibHeap.FibHeap Int)) minTr1$35$$35$a1XQ lq_anf$36$$35$$35$7205759403792805252$35$$35$d31W)) (= (apply$35$$35$28 (as FibHeap.fibsize Int) VV$35$$35$F$35$$35$270) (+ (apply$35$$35$35 (as FibHeap.size Int) minTr1$35$$35$a1XQ) (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805252$35$$35$d31W))) (= (FibHeap.minTree VV$35$$35$F$35$$35$270) minTr1$35$$35$a1XQ) (= (FibHeap.trees VV$35$$35$F$35$$35$270) lq_anf$36$$35$$35$7205759403792805252$35$$35$d31W) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) VV$35$$35$F$35$$35$270))))
(define-fun b$36$$35$$35$868 () Bool (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$285) (is-FibHeap.FH VV$35$$35$F$35$$35$285) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$285) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$285))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$285) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$285)))) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$285)) (not (is-FibHeap.E VV$35$$35$F$35$$35$285)) (= VV$35$$35$F$35$$35$285 ((as FibHeap.FH (FibHeap.FibHeap Int)) minTr2$35$$35$a1XT lq_anf$36$$35$$35$7205759403792805250$35$$35$d31U)) (= (apply$35$$35$28 (as FibHeap.fibsize Int) VV$35$$35$F$35$$35$285) (+ (apply$35$$35$35 (as FibHeap.size Int) minTr2$35$$35$a1XT) (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805250$35$$35$d31U))) (= (FibHeap.minTree VV$35$$35$F$35$$35$285) minTr2$35$$35$a1XT) (= (FibHeap.trees VV$35$$35$F$35$$35$285) lq_anf$36$$35$$35$7205759403792805250$35$$35$d31U) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) VV$35$$35$F$35$$35$285))))
(define-fun b$36$$35$$35$197 () Bool (= lq_anf$36$$35$$35$7205759403792805222$35$$35$d31s lq_anf$36$$35$$35$7205759403792805221$35$$35$d31r))
(define-fun b$36$$35$$35$261 () Bool (and (= (apply$35$$35$35 (as FibHeap.size Int) minTr1$35$$35$a1XQ) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank minTr1$35$$35$a1XQ))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) minTr1$35$$35$a1XQ))))
(define-fun b$36$$35$$35$325 () Bool (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805268$35$$35$d32c) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805268$35$$35$d32c)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805268$35$$35$d32c) 0)))
(define-fun b$36$$35$$35$357 () Bool (and (= (apply$35$$35$35 (as FibHeap.size Int) ds_d2Zq) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank ds_d2Zq))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) ds_d2Zq))))
(define-fun b$36$$35$$35$389 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v)) (= lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v subtr$35$$35$a1Yl) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v) 0)))
(define-fun b$36$$35$$35$485 () Bool (>= ds_d2Tz 0))
(define-fun b$36$$35$$35$517 () Bool (>= (apply$35$$35$0 (as len Int) ts$35$$35$a1Yv) 0))
(define-fun b$36$$35$$35$837 () Bool (and (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$334) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$334) (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$334)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$334) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$334) (+ (apply$35$$35$0 (as len Int) xs$35$$35$a1Y4) 1))))
(define-fun b$36$$35$$35$166 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i)) (= lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i) 0)))
(define-fun b$36$$35$$35$198 () Bool (= lq_anf$36$$35$$35$7205759403792805223$35$$35$d31t (+ r$35$$35$a1XI lq_anf$36$$35$$35$7205759403792805222$35$$35$d31s)))
(define-fun b$36$$35$$35$230 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805229$35$$35$d31z) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805229$35$$35$d31z)) (= lq_anf$36$$35$$35$7205759403792805229$35$$35$d31z (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805229$35$$35$d31z) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805229$35$$35$d31z) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805229$35$$35$d31z) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805229$35$$35$d31z)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805229$35$$35$d31z) 0)))
(define-fun b$36$$35$$35$262 () Bool (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) ts1$35$$35$a1XR) (apply$35$$35$0 (as len Int) ts1$35$$35$a1XR)) (>= (apply$35$$35$0 (as len Int) ts1$35$$35$a1XR) 0)))
(define-fun b$36$$35$$35$326 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324)) (= lq_anf$36$$35$$35$7205759403792805260$35$$35$d324 ds_d2V4) (= lq_anf$36$$35$$35$7205759403792805260$35$$35$d324 (apply$35$$35$0 (apply$35$$35$35 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805267$35$$35$d32b) lq_anf$36$$35$$35$7205759403792805268$35$$35$d32c)) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324) (+ (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805267$35$$35$d32b) (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805268$35$$35$d32c))) (= (apply$35$$35$5 (as head Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324) lq_anf$36$$35$$35$7205759403792805267$35$$35$d32b) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805268$35$$35$d32c))) (= (apply$35$$35$5 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324) lq_anf$36$$35$$35$7205759403792805267$35$$35$d32b) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324) lq_anf$36$$35$$35$7205759403792805268$35$$35$d32c) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324) lq_anf$36$$35$$35$7205759403792805268$35$$35$d32c) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324) 0)))
(define-fun b$36$$35$$35$358 () Bool (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) ds_d2Zr) (apply$35$$35$0 (as len Int) ds_d2Zr)) (>= (apply$35$$35$0 (as len Int) ds_d2Zr) 0)))
(define-fun b$36$$35$$35$390 () Bool (= lq_anf$36$$35$$35$7205759403792805288$35$$35$d32w lit$36$$47$Users$47$niki.vazou$47$tmp$47$jamie$47$LiquidHaskell$47$lh$45$thesis$47$src$47$FibHeap.hs$58$$40$104$44$1$41$$45$$40$108$44$58$41$$124$function$32$deleteMin))
(define-fun b$36$$35$$35$486 () Bool (and (= lq_anf$36$$35$$35$7205759403792805300$35$$35$d32I ds_d2Tz) (>= lq_anf$36$$35$$35$7205759403792805300$35$$35$d32I 0)))
(define-fun b$36$$35$$35$518 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805310$35$$35$d32S) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805310$35$$35$d32S)) (= lq_anf$36$$35$$35$7205759403792805310$35$$35$d32S ds_d2TZ) (= lq_anf$36$$35$$35$7205759403792805310$35$$35$d32S (apply$35$$35$0 (apply$35$$35$35 (as GHC.Types.$58$ Int) t$35$$35$a1Yu) ts$35$$35$a1Yv)) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805310$35$$35$d32S) (+ (apply$35$$35$35 (as FibHeap.size Int) t$35$$35$a1Yu) (apply$35$$35$0 (as FibHeap.lsize Int) ts$35$$35$a1Yv))) (= (apply$35$$35$5 (as head Int) lq_anf$36$$35$$35$7205759403792805310$35$$35$d32S) t$35$$35$a1Yu) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805310$35$$35$d32S) (+ 1 (apply$35$$35$0 (as len Int) ts$35$$35$a1Yv))) (= (apply$35$$35$5 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792805310$35$$35$d32S) t$35$$35$a1Yu) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792805310$35$$35$d32S) ts$35$$35$a1Yv) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792805310$35$$35$d32S) ts$35$$35$a1Yv) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805310$35$$35$d32S) 0)))
(define-fun b$36$$35$$35$870 () Bool (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$413) (is-FibHeap.FH VV$35$$35$F$35$$35$413) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$413) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$413))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$413) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$413)))) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$413)) (not (is-FibHeap.E VV$35$$35$F$35$$35$413)) (= VV$35$$35$F$35$$35$413 ((as FibHeap.FH (FibHeap.FibHeap Int)) lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i)) (= (apply$35$$35$28 (as FibHeap.fibsize Int) VV$35$$35$F$35$$35$413) (+ (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h) (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i))) (= (FibHeap.minTree VV$35$$35$F$35$$35$413) lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h) (= (FibHeap.trees VV$35$$35$F$35$$35$413) lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) VV$35$$35$F$35$$35$413))))
(define-fun b$36$$35$$35$263 () Bool (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) (is-FibHeap.FH lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M)))) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M)) (not (is-FibHeap.E lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M)) (= lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M ds_d2Vf) (= lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M ((as FibHeap.FH (FibHeap.FibHeap Int)) minTr1$35$$35$a1XQ ts1$35$$35$a1XR)) (= (apply$35$$35$28 (as FibHeap.fibsize Int) lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) (+ (apply$35$$35$35 (as FibHeap.size Int) minTr1$35$$35$a1XQ) (apply$35$$35$0 (as FibHeap.lsize Int) ts1$35$$35$a1XR))) (= (FibHeap.minTree lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) minTr1$35$$35$a1XQ) (= (FibHeap.trees lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) ts1$35$$35$a1XR) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M))))
(define-fun b$36$$35$$35$359 () Bool (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d) (is-FibHeap.FH lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d)))) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d)) (not (is-FibHeap.E lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d)) (= lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d ds_d2Y7) (= lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d ((as FibHeap.FH (FibHeap.FibHeap Int)) ds_d2Zq ds_d2Zr)) (= (apply$35$$35$28 (as FibHeap.fibsize Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d) (+ (apply$35$$35$35 (as FibHeap.size Int) ds_d2Zq) (apply$35$$35$0 (as FibHeap.lsize Int) ds_d2Zr))) (= (FibHeap.minTree lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d) ds_d2Zq) (= (FibHeap.trees lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d) ds_d2Zr) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d))))
(define-fun b$36$$35$$35$391 () Bool (and (= lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v subtr$35$$35$a1Yl) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v) 0)))
(define-fun b$36$$35$$35$487 () Bool (and (= lq_anf$36$$35$$35$7205759403792805300$35$$35$d32I ds_d2Tz) (>= lq_anf$36$$35$$35$7205759403792805300$35$$35$d32I 0)))
(define-fun b$36$$35$$35$519 () Bool (and (= lq_anf$36$$35$$35$7205759403792805312$35$$35$d32U (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank t$35$$35$a1Yu))) (= lq_anf$36$$35$$35$7205759403792805312$35$$35$d32U (apply$35$$35$35 (as FibHeap.size Int) t$35$$35$a1Yu)) (< 0 lq_anf$36$$35$$35$7205759403792805312$35$$35$d32U)))
(define-fun b$36$$35$$35$807 () Bool (and (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$320) (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) 0) (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (+ (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) 1))))
(define-fun b$36$$35$$35$839 () Bool (and (= VV$35$$35$F$35$$35$112 lit$36$$47$Users$47$niki.vazou$47$tmp$47$jamie$47$LiquidHaskell$47$lh$45$thesis$47$src$47$FibHeap.hs$58$$40$104$44$1$41$$45$$40$108$44$58$41$$124$function$32$deleteMin) (= VV$35$$35$F$35$$35$112 lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k)))
(define-fun b$36$$35$$35$871 () Bool (= VV$35$$35$F$35$$35$30 (+ lq_anf$36$$35$$35$7205759403792805312$35$$35$d32U lq_anf$36$$35$$35$7205759403792805313$35$$35$d32V)))
(define-fun b$36$$35$$35$200 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805224$35$$35$d31u) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805224$35$$35$d31u)) (= lq_anf$36$$35$$35$7205759403792805224$35$$35$d31u (apply$35$$35$0 (apply$35$$35$35 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k) ts1$35$$35$a1XK)) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805224$35$$35$d31u) (+ (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k) (apply$35$$35$0 (as FibHeap.lsize Int) ts1$35$$35$a1XK))) (= (apply$35$$35$5 (as head Int) lq_anf$36$$35$$35$7205759403792805224$35$$35$d31u) lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805224$35$$35$d31u) (+ 1 (apply$35$$35$0 (as len Int) ts1$35$$35$a1XK))) (= (apply$35$$35$5 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792805224$35$$35$d31u) lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792805224$35$$35$d31u) ts1$35$$35$a1XK) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792805224$35$$35$d31u) ts1$35$$35$a1XK) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805224$35$$35$d31u) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805224$35$$35$d31u)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805224$35$$35$d31u) 0)))
(define-fun b$36$$35$$35$232 () Bool (and (= lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y ds_d2XJ) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) 0)))
(define-fun b$36$$35$$35$264 () Bool (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N)))) (= lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N h$35$$35$a1XO) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N))))
(define-fun b$36$$35$$35$360 () Bool (and (= lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f ds_d2Zq) (= (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f))))
(define-fun b$36$$35$$35$392 () Bool (and (= (apply$35$$35$35 (as FibHeap.size Int) x$35$$35$a1Ym) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank x$35$$35$a1Ym))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) x$35$$35$a1Ym))))
(define-fun b$36$$35$$35$520 () Bool (and (= lq_anf$36$$35$$35$7205759403792805313$35$$35$d32V (apply$35$$35$0 (as FibHeap.lsize Int) ts$35$$35$a1Yv)) (>= lq_anf$36$$35$$35$7205759403792805313$35$$35$d32V (apply$35$$35$0 (as len Int) ts$35$$35$a1Yv))))
(define-fun b$36$$35$$35$808 () Bool (and (is-FibHeap.Node VV$35$$35$F$35$$35$384) (= VV$35$$35$F$35$$35$384 ((as FibHeap.Node (FibHeap.FibTree Int)) lq_anf$36$$35$$35$7205759403792805223$35$$35$d31t x$35$$35$a1XJ lq_anf$36$$35$$35$7205759403792805224$35$$35$d31u GHC.Types.False)) (= (FibHeap.marked VV$35$$35$F$35$$35$384) GHC.Types.False) (= (FibHeap.rank VV$35$$35$F$35$$35$384) lq_anf$36$$35$$35$7205759403792805223$35$$35$d31t) (= (FibHeap.root VV$35$$35$F$35$$35$384) x$35$$35$a1XJ) (= (apply$35$$35$35 (as FibHeap.size Int) VV$35$$35$F$35$$35$384) (apply$35$$35$0 FibHeap.pow2 lq_anf$36$$35$$35$7205759403792805223$35$$35$d31t)) (= (apply$35$$35$35 (as FibHeap.size Int) VV$35$$35$F$35$$35$384) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank VV$35$$35$F$35$$35$384))) (= (FibHeap.subtrees VV$35$$35$F$35$$35$384) lq_anf$36$$35$$35$7205759403792805224$35$$35$d31u) (< 0 (apply$35$$35$35 (as FibHeap.size Int) VV$35$$35$F$35$$35$384))))
(define-fun b$36$$35$$35$872 () Bool (and (= VV$35$$35$F$35$$35$158 lq_anf$36$$35$$35$7205759403792805291$35$$35$d32z) (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$158) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$158) (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$158)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$158) 0)))
(define-fun b$36$$35$$35$41 () Bool (= GHC.Types.True GHC.Types.True))
(define-fun b$36$$35$$35$169 () Bool (and (= (apply$35$$35$35 (as FibHeap.size Int) t1$35$$35$a1XH) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank t1$35$$35$a1XH))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) t1$35$$35$a1XH))))
(define-fun b$36$$35$$35$233 () Bool (and (= (apply$35$$35$35 (as FibHeap.size Int) x$39$$35$$35$a1Y3) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank x$39$$35$$35$a1Y3))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) x$39$$35$$35$a1Y3))))
(define-fun b$36$$35$$35$265 () Bool (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N)))) (= lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N h$35$$35$a1XO) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N))))
(define-fun b$36$$35$$35$361 () Bool (and (= lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f ds_d2Zq) (= (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f))))
(define-fun b$36$$35$$35$393 () Bool (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) xs$35$$35$a1Yn) (apply$35$$35$0 (as len Int) xs$35$$35$a1Yn)) (>= (apply$35$$35$0 (as len Int) xs$35$$35$a1Yn) 0)))
(define-fun b$36$$35$$35$489 () Bool (and (= lq_anf$36$$35$$35$7205759403792805300$35$$35$d32I ds_d2TG) (= lq_anf$36$$35$$35$7205759403792805300$35$$35$d32I ds_d2Tz) (= lq_anf$36$$35$$35$7205759403792805300$35$$35$d32I ds_d2TG) (>= lq_anf$36$$35$$35$7205759403792805300$35$$35$d32I 0)))
(define-fun b$36$$35$$35$521 () Bool (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) ds_d2Ua) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) ds_d2Ua) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) ds_d2Ua))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) ds_d2Ua) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) ds_d2Ua))))))
(define-fun b$36$$35$$35$809 () Bool (= VV$35$$35$F$35$$35$33 lq_anf$36$$35$$35$7205759403792805311$35$$35$d32T))
(define-fun b$36$$35$$35$841 () Bool (and (= VV$35$$35$F$35$$35$400 lq_anf$36$$35$$35$7205759403792805219$35$$35$d31p) (= VV$35$$35$F$35$$35$400 (+ r$35$$35$a1XI lq_anf$36$$35$$35$7205759403792805218$35$$35$d31o))))
(define-fun b$36$$35$$35$873 () Bool (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$286) (is-FibHeap.FH VV$35$$35$F$35$$35$286) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$286) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$286))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$286) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$286)))) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$286)) (not (is-FibHeap.E VV$35$$35$F$35$$35$286)) (= VV$35$$35$F$35$$35$286 ((as FibHeap.FH (FibHeap.FibHeap Int)) minTr2$35$$35$a1XT lq_anf$36$$35$$35$7205759403792805250$35$$35$d31U)) (= (apply$35$$35$28 (as FibHeap.fibsize Int) VV$35$$35$F$35$$35$286) (+ (apply$35$$35$35 (as FibHeap.size Int) minTr2$35$$35$a1XT) (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805250$35$$35$d31U))) (= (FibHeap.minTree VV$35$$35$F$35$$35$286) minTr2$35$$35$a1XT) (= (FibHeap.trees VV$35$$35$F$35$$35$286) lq_anf$36$$35$$35$7205759403792805250$35$$35$d31U) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) VV$35$$35$F$35$$35$286))))
(define-fun b$36$$35$$35$170 () Bool (and (= (FibHeap.rank t1$35$$35$a1XH) (FibHeap.rank t2$35$$35$a1XL)) (= (apply$35$$35$35 (as FibHeap.size Int) t2$35$$35$a1XL) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank t2$35$$35$a1XL))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) t2$35$$35$a1XL))))
(define-fun b$36$$35$$35$234 () Bool (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) xs$35$$35$a1Y4) (apply$35$$35$0 (as len Int) xs$35$$35$a1Y4)) (>= (apply$35$$35$0 (as len Int) xs$35$$35$a1Y4) 0)))
(define-fun b$36$$35$$35$266 () Bool (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (is-FibHeap.E lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N)))) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N)) (not (is-FibHeap.FH lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N)) (= lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N (as FibHeap.E (FibHeap.FibHeap Int))) (= lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N h$35$$35$a1XO) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N))))
(define-fun b$36$$35$$35$362 () Bool (>= ds_d2Zs 0))
(define-fun b$36$$35$$35$394 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v)) (= lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v subtr$35$$35$a1Yl) (= lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v (apply$35$$35$0 (apply$35$$35$35 (as GHC.Types.$58$ Int) x$35$$35$a1Ym) xs$35$$35$a1Yn)) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v) (+ (apply$35$$35$35 (as FibHeap.size Int) x$35$$35$a1Ym) (apply$35$$35$0 (as FibHeap.lsize Int) xs$35$$35$a1Yn))) (= (apply$35$$35$5 (as head Int) lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v) x$35$$35$a1Ym) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1Yn))) (= (apply$35$$35$5 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v) x$35$$35$a1Ym) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v) xs$35$$35$a1Yn) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v) xs$35$$35$a1Yn) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v) 0)))
(define-fun b$36$$35$$35$490 () Bool (= lq_anf$36$$35$$35$7205759403792805301$35$$35$d32J ds_d2TG))
(define-fun b$36$$35$$35$522 () Bool (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W)))) (= lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W ds_d2Ua)))
(define-fun b$36$$35$$35$810 () Bool (and (= VV$35$$35$F$35$$35$34 (apply$35$$35$0 FibHeap.pow2 r$35$$35$a1Yx)) (= VV$35$$35$F$35$$35$34 (ite (= 0 r$35$$35$a1Yx) 1 (Z3_OP_MUL 2 (apply$35$$35$0 FibHeap.pow2 (- r$35$$35$a1Yx 1))))) (< 0 VV$35$$35$F$35$$35$34)))
(define-fun b$36$$35$$35$874 () Bool (and (= VV$35$$35$F$35$$35$382 lit$36$$47$Users$47$niki.vazou$47$tmp$47$jamie$47$LiquidHaskell$47$lh$45$thesis$47$src$47$FibHeap.hs$58$$40$86$44$1$41$$45$$40$92$44$33$41$$124$function$32$consolidate) (= VV$35$$35$F$35$$35$382 lq_anf$36$$35$$35$7205759403792805226$35$$35$d31w)))
(define-fun b$36$$35$$35$171 () Bool (and (= lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j t1$35$$35$a1XH) (= (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j))))
(define-fun b$36$$35$$35$203 () Bool (and (> (apply$35$$35$0 (as len Int) ds_d2X9) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) ds_d2X9) (apply$35$$35$0 (as len Int) ds_d2X9)) (>= (apply$35$$35$0 (as len Int) ds_d2X9) 0)))
(define-fun b$36$$35$$35$235 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y)) (= lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y ds_d2XJ) (= lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y (apply$35$$35$0 (apply$35$$35$35 (as GHC.Types.$58$ Int) x$39$$35$$35$a1Y3) xs$35$$35$a1Y4)) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) (+ (apply$35$$35$35 (as FibHeap.size Int) x$39$$35$$35$a1Y3) (apply$35$$35$0 (as FibHeap.lsize Int) xs$35$$35$a1Y4))) (= (apply$35$$35$5 (as head Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) x$39$$35$$35$a1Y3) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1Y4))) (= (apply$35$$35$5 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) x$39$$35$$35$a1Y3) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) xs$35$$35$a1Y4) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) xs$35$$35$a1Y4) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805228$35$$35$d31y) 0)))
(define-fun b$36$$35$$35$267 () Bool (= lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O lit$36$$47$Users$47$niki.vazou$47$tmp$47$jamie$47$LiquidHaskell$47$lh$45$thesis$47$src$47$FibHeap.hs$58$$40$71$44$1$41$$45$$40$74$44$45$41$$124$function$32$merge))
(define-fun b$36$$35$$35$491 () Bool (and (= lq_anf$36$$35$$35$7205759403792805301$35$$35$d32J ds_d2TG) (not (= lq_anf$36$$35$$35$7205759403792805301$35$$35$d32J 0))))
(define-fun b$36$$35$$35$523 () Bool (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W)))) (= lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W ds_d2Ua)))
(define-fun b$36$$35$$35$811 () Bool (and (= VV$35$$35$F$35$$35$35 (apply$35$$35$0 FibHeap.pow2 r$35$$35$a1Yx)) (= VV$35$$35$F$35$$35$35 (ite (= 0 r$35$$35$a1Yx) 1 (Z3_OP_MUL 2 (apply$35$$35$0 FibHeap.pow2 (- r$35$$35$a1Yx 1))))) (< 0 VV$35$$35$F$35$$35$35)))
(define-fun b$36$$35$$35$843 () Bool (and (= VV$35$$35$F$35$$35$337 x$39$$35$$35$a1Y3) (= (apply$35$$35$35 (as FibHeap.size Int) VV$35$$35$F$35$$35$337) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank VV$35$$35$F$35$$35$337))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) VV$35$$35$F$35$$35$337))))
(define-fun b$36$$35$$35$875 () Bool (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$414) (is-FibHeap.FH VV$35$$35$F$35$$35$414) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$414) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$414))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$414) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$414)))) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$414)) (not (is-FibHeap.E VV$35$$35$F$35$$35$414)) (= VV$35$$35$F$35$$35$414 ((as FibHeap.FH (FibHeap.FibHeap Int)) lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i)) (= (apply$35$$35$28 (as FibHeap.fibsize Int) VV$35$$35$F$35$$35$414) (+ (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h) (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i))) (= (FibHeap.minTree VV$35$$35$F$35$$35$414) lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h) (= (FibHeap.trees VV$35$$35$F$35$$35$414) lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) VV$35$$35$F$35$$35$414))))
(define-fun b$36$$35$$35$172 () Bool (and (= lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j t1$35$$35$a1XH) (= (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j))))
(define-fun b$36$$35$$35$204 () Bool (and (= lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v ds_d2X9) (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) 0)))
(define-fun b$36$$35$$35$236 () Bool (and (= lq_anf$36$$35$$35$7205759403792805230$35$$35$d31A (FibHeap.rank x$35$$35$a1Y2)) (>= lq_anf$36$$35$$35$7205759403792805230$35$$35$d31A 0)))
(define-fun b$36$$35$$35$268 () Bool (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N)))) (= lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N h$35$$35$a1XO) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N))))
(define-fun b$36$$35$$35$364 () Bool (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) ds_d2Zt) (apply$35$$35$0 (as len Int) ds_d2Zt)) (>= (apply$35$$35$0 (as len Int) ds_d2Zt) 0)))
(define-fun b$36$$35$$35$396 () Bool (and (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805290$35$$35$d32y) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v) (apply$35$$35$0 (as len Int) ds_d2Zr))) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805290$35$$35$d32y) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805290$35$$35$d32y)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805290$35$$35$d32y) 0)))
(define-fun b$36$$35$$35$428 () Bool (and (= lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g ds_d2Zt) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g) 0)))
(define-fun b$36$$35$$35$492 () Bool (= lq_anf$36$$35$$35$7205759403792805302$35$$35$d32K 2))
(define-fun b$36$$35$$35$524 () Bool (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W) (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W) (is-FibHeap.E lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W)))) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W)) (not (is-FibHeap.FH lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W)) (= lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W (as FibHeap.E (FibHeap.FibHeap Int))) (= lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W ds_d2Ua)))
(define-fun b$36$$35$$35$844 () Bool (and (= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$7205759403792805283$35$$35$d32r) (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$50) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$50) (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$50)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$50) 0)))
(define-fun b$36$$35$$35$173 () Bool (>= r$35$$35$a1XI 0))
(define-fun b$36$$35$$35$205 () Bool (and (= lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v ds_d2X9) (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) 0)))
(define-fun b$36$$35$$35$237 () Bool (and (= lq_anf$36$$35$$35$7205759403792805231$35$$35$d31B (FibHeap.rank x$39$$35$$35$a1Y3)) (>= lq_anf$36$$35$$35$7205759403792805231$35$$35$d31B 0)))
(define-fun b$36$$35$$35$269 () Bool (and (= (apply$35$$35$35 (as FibHeap.size Int) minTr2$35$$35$a1XT) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank minTr2$35$$35$a1XT))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) minTr2$35$$35$a1XT))))
(define-fun b$36$$35$$35$397 () Bool (and (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805291$35$$35$d32z) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805291$35$$35$d32z) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805291$35$$35$d32z)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805291$35$$35$d32z) 0)))
(define-fun b$36$$35$$35$429 () Bool (and (= (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805298$35$$35$d32G) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank lq_anf$36$$35$$35$7205759403792805298$35$$35$d32G))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805298$35$$35$d32G))))
(define-fun b$36$$35$$35$493 () Bool (= lq_anf$36$$35$$35$7205759403792805303$35$$35$d32L lq_anf$36$$35$$35$7205759403792805302$35$$35$d32K))
(define-fun b$36$$35$$35$525 () Bool (= lq_anf$36$$35$$35$7205759403792805315$35$$35$d32X lit$36$$47$Users$47$niki.vazou$47$tmp$47$jamie$47$LiquidHaskell$47$lh$45$thesis$47$src$47$FibHeap.hs$58$118$58$1$45$45$124$function$32$fibsize))
(define-fun b$36$$35$$35$813 () Bool (and (= VV$35$$35$F$35$$35$387 lq_anf$36$$35$$35$7205759403792805223$35$$35$d31t) (= VV$35$$35$F$35$$35$387 (+ r$35$$35$a1XI lq_anf$36$$35$$35$7205759403792805222$35$$35$d31s))))
(define-fun b$36$$35$$35$845 () Bool (and (= VV$35$$35$F$35$$35$178 lq_anf$36$$35$$35$7205759403792805290$35$$35$d32y) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$178) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v) (apply$35$$35$0 (as len Int) ds_d2Zr))) (>= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$178) (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$178)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$178) 0)))
(define-fun b$36$$35$$35$877 () Bool (and (is-FibHeap.Node VV$35$$35$F$35$$35$383) (= VV$35$$35$F$35$$35$383 ((as FibHeap.Node (FibHeap.FibTree Int)) lq_anf$36$$35$$35$7205759403792805223$35$$35$d31t x$35$$35$a1XJ lq_anf$36$$35$$35$7205759403792805224$35$$35$d31u GHC.Types.False)) (= (FibHeap.marked VV$35$$35$F$35$$35$383) GHC.Types.False) (= (FibHeap.rank VV$35$$35$F$35$$35$383) lq_anf$36$$35$$35$7205759403792805223$35$$35$d31t) (= (FibHeap.root VV$35$$35$F$35$$35$383) x$35$$35$a1XJ) (= (apply$35$$35$35 (as FibHeap.size Int) VV$35$$35$F$35$$35$383) (apply$35$$35$0 FibHeap.pow2 lq_anf$36$$35$$35$7205759403792805223$35$$35$d31t)) (= (apply$35$$35$35 (as FibHeap.size Int) VV$35$$35$F$35$$35$383) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank VV$35$$35$F$35$$35$383))) (= (FibHeap.subtrees VV$35$$35$F$35$$35$383) lq_anf$36$$35$$35$7205759403792805224$35$$35$d31u) (< 0 (apply$35$$35$35 (as FibHeap.size Int) VV$35$$35$F$35$$35$383))))
(define-fun b$36$$35$$35$206 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v)) (= lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v ds_d2X9) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) 0) (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) 0)))
(define-fun b$36$$35$$35$238 () Bool (= lq_anf$36$$35$$35$7205759403792805232$35$$35$d31C (= lq_anf$36$$35$$35$7205759403792805230$35$$35$d31A lq_anf$36$$35$$35$7205759403792805231$35$$35$d31B)))
(define-fun b$36$$35$$35$270 () Bool (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) ts2$35$$35$a1XU) (apply$35$$35$0 (as len Int) ts2$35$$35$a1XU)) (>= (apply$35$$35$0 (as len Int) ts2$35$$35$a1XU) 0)))
(define-fun b$36$$35$$35$366 () Bool (and (is-FibHeap.Node lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f) (= lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f ds_d2Zq) (= lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f ((as FibHeap.Node (FibHeap.FibTree Int)) ds_d2Zs x$35$$35$a1Yb ds_d2Zt ds_d2Zu)) (= (FibHeap.marked lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f) ds_d2Zu) (= (FibHeap.rank lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f) ds_d2Zs) (= (FibHeap.root lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f) x$35$$35$a1Yb) (= (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f) (apply$35$$35$0 FibHeap.pow2 ds_d2Zs)) (= (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f))) (= (FibHeap.subtrees lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f) ds_d2Zt) (< 0 (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f))))
(define-fun b$36$$35$$35$430 () Bool (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805299$35$$35$d32H) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805299$35$$35$d32H)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805299$35$$35$d32H) 0)))
(define-fun b$36$$35$$35$494 () Bool (= lq_anf$36$$35$$35$7205759403792805304$35$$35$d32M 1))
(define-fun b$36$$35$$35$526 () Bool (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W)))) (= lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W ds_d2Ua)))
(define-fun b$36$$35$$35$814 () Bool (and (= VV$35$$35$F$35$$35$36 r$35$$35$a1Yx) (>= VV$35$$35$F$35$$35$36 0)))
(define-fun b$36$$35$$35$878 () Bool (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$415) (is-FibHeap.FH VV$35$$35$F$35$$35$415) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$415) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$415))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$415) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$415)))) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$415)) (not (is-FibHeap.E VV$35$$35$F$35$$35$415)) (= VV$35$$35$F$35$$35$415 ((as FibHeap.FH (FibHeap.FibHeap Int)) lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i)) (= (apply$35$$35$28 (as FibHeap.fibsize Int) VV$35$$35$F$35$$35$415) (+ (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h) (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i))) (= (FibHeap.minTree VV$35$$35$F$35$$35$415) lq_anf$36$$35$$35$7205759403792805211$35$$35$d31h) (= (FibHeap.trees VV$35$$35$F$35$$35$415) lq_anf$36$$35$$35$7205759403792805212$35$$35$d31i) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) VV$35$$35$F$35$$35$415))))
(define-fun b$36$$35$$35$47 () Bool (= GHC.Types.False GHC.Types.False))
(define-fun b$36$$35$$35$175 () Bool (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) ts1$35$$35$a1XK) (apply$35$$35$0 (as len Int) ts1$35$$35$a1XK)) (>= (apply$35$$35$0 (as len Int) ts1$35$$35$a1XK) 0)))
(define-fun b$36$$35$$35$207 () Bool (= lq_anf$36$$35$$35$7205759403792805226$35$$35$d31w lit$36$$47$Users$47$niki.vazou$47$tmp$47$jamie$47$LiquidHaskell$47$lh$45$thesis$47$src$47$FibHeap.hs$58$$40$86$44$1$41$$45$$40$92$44$33$41$$124$function$32$consolidate))
(define-fun b$36$$35$$35$239 () Bool (and (= lq_anf$36$$35$$35$7205759403792805233$35$$35$d31D (= lq_anf$36$$35$$35$7205759403792805230$35$$35$d31A lq_anf$36$$35$$35$7205759403792805231$35$$35$d31B)) (= lq_anf$36$$35$$35$7205759403792805233$35$$35$d31D lq_anf$36$$35$$35$7205759403792805232$35$$35$d31C)))
(define-fun b$36$$35$$35$271 () Bool (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (is-FibHeap.FH lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N)))) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N)) (not (is-FibHeap.E lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N)) (= lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N h$35$$35$a1XO) (= lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N ((as FibHeap.FH (FibHeap.FibHeap Int)) minTr2$35$$35$a1XT ts2$35$$35$a1XU)) (= (apply$35$$35$28 (as FibHeap.fibsize Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (+ (apply$35$$35$35 (as FibHeap.size Int) minTr2$35$$35$a1XT) (apply$35$$35$0 (as FibHeap.lsize Int) ts2$35$$35$a1XU))) (= (FibHeap.minTree lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) minTr2$35$$35$a1XT) (= (FibHeap.trees lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) ts2$35$$35$a1XU) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N))))
(define-fun b$36$$35$$35$367 () Bool (and (= lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g ds_d2Zt) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g) 0)))
(define-fun b$36$$35$$35$431 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g)) (= lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g ds_d2Zt) (= lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g (apply$35$$35$0 (apply$35$$35$35 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805298$35$$35$d32G) lq_anf$36$$35$$35$7205759403792805299$35$$35$d32H)) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g) (+ (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805298$35$$35$d32G) (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805299$35$$35$d32H))) (= (apply$35$$35$5 (as head Int) lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g) lq_anf$36$$35$$35$7205759403792805298$35$$35$d32G) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805299$35$$35$d32H))) (= (apply$35$$35$5 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g) lq_anf$36$$35$$35$7205759403792805298$35$$35$d32G) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g) lq_anf$36$$35$$35$7205759403792805299$35$$35$d32H) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g) lq_anf$36$$35$$35$7205759403792805299$35$$35$d32H) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g) 0)))
(define-fun b$36$$35$$35$495 () Bool (= lq_anf$36$$35$$35$7205759403792805305$35$$35$d32N lq_anf$36$$35$$35$7205759403792805304$35$$35$d32M))
(define-fun b$36$$35$$35$527 () Bool (and (= (apply$35$$35$35 (as FibHeap.size Int) minTr$35$$35$a1Ys) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank minTr$35$$35$a1Ys))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) minTr$35$$35$a1Ys))))
(define-fun b$36$$35$$35$815 () Bool (and (= VV$35$$35$F$35$$35$420 lq_anf$36$$35$$35$7205759403792805209$35$$35$d31f) (= VV$35$$35$F$35$$35$420 lq_anf$36$$35$$35$7205759403792805208$35$$35$d31e)))
(define-fun b$36$$35$$35$847 () Bool (and (= VV$35$$35$F$35$$35$243 lit$36$$47$Users$47$niki.vazou$47$tmp$47$jamie$47$LiquidHaskell$47$lh$45$thesis$47$src$47$FibHeap.hs$58$$40$96$44$1$41$$45$$40$99$44$57$41$$124$function$32$extractMin) (= VV$35$$35$F$35$$35$243 lq_anf$36$$35$$35$7205759403792805259$35$$35$d323)))
(define-fun b$36$$35$$35$208 () Bool (and (= lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v ds_d2X9) (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) 0)))
(define-fun b$36$$35$$35$240 () Bool (and (= lq_anf$36$$35$$35$7205759403792805233$35$$35$d31D (= lq_anf$36$$35$$35$7205759403792805230$35$$35$d31A lq_anf$36$$35$$35$7205759403792805231$35$$35$d31B)) (= lq_anf$36$$35$$35$7205759403792805233$35$$35$d31D lq_anf$36$$35$$35$7205759403792805232$35$$35$d31C)))
(define-fun b$36$$35$$35$368 () Bool (and (= lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g ds_d2Zt) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g) 0)))
(define-fun b$36$$35$$35$432 () Bool (and (= lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h ds_d2Zr) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h) 0)))
(define-fun b$36$$35$$35$464 () Bool (and (= lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h ds_d2Zr) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h) 0)))
(define-fun b$36$$35$$35$496 () Bool (= lq_anf$36$$35$$35$7205759403792805306$35$$35$d32O (- ds_d2Tz lq_anf$36$$35$$35$7205759403792805305$35$$35$d32N)))
(define-fun b$36$$35$$35$528 () Bool (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) ts$35$$35$a1Yt) (apply$35$$35$0 (as len Int) ts$35$$35$a1Yt)) (>= (apply$35$$35$0 (as len Int) ts$35$$35$a1Yt) 0)))
(define-fun b$36$$35$$35$816 () Bool (= VV$35$$35$F$35$$35$37 lq_anf$36$$35$$35$7205759403792805308$35$$35$d32Q))
(define-fun b$36$$35$$35$848 () Bool (and (= VV$35$$35$F$35$$35$307 lit$36$$47$Users$47$niki.vazou$47$tmp$47$jamie$47$LiquidHaskell$47$lh$45$thesis$47$src$47$FibHeap.hs$58$$40$71$44$1$41$$45$$40$74$44$45$41$$124$function$32$merge) (= VV$35$$35$F$35$$35$307 lq_anf$36$$35$$35$7205759403792805244$35$$35$d31O)))
(define-fun b$36$$35$$35$177 () Bool (and (is-FibHeap.Node lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j) (= lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j t1$35$$35$a1XH) (= lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j ((as FibHeap.Node (FibHeap.FibTree Int)) r$35$$35$a1XI x$35$$35$a1XJ ts1$35$$35$a1XK ds_d2X1)) (= (FibHeap.marked lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j) ds_d2X1) (= (FibHeap.rank lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j) r$35$$35$a1XI) (= (FibHeap.root lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j) x$35$$35$a1XJ) (= (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j) (apply$35$$35$0 FibHeap.pow2 r$35$$35$a1XI)) (= (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j))) (= (FibHeap.subtrees lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j) ts1$35$$35$a1XK) (< 0 (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805213$35$$35$d31j))))
(define-fun b$36$$35$$35$209 () Bool (and (= (apply$35$$35$35 (as FibHeap.size Int) x$35$$35$a1XX) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank x$35$$35$a1XX))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) x$35$$35$a1XX))))
(define-fun b$36$$35$$35$241 () Bool (and (not lq_anf$36$$35$$35$7205759403792805233$35$$35$d31D) (= lq_anf$36$$35$$35$7205759403792805233$35$$35$d31D (= lq_anf$36$$35$$35$7205759403792805230$35$$35$d31A lq_anf$36$$35$$35$7205759403792805231$35$$35$d31B)) (= lq_anf$36$$35$$35$7205759403792805233$35$$35$d31D lq_anf$36$$35$$35$7205759403792805232$35$$35$d31C)))
(define-fun b$36$$35$$35$369 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g)) (= lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g ds_d2Zt) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g) 0)))
(define-fun b$36$$35$$35$433 () Bool (and (= lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h ds_d2Zr) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h) 0)))
(define-fun b$36$$35$$35$465 () Bool (and (= (apply$35$$35$35 (as FibHeap.size Int) x$35$$35$a1Yf) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank x$35$$35$a1Yf))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) x$35$$35$a1Yf))))
(define-fun b$36$$35$$35$497 () Bool (< 0 lq_anf$36$$35$$35$7205759403792805307$35$$35$d32P))
(define-fun b$36$$35$$35$529 () Bool (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W) (is-FibHeap.FH lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W)))) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W)) (not (is-FibHeap.E lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W)) (= lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W ds_d2Ua) (= lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W ((as FibHeap.FH (FibHeap.FibHeap Int)) minTr$35$$35$a1Ys ts$35$$35$a1Yt)) (= (apply$35$$35$28 (as FibHeap.fibsize Int) lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W) (+ (apply$35$$35$35 (as FibHeap.size Int) minTr$35$$35$a1Ys) (apply$35$$35$0 (as FibHeap.lsize Int) ts$35$$35$a1Yt))) (= (FibHeap.minTree lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W) minTr$35$$35$a1Ys) (= (FibHeap.trees lq_anf$36$$35$$35$7205759403792805314$35$$35$d32W) ts$35$$35$a1Yt)))
(define-fun b$36$$35$$35$817 () Bool (and (= VV$35$$35$F$35$$35$229 ds_d2V4) (>= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$229) (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$229)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$229) 0)))
(define-fun b$36$$35$$35$849 () Bool (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$308) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$308) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$308))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$308) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$308)))) (= VV$35$$35$F$35$$35$308 h$35$$35$a1XO) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) VV$35$$35$F$35$$35$308))))
(define-fun b$36$$35$$35$178 () Bool (and (= lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k t2$35$$35$a1XL) (= (FibHeap.rank t1$35$$35$a1XH) (FibHeap.rank lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k)) (= (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k))))
(define-fun b$36$$35$$35$210 () Bool (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) ds_d2XC) (apply$35$$35$0 (as len Int) ds_d2XC)) (>= (apply$35$$35$0 (as len Int) ds_d2XC) 0)))
(define-fun b$36$$35$$35$274 () Bool (= lq_anf$36$$35$$35$7205759403792805247$35$$35$d31R (< lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P lq_anf$36$$35$$35$7205759403792805246$35$$35$d31Q)))
(define-fun b$36$$35$$35$370 () Bool (and (= lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s ds_d2Zr) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s) 0)))
(define-fun b$36$$35$$35$434 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h)) (= lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h ds_d2Zr) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h) 0)))
(define-fun b$36$$35$$35$466 () Bool (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) xs$35$$35$a1Yg) (apply$35$$35$0 (as len Int) xs$35$$35$a1Yg)) (>= (apply$35$$35$0 (as len Int) xs$35$$35$a1Yg) 0)))
(define-fun b$36$$35$$35$498 () Bool (and (= lq_anf$36$$35$$35$7205759403792805301$35$$35$d32J 0) (= lq_anf$36$$35$$35$7205759403792805301$35$$35$d32J ds_d2TG)))
(define-fun b$36$$35$$35$530 () Bool (and (= lq_anf$36$$35$$35$7205759403792805316$35$$35$d32Y (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank minTr$35$$35$a1Ys))) (= lq_anf$36$$35$$35$7205759403792805316$35$$35$d32Y (apply$35$$35$35 (as FibHeap.size Int) minTr$35$$35$a1Ys)) (< 0 lq_anf$36$$35$$35$7205759403792805316$35$$35$d32Y)))
(define-fun b$36$$35$$35$818 () Bool (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$421) (is-FibHeap.E VV$35$$35$F$35$$35$421) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$421) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$421))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$421) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$421)))) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$421)) (not (is-FibHeap.FH VV$35$$35$F$35$$35$421)) (= VV$35$$35$F$35$$35$421 (as FibHeap.E (FibHeap.FibHeap Int))) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) VV$35$$35$F$35$$35$421))))
(define-fun b$36$$35$$35$850 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$340) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$340)) (= VV$35$$35$F$35$$35$340 (apply$35$$35$0 (apply$35$$35$35 (as GHC.Types.$58$ Int) x$35$$35$a1Y2) lq_anf$36$$35$$35$7205759403792805234$35$$35$d31E)) (= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$340) (+ (apply$35$$35$35 (as FibHeap.size Int) x$35$$35$a1Y2) (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805234$35$$35$d31E))) (= (apply$35$$35$5 (as head Int) VV$35$$35$F$35$$35$340) x$35$$35$a1Y2) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$340) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805234$35$$35$d31E))) (= (apply$35$$35$5 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$340) x$35$$35$a1Y2) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$340) lq_anf$36$$35$$35$7205759403792805234$35$$35$d31E) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$340) lq_anf$36$$35$$35$7205759403792805234$35$$35$d31E) (>= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$340) (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$340)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$340) 0)))
(define-fun b$36$$35$$35$179 () Bool (and (= lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k t2$35$$35$a1XL) (= (FibHeap.rank t1$35$$35$a1XH) (FibHeap.rank lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k)) (= (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k))))
(define-fun b$36$$35$$35$211 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v)) (= lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v ds_d2X9) (= lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v (apply$35$$35$0 (apply$35$$35$35 (as GHC.Types.$58$ Int) x$35$$35$a1XX) ds_d2XC)) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) (+ (apply$35$$35$35 (as FibHeap.size Int) x$35$$35$a1XX) (apply$35$$35$0 (as FibHeap.lsize Int) ds_d2XC))) (= (apply$35$$35$5 (as head Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) x$35$$35$a1XX) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) (+ 1 (apply$35$$35$0 (as len Int) ds_d2XC))) (= (apply$35$$35$5 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) x$35$$35$a1XX) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) ds_d2XC) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) ds_d2XC) (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) 0)))
(define-fun b$36$$35$$35$243 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805234$35$$35$d31E) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805234$35$$35$d31E)) (= lq_anf$36$$35$$35$7205759403792805234$35$$35$d31E (apply$35$$35$0 (apply$35$$35$35 (as GHC.Types.$58$ Int) x$39$$35$$35$a1Y3) xs$35$$35$a1Y4)) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805234$35$$35$d31E) (+ (apply$35$$35$35 (as FibHeap.size Int) x$39$$35$$35$a1Y3) (apply$35$$35$0 (as FibHeap.lsize Int) xs$35$$35$a1Y4))) (= (apply$35$$35$5 (as head Int) lq_anf$36$$35$$35$7205759403792805234$35$$35$d31E) x$39$$35$$35$a1Y3) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805234$35$$35$d31E) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1Y4))) (= (apply$35$$35$5 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792805234$35$$35$d31E) x$39$$35$$35$a1Y3) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792805234$35$$35$d31E) xs$35$$35$a1Y4) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792805234$35$$35$d31E) xs$35$$35$a1Y4) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805234$35$$35$d31E) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805234$35$$35$d31E)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805234$35$$35$d31E) 0)))
(define-fun b$36$$35$$35$275 () Bool (and (= lq_anf$36$$35$$35$7205759403792805248$35$$35$d31S (< lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P lq_anf$36$$35$$35$7205759403792805246$35$$35$d31Q)) (= lq_anf$36$$35$$35$7205759403792805248$35$$35$d31S lq_anf$36$$35$$35$7205759403792805247$35$$35$d31R)))
(define-fun b$36$$35$$35$435 () Bool (and (= lq_anf$36$$35$$35$7205759403792805274$35$$35$d32i ds_d2Zq) (= (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805274$35$$35$d32i) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank lq_anf$36$$35$$35$7205759403792805274$35$$35$d32i))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805274$35$$35$d32i))))
(define-fun b$36$$35$$35$467 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h)) (= lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h ds_d2Zr) (= lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h (apply$35$$35$0 (apply$35$$35$35 (as GHC.Types.$58$ Int) x$35$$35$a1Yf) xs$35$$35$a1Yg)) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h) (+ (apply$35$$35$35 (as FibHeap.size Int) x$35$$35$a1Yf) (apply$35$$35$0 (as FibHeap.lsize Int) xs$35$$35$a1Yg))) (= (apply$35$$35$5 (as head Int) lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h) x$35$$35$a1Yf) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1Yg))) (= (apply$35$$35$5 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h) x$35$$35$a1Yf) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h) xs$35$$35$a1Yg) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h) xs$35$$35$a1Yg) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h) 0)))
(define-fun b$36$$35$$35$499 () Bool (= lq_anf$36$$35$$35$7205759403792805308$35$$35$d32Q 1))
(define-fun b$36$$35$$35$531 () Bool (and (= lq_anf$36$$35$$35$7205759403792805317$35$$35$d32Z (apply$35$$35$0 (as FibHeap.lsize Int) ts$35$$35$a1Yt)) (>= lq_anf$36$$35$$35$7205759403792805317$35$$35$d32Z (apply$35$$35$0 (as len Int) ts$35$$35$a1Yt))))
(define-fun b$36$$35$$35$819 () Bool (= VV$35$$35$F$35$$35$38 (Z3_OP_MUL lq_anf$36$$35$$35$7205759403792805303$35$$35$d32L lq_anf$36$$35$$35$7205759403792805307$35$$35$d32P)))
(define-fun b$36$$35$$35$851 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$372) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$372)) (= VV$35$$35$F$35$$35$372 (apply$35$$35$0 (apply$35$$35$35 (as GHC.Types.$58$ Int) x$35$$35$a1XX) lq_anf$36$$35$$35$7205759403792805239$35$$35$d31J)) (= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$372) (+ (apply$35$$35$35 (as FibHeap.size Int) x$35$$35$a1XX) (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805239$35$$35$d31J))) (= (apply$35$$35$5 (as head Int) VV$35$$35$F$35$$35$372) x$35$$35$a1XX) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$372) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805239$35$$35$d31J))) (= (apply$35$$35$5 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$372) x$35$$35$a1XX) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$372) lq_anf$36$$35$$35$7205759403792805239$35$$35$d31J) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$372) lq_anf$36$$35$$35$7205759403792805239$35$$35$d31J) (>= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$372) (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$372)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$372) 0)))
(define-fun b$36$$35$$35$180 () Bool (>= ds_d2X2 0))
(define-fun b$36$$35$$35$212 () Bool (and (= lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x ds_d2XC) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) 0)))
(define-fun b$36$$35$$35$276 () Bool (and (= lq_anf$36$$35$$35$7205759403792805248$35$$35$d31S (< lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P lq_anf$36$$35$$35$7205759403792805246$35$$35$d31Q)) (= lq_anf$36$$35$$35$7205759403792805248$35$$35$d31S lq_anf$36$$35$$35$7205759403792805247$35$$35$d31R)))
(define-fun b$36$$35$$35$308 () Bool (and (> (apply$35$$35$0 (as len Int) ds_d2Uo) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) ds_d2Uo) (apply$35$$35$0 (as len Int) ds_d2Uo)) (>= (apply$35$$35$0 (as len Int) ds_d2Uo) 0)))
(define-fun b$36$$35$$35$436 () Bool (and (= lq_anf$36$$35$$35$7205759403792805274$35$$35$d32i ds_d2Zq) (= (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805274$35$$35$d32i) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank lq_anf$36$$35$$35$7205759403792805274$35$$35$d32i))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805274$35$$35$d32i))))
(define-fun b$36$$35$$35$820 () Bool (and (= VV$35$$35$F$35$$35$70 lq_anf$36$$35$$35$7205759403792805282$35$$35$d32q) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$70) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p) (apply$35$$35$0 (as len Int) ds_d2Zr))) (>= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$70) (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$70)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$70) 0)))
(define-fun b$36$$35$$35$852 () Bool (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$309) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$309) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$309))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$309) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$309)))) (= VV$35$$35$F$35$$35$309 h$35$$35$a1XO) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) VV$35$$35$F$35$$35$309))))
(define-fun b$36$$35$$35$149 () Bool (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) ds_d30a)))
(define-fun b$36$$35$$35$213 () Bool (and (= lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x ds_d2XC) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) 0)))
(define-fun b$36$$35$$35$245 () Bool (and (= lq_anf$36$$35$$35$7205759403792805233$35$$35$d31D (= lq_anf$36$$35$$35$7205759403792805230$35$$35$d31A lq_anf$36$$35$$35$7205759403792805231$35$$35$d31B)) (= lq_anf$36$$35$$35$7205759403792805233$35$$35$d31D lq_anf$36$$35$$35$7205759403792805232$35$$35$d31C)))
(define-fun b$36$$35$$35$277 () Bool (and (not lq_anf$36$$35$$35$7205759403792805248$35$$35$d31S) (= lq_anf$36$$35$$35$7205759403792805248$35$$35$d31S (< lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P lq_anf$36$$35$$35$7205759403792805246$35$$35$d31Q)) (= lq_anf$36$$35$$35$7205759403792805248$35$$35$d31S lq_anf$36$$35$$35$7205759403792805247$35$$35$d31R)))
(define-fun b$36$$35$$35$309 () Bool (and (= lq_anf$36$$35$$35$7205759403792805258$35$$35$d322 ds_d2Uo) (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322) 0)))
(define-fun b$36$$35$$35$373 () Bool (and (= lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s ds_d2Zr) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s) 0)))
(define-fun b$36$$35$$35$437 () Bool (>= ds_d2Zv 0))
(define-fun b$36$$35$$35$469 () Bool (and (= lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p (FibHeap.subtrees ds_d2Zq)) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p) 0)))
(define-fun b$36$$35$$35$501 () Bool (= lq_anf$36$$35$$35$7205759403792805309$35$$35$d32R ds_d2TJ))
(define-fun b$36$$35$$35$821 () Bool (and (not VV$35$$35$F$35$$35$422) (= VV$35$$35$F$35$$35$422 GHC.Types.False)))
(define-fun b$36$$35$$35$853 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$341) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$341)) (= VV$35$$35$F$35$$35$341 (apply$35$$35$0 (apply$35$$35$35 (as GHC.Types.$58$ Int) x$35$$35$a1Y2) lq_anf$36$$35$$35$7205759403792805234$35$$35$d31E)) (= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$341) (+ (apply$35$$35$35 (as FibHeap.size Int) x$35$$35$a1Y2) (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805234$35$$35$d31E))) (= (apply$35$$35$5 (as head Int) VV$35$$35$F$35$$35$341) x$35$$35$a1Y2) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$341) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805234$35$$35$d31E))) (= (apply$35$$35$5 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$341) x$35$$35$a1Y2) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$341) lq_anf$36$$35$$35$7205759403792805234$35$$35$d31E) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$341) lq_anf$36$$35$$35$7205759403792805234$35$$35$d31E) (>= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$341) (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$341)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$341) 0)))
(define-fun b$36$$35$$35$150 () Bool (and (= lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b ds_d30a) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b))))
(define-fun b$36$$35$$35$182 () Bool (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) ts2$35$$35$a1XN) (apply$35$$35$0 (as len Int) ts2$35$$35$a1XN)) (>= (apply$35$$35$0 (as len Int) ts2$35$$35$a1XN) 0)))
(define-fun b$36$$35$$35$214 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x)) (= lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x ds_d2XC) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) 0)))
(define-fun b$36$$35$$35$246 () Bool (and lq_anf$36$$35$$35$7205759403792805233$35$$35$d31D (= lq_anf$36$$35$$35$7205759403792805233$35$$35$d31D (= lq_anf$36$$35$$35$7205759403792805230$35$$35$d31A lq_anf$36$$35$$35$7205759403792805231$35$$35$d31B)) (= lq_anf$36$$35$$35$7205759403792805233$35$$35$d31D lq_anf$36$$35$$35$7205759403792805232$35$$35$d31C)))
(define-fun b$36$$35$$35$278 () Bool (and (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T) (+ (apply$35$$35$0 (as len Int) ts1$35$$35$a1XR) (apply$35$$35$0 (as len Int) ts2$35$$35$a1XU))) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T) 0)))
(define-fun b$36$$35$$35$310 () Bool (and (= lq_anf$36$$35$$35$7205759403792805258$35$$35$d322 ds_d2Uo) (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322) 0)))
(define-fun b$36$$35$$35$374 () Bool (and (= (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805296$35$$35$d32E) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank lq_anf$36$$35$$35$7205759403792805296$35$$35$d32E))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805296$35$$35$d32E))))
(define-fun b$36$$35$$35$470 () Bool (and (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805282$35$$35$d32q) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p) (apply$35$$35$0 (as len Int) ds_d2Zr))) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805282$35$$35$d32q) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805282$35$$35$d32q)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805282$35$$35$d32q) 0)))
(define-fun b$36$$35$$35$502 () Bool (= lq_anf$36$$35$$35$7205759403792805309$35$$35$d32R ds_d2TJ))
(define-fun b$36$$35$$35$822 () Bool (and (= VV$35$$35$F$35$$35$39 lq_anf$36$$35$$35$7205759403792805306$35$$35$d32O) (= VV$35$$35$F$35$$35$39 (- ds_d2Tz lq_anf$36$$35$$35$7205759403792805305$35$$35$d32N))))
(define-fun b$36$$35$$35$854 () Bool (and (= VV$35$$35$F$35$$35$86 lq_anf$36$$35$$35$7205759403792805279$35$$35$d32n) (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$86) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$86) (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$86)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$86) 0)))
(define-fun b$36$$35$$35$151 () Bool (and (= lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b ds_d30a) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b))))
(define-fun b$36$$35$$35$247 () Bool (and (or (and (= (FibHeap.root lq_anf$36$$35$$35$7205759403792805235$35$$35$d31F) (FibHeap.root x$35$$35$a1Y2)) (<= (FibHeap.root x$35$$35$a1Y2) (FibHeap.root x$39$$35$$35$a1Y3))) (and (= (FibHeap.root lq_anf$36$$35$$35$7205759403792805235$35$$35$d31F) (FibHeap.root x$39$$35$$35$a1Y3)) (<= (FibHeap.root x$39$$35$$35$a1Y3) (FibHeap.root x$35$$35$a1Y2)))) (= (FibHeap.rank lq_anf$36$$35$$35$7205759403792805235$35$$35$d31F) (+ 1 (FibHeap.rank x$35$$35$a1Y2))) (= (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805235$35$$35$d31F) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank lq_anf$36$$35$$35$7205759403792805235$35$$35$d31F))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805235$35$$35$d31F))))
(define-fun b$36$$35$$35$311 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322)) (= lq_anf$36$$35$$35$7205759403792805258$35$$35$d322 (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792805258$35$$35$d322 ds_d2Uo) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322) 0) (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322) 0)))
(define-fun b$36$$35$$35$375 () Bool (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F) 0)))
(define-fun b$36$$35$$35$439 () Bool (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) subtr$35$$35$a1Yl) (apply$35$$35$0 (as len Int) subtr$35$$35$a1Yl)) (>= (apply$35$$35$0 (as len Int) subtr$35$$35$a1Yl) 0)))
(define-fun b$36$$35$$35$471 () Bool (and (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805283$35$$35$d32r) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805283$35$$35$d32r) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805283$35$$35$d32r)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805283$35$$35$d32r) 0)))
(define-fun b$36$$35$$35$503 () Bool (>= r$35$$35$a1Yx 0))
(define-fun b$36$$35$$35$823 () Bool (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$263) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$263) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$263))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$263) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$263)))) (or (and (= (FibHeap.root (FibHeap.minTree VV$35$$35$F$35$$35$263)) (FibHeap.root (FibHeap.minTree h$35$$35$a1XV))) (< (FibHeap.root (FibHeap.minTree h$35$$35$a1XV)) (FibHeap.root (FibHeap.minTree lq_anf$36$$35$$35$7205759403792805253$35$$35$d31X)))) (and (or (<= (FibHeap.root (FibHeap.minTree lq_anf$36$$35$$35$7205759403792805253$35$$35$d31X)) (FibHeap.root (FibHeap.minTree h$35$$35$a1XV))) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) h$35$$35$a1XV))) (= (FibHeap.root (FibHeap.minTree VV$35$$35$F$35$$35$263)) (FibHeap.root (FibHeap.minTree lq_anf$36$$35$$35$7205759403792805253$35$$35$d31X))))) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) VV$35$$35$F$35$$35$263))))
(define-fun b$36$$35$$35$152 () Bool (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b) (is-FibHeap.E lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b)) (not (is-FibHeap.FH lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b)) (= lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b (as FibHeap.E (FibHeap.FibHeap Int))) (= lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b ds_d30a) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b))))
(define-fun b$36$$35$$35$184 () Bool (and (is-FibHeap.Node lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k) (= lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k t2$35$$35$a1XL) (= lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k ((as FibHeap.Node (FibHeap.FibTree Int)) ds_d2X2 y$35$$35$a1XM ts2$35$$35$a1XN ds_d2X3)) (= (FibHeap.marked lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k) ds_d2X3) (= (FibHeap.rank lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k) ds_d2X2) (= (FibHeap.rank t1$35$$35$a1XH) (FibHeap.rank lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k)) (= (FibHeap.root lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k) y$35$$35$a1XM) (= (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k) (apply$35$$35$0 FibHeap.pow2 ds_d2X2)) (= (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k))) (= (FibHeap.subtrees lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k) ts2$35$$35$a1XN) (< 0 (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805214$35$$35$d31k))))
(define-fun b$36$$35$$35$216 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805239$35$$35$d31J) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805239$35$$35$d31J)) (= lq_anf$36$$35$$35$7205759403792805239$35$$35$d31J (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805239$35$$35$d31J) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805239$35$$35$d31J) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805239$35$$35$d31J) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805239$35$$35$d31J)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805239$35$$35$d31J) 0)))
(define-fun b$36$$35$$35$280 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805250$35$$35$d31U) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805250$35$$35$d31U)) (= lq_anf$36$$35$$35$7205759403792805250$35$$35$d31U (apply$35$$35$0 (apply$35$$35$35 (as GHC.Types.$58$ Int) minTr1$35$$35$a1XQ) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T)) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805250$35$$35$d31U) (+ (apply$35$$35$35 (as FibHeap.size Int) minTr1$35$$35$a1XQ) (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T))) (= (apply$35$$35$5 (as head Int) lq_anf$36$$35$$35$7205759403792805250$35$$35$d31U) minTr1$35$$35$a1XQ) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805250$35$$35$d31U) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T))) (= (apply$35$$35$5 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792805250$35$$35$d31U) minTr1$35$$35$a1XQ) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792805250$35$$35$d31U) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792805250$35$$35$d31U) lq_anf$36$$35$$35$7205759403792805249$35$$35$d31T) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805250$35$$35$d31U) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805250$35$$35$d31U)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805250$35$$35$d31U) 0)))
(define-fun b$36$$35$$35$312 () Bool (= lq_anf$36$$35$$35$7205759403792805259$35$$35$d323 lit$36$$47$Users$47$niki.vazou$47$tmp$47$jamie$47$LiquidHaskell$47$lh$45$thesis$47$src$47$FibHeap.hs$58$$40$96$44$1$41$$45$$40$99$44$57$41$$124$function$32$extractMin))
(define-fun b$36$$35$$35$376 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s)) (= lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s ds_d2Zr) (= lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s (apply$35$$35$0 (apply$35$$35$35 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805296$35$$35$d32E) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F)) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s) (+ (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805296$35$$35$d32E) (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F))) (= (apply$35$$35$5 (as head Int) lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s) lq_anf$36$$35$$35$7205759403792805296$35$$35$d32E) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F))) (= (apply$35$$35$5 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s) lq_anf$36$$35$$35$7205759403792805296$35$$35$d32E) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s) lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s) 0)))
(define-fun b$36$$35$$35$824 () Bool (and VV$35$$35$F$35$$35$423 (= VV$35$$35$F$35$$35$423 GHC.Types.True)))
(define-fun b$36$$35$$35$89 () Bool GHC.Types.True)
(define-fun b$36$$35$$35$153 () Bool (and (= lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b ds_d30a) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b))))
(define-fun b$36$$35$$35$185 () Bool (= lq_anf$36$$35$$35$7205759403792805215$35$$35$d31l (< x$35$$35$a1XJ y$35$$35$a1XM)))
(define-fun b$36$$35$$35$281 () Bool (and (= lq_anf$36$$35$$35$7205759403792805248$35$$35$d31S (< lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P lq_anf$36$$35$$35$7205759403792805246$35$$35$d31Q)) (= lq_anf$36$$35$$35$7205759403792805248$35$$35$d31S lq_anf$36$$35$$35$7205759403792805247$35$$35$d31R)))
(define-fun b$36$$35$$35$313 () Bool (and (= lq_anf$36$$35$$35$7205759403792805258$35$$35$d322 ds_d2Uo) (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322) 0)))
(define-fun b$36$$35$$35$377 () Bool (and (= lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t ds_d2Zr) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t) 0)))
(define-fun b$36$$35$$35$409 () Bool (and (= lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t ds_d2Zr) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t) 0)))
(define-fun b$36$$35$$35$441 () Bool (and (is-FibHeap.Node lq_anf$36$$35$$35$7205759403792805274$35$$35$d32i) (= lq_anf$36$$35$$35$7205759403792805274$35$$35$d32i ds_d2Zq) (= lq_anf$36$$35$$35$7205759403792805274$35$$35$d32i ((as FibHeap.Node (FibHeap.FibTree Int)) ds_d2Zv ds_d2Zw subtr$35$$35$a1Yl ds_d2Zx)) (= (FibHeap.marked lq_anf$36$$35$$35$7205759403792805274$35$$35$d32i) ds_d2Zx) (= (FibHeap.rank lq_anf$36$$35$$35$7205759403792805274$35$$35$d32i) ds_d2Zv) (= (FibHeap.root lq_anf$36$$35$$35$7205759403792805274$35$$35$d32i) ds_d2Zw) (= (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805274$35$$35$d32i) (apply$35$$35$0 FibHeap.pow2 ds_d2Zv)) (= (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805274$35$$35$d32i) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank lq_anf$36$$35$$35$7205759403792805274$35$$35$d32i))) (= (FibHeap.subtrees lq_anf$36$$35$$35$7205759403792805274$35$$35$d32i) subtr$35$$35$a1Yl) (< 0 (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805274$35$$35$d32i))))
(define-fun b$36$$35$$35$505 () Bool (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) ds_d2TX) (apply$35$$35$0 (as len Int) ds_d2TX)) (>= (apply$35$$35$0 (as len Int) ds_d2TX) 0)))
(define-fun b$36$$35$$35$825 () Bool (and (= VV$35$$35$F$35$$35$40 lq_anf$36$$35$$35$7205759403792805306$35$$35$d32O) (= VV$35$$35$F$35$$35$40 (- ds_d2Tz lq_anf$36$$35$$35$7205759403792805305$35$$35$d32N))))
(define-fun b$36$$35$$35$857 () Bool (and (= (apply$35$$35$35 (as FibHeap.size Int) VV$35$$35$F$35$$35$311) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank VV$35$$35$F$35$$35$311))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) VV$35$$35$F$35$$35$311))))
(define-fun b$36$$35$$35$154 () Bool (and (= (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c))))
(define-fun b$36$$35$$35$186 () Bool (and (= lq_anf$36$$35$$35$7205759403792805216$35$$35$d31m (< x$35$$35$a1XJ y$35$$35$a1XM)) (= lq_anf$36$$35$$35$7205759403792805216$35$$35$d31m lq_anf$36$$35$$35$7205759403792805215$35$$35$d31l)))
(define-fun b$36$$35$$35$218 () Bool (and (= lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x ds_d2XC) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) 0)))
(define-fun b$36$$35$$35$250 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)) (= lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H) 0)))
(define-fun b$36$$35$$35$282 () Bool (and lq_anf$36$$35$$35$7205759403792805248$35$$35$d31S (= lq_anf$36$$35$$35$7205759403792805248$35$$35$d31S (< lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P lq_anf$36$$35$$35$7205759403792805246$35$$35$d31Q)) (= lq_anf$36$$35$$35$7205759403792805248$35$$35$d31S lq_anf$36$$35$$35$7205759403792805247$35$$35$d31R)))
(define-fun b$36$$35$$35$314 () Bool (and (= (apply$35$$35$35 (as FibHeap.size Int) t$35$$35$a1Y6) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank t$35$$35$a1Y6))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) t$35$$35$a1Y6))))
(define-fun b$36$$35$$35$378 () Bool (and (= lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t ds_d2Zr) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t) 0)))
(define-fun b$36$$35$$35$410 () Bool (and (= (apply$35$$35$35 (as FibHeap.size Int) x$35$$35$a1Yf) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank x$35$$35$a1Yf))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) x$35$$35$a1Yf))))
(define-fun b$36$$35$$35$442 () Bool (and (= lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j subtr$35$$35$a1Yl) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j) 0)))
(define-fun b$36$$35$$35$826 () Bool (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$264) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$264) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$264))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$264) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$264)))) (or (and (= (FibHeap.root (FibHeap.minTree VV$35$$35$F$35$$35$264)) (FibHeap.root (FibHeap.minTree h$35$$35$a1XV))) (< (FibHeap.root (FibHeap.minTree h$35$$35$a1XV)) (FibHeap.root (FibHeap.minTree lq_anf$36$$35$$35$7205759403792805253$35$$35$d31X)))) (and (or (<= (FibHeap.root (FibHeap.minTree lq_anf$36$$35$$35$7205759403792805253$35$$35$d31X)) (FibHeap.root (FibHeap.minTree h$35$$35$a1XV))) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) h$35$$35$a1XV))) (= (FibHeap.root (FibHeap.minTree VV$35$$35$F$35$$35$264)) (FibHeap.root (FibHeap.minTree lq_anf$36$$35$$35$7205759403792805253$35$$35$d31X))))) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) VV$35$$35$F$35$$35$264))))
(define-fun b$36$$35$$35$858 () Bool (and (= VV$35$$35$F$35$$35$184 lit$36$$47$Users$47$niki.vazou$47$tmp$47$jamie$47$LiquidHaskell$47$lh$45$thesis$47$src$47$FibHeap.hs$58$$40$104$44$1$41$$45$$40$108$44$58$41$$124$function$32$deleteMin) (= VV$35$$35$F$35$$35$184 lq_anf$36$$35$$35$7205759403792805288$35$$35$d32w)))
(define-fun b$36$$35$$35$155 () Bool (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805207$35$$35$d31d) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805207$35$$35$d31d)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805207$35$$35$d31d) 0)))
(define-fun b$36$$35$$35$187 () Bool (and (= lq_anf$36$$35$$35$7205759403792805216$35$$35$d31m (< x$35$$35$a1XJ y$35$$35$a1XM)) (= lq_anf$36$$35$$35$7205759403792805216$35$$35$d31m lq_anf$36$$35$$35$7205759403792805215$35$$35$d31l)))
(define-fun b$36$$35$$35$219 () Bool (and (= (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K))))
(define-fun b$36$$35$$35$283 () Bool (and (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805251$35$$35$d31V) (+ (apply$35$$35$0 (as len Int) ts2$35$$35$a1XU) (apply$35$$35$0 (as len Int) ts1$35$$35$a1XR))) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805251$35$$35$d31V) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805251$35$$35$d31V)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805251$35$$35$d31V) 0)))
(define-fun b$36$$35$$35$315 () Bool (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) ds_d2V4) (apply$35$$35$0 (as len Int) ds_d2V4)) (>= (apply$35$$35$0 (as len Int) ds_d2V4) 0)))
(define-fun b$36$$35$$35$379 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t)) (= lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t ds_d2Zr) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t) 0)))
(define-fun b$36$$35$$35$411 () Bool (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) xs$35$$35$a1Yg) (apply$35$$35$0 (as len Int) xs$35$$35$a1Yg)) (>= (apply$35$$35$0 (as len Int) xs$35$$35$a1Yg) 0)))
(define-fun b$36$$35$$35$443 () Bool (and (= lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j subtr$35$$35$a1Yl) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j) 0)))
(define-fun b$36$$35$$35$507 () Bool (and (is-FibHeap.Node lq_anf$36$$35$$35$7205759403792805309$35$$35$d32R) (= lq_anf$36$$35$$35$7205759403792805309$35$$35$d32R ds_d2TJ) (= lq_anf$36$$35$$35$7205759403792805309$35$$35$d32R ((as FibHeap.Node (FibHeap.FibTree Int)) r$35$$35$a1Yx ds_d2TW ds_d2TX ds_d2TY)) (= (FibHeap.marked lq_anf$36$$35$$35$7205759403792805309$35$$35$d32R) ds_d2TY) (= (FibHeap.rank lq_anf$36$$35$$35$7205759403792805309$35$$35$d32R) r$35$$35$a1Yx) (= (FibHeap.root lq_anf$36$$35$$35$7205759403792805309$35$$35$d32R) ds_d2TW) (= (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805309$35$$35$d32R) (apply$35$$35$0 FibHeap.pow2 r$35$$35$a1Yx)) (= (FibHeap.subtrees lq_anf$36$$35$$35$7205759403792805309$35$$35$d32R) ds_d2TX)))
(define-fun b$36$$35$$35$827 () Bool (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$265) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$265) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$265))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$265) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$265)))) (= VV$35$$35$F$35$$35$265 lq_anf$36$$35$$35$7205759403792805253$35$$35$d31X) (= (FibHeap.rank (FibHeap.minTree VV$35$$35$F$35$$35$265)) 1) (= (FibHeap.root (FibHeap.minTree VV$35$$35$F$35$$35$265)) x$35$$35$a1XW) (= (FibHeap.subtrees (FibHeap.minTree VV$35$$35$F$35$$35$265)) (as GHC.Types.$91$$93$ Int)) (= (FibHeap.trees VV$35$$35$F$35$$35$265) (as GHC.Types.$91$$93$ Int)) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) VV$35$$35$F$35$$35$265))))
(define-fun b$36$$35$$35$859 () Bool (= VV$35$$35$F$35$$35$25 (+ lq_anf$36$$35$$35$7205759403792805316$35$$35$d32Y lq_anf$36$$35$$35$7205759403792805317$35$$35$d32Z)))
(define-fun b$36$$35$$35$92 () Bool (not GHC.Types.False))
(define-fun b$36$$35$$35$156 () Bool (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b) (is-FibHeap.FH lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b)) (not (is-FibHeap.E lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b)) (= lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b ds_d30a) (= lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b ((as FibHeap.FH (FibHeap.FibHeap Int)) lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c lq_anf$36$$35$$35$7205759403792805207$35$$35$d31d)) (= (apply$35$$35$28 (as FibHeap.fibsize Int) lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b) (+ (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c) (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805207$35$$35$d31d))) (= (FibHeap.minTree lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b) lq_anf$36$$35$$35$7205759403792805206$35$$35$d31c) (= (FibHeap.trees lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b) lq_anf$36$$35$$35$7205759403792805207$35$$35$d31d) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) lq_anf$36$$35$$35$7205759403792805205$35$$35$d31b))))
(define-fun b$36$$35$$35$188 () Bool (and (not lq_anf$36$$35$$35$7205759403792805216$35$$35$d31m) (= lq_anf$36$$35$$35$7205759403792805216$35$$35$d31m (< x$35$$35$a1XJ y$35$$35$a1XM)) (= lq_anf$36$$35$$35$7205759403792805216$35$$35$d31m lq_anf$36$$35$$35$7205759403792805215$35$$35$d31l)))
(define-fun b$36$$35$$35$220 () Bool (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L) 0)))
(define-fun b$36$$35$$35$252 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I)) (= lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I (apply$35$$35$0 (apply$35$$35$35 (as GHC.Types.$58$ Int) x$35$$35$a1XX) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) (+ (apply$35$$35$35 (as FibHeap.size Int) x$35$$35$a1XX) (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H))) (= (apply$35$$35$5 (as head Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) x$35$$35$a1XX) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H))) (= (apply$35$$35$5 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) x$35$$35$a1XX) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) 0)))
(define-fun b$36$$35$$35$316 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322)) (= lq_anf$36$$35$$35$7205759403792805258$35$$35$d322 ds_d2Uo) (= lq_anf$36$$35$$35$7205759403792805258$35$$35$d322 (apply$35$$35$0 (apply$35$$35$35 (as GHC.Types.$58$ Int) t$35$$35$a1Y6) ds_d2V4)) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322) (+ (apply$35$$35$35 (as FibHeap.size Int) t$35$$35$a1Y6) (apply$35$$35$0 (as FibHeap.lsize Int) ds_d2V4))) (= (apply$35$$35$5 (as head Int) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322) t$35$$35$a1Y6) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322) (+ 1 (apply$35$$35$0 (as len Int) ds_d2V4))) (= (apply$35$$35$5 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322) t$35$$35$a1Y6) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322) ds_d2V4) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322) ds_d2V4) (> (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805258$35$$35$d322) 0)))
(define-fun b$36$$35$$35$380 () Bool (and (= lq_anf$36$$35$$35$7205759403792805286$35$$35$d32u ds_d2Zq) (= (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805286$35$$35$d32u) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank lq_anf$36$$35$$35$7205759403792805286$35$$35$d32u))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805286$35$$35$d32u))))
(define-fun b$36$$35$$35$412 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t)) (= lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t ds_d2Zr) (= lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t (apply$35$$35$0 (apply$35$$35$35 (as GHC.Types.$58$ Int) x$35$$35$a1Yf) xs$35$$35$a1Yg)) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t) (+ (apply$35$$35$35 (as FibHeap.size Int) x$35$$35$a1Yf) (apply$35$$35$0 (as FibHeap.lsize Int) xs$35$$35$a1Yg))) (= (apply$35$$35$5 (as head Int) lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t) x$35$$35$a1Yf) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1Yg))) (= (apply$35$$35$5 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t) x$35$$35$a1Yf) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t) xs$35$$35$a1Yg) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t) xs$35$$35$a1Yg) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t) 0)))
(define-fun b$36$$35$$35$444 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j)) (= lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j subtr$35$$35$a1Yl) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j) 0)))
(define-fun b$36$$35$$35$828 () Bool (and (= VV$35$$35$F$35$$35$106 lq_anf$36$$35$$35$7205759403792805278$35$$35$d32m) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$106) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j) (apply$35$$35$0 (as len Int) ds_d2Zr))) (>= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$106) (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$106)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$106) 0)))
(define-fun b$36$$35$$35$860 () Bool (and (= VV$35$$35$F$35$$35$185 lit$36$$47$Users$47$niki.vazou$47$tmp$47$jamie$47$LiquidHaskell$47$lh$45$thesis$47$src$47$FibHeap.hs$58$$40$104$44$1$41$$45$$40$108$44$58$41$$124$function$32$deleteMin) (= VV$35$$35$F$35$$35$185 lq_anf$36$$35$$35$7205759403792805270$35$$35$d32e)))
(define-fun b$36$$35$$35$189 () Bool (= lq_anf$36$$35$$35$7205759403792805217$35$$35$d31n 1))
(define-fun b$36$$35$$35$221 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x)) (= lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x ds_d2XC) (= lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x (apply$35$$35$0 (apply$35$$35$35 (as GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L)) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) (+ (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K) (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L))) (= (apply$35$$35$5 (as head Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L))) (= (apply$35$$35$5 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) 0)))
(define-fun b$36$$35$$35$285 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792805252$35$$35$d31W) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792805252$35$$35$d31W)) (= lq_anf$36$$35$$35$7205759403792805252$35$$35$d31W (apply$35$$35$0 (apply$35$$35$35 (as GHC.Types.$58$ Int) minTr2$35$$35$a1XT) lq_anf$36$$35$$35$7205759403792805251$35$$35$d31V)) (= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805252$35$$35$d31W) (+ (apply$35$$35$35 (as FibHeap.size Int) minTr2$35$$35$a1XT) (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805251$35$$35$d31V))) (= (apply$35$$35$5 (as head Int) lq_anf$36$$35$$35$7205759403792805252$35$$35$d31W) minTr2$35$$35$a1XT) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805252$35$$35$d31W) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805251$35$$35$d31V))) (= (apply$35$$35$5 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792805252$35$$35$d31W) minTr2$35$$35$a1XT) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792805252$35$$35$d31W) lq_anf$36$$35$$35$7205759403792805251$35$$35$d31V) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792805252$35$$35$d31W) lq_anf$36$$35$$35$7205759403792805251$35$$35$d31V) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805252$35$$35$d31W) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805252$35$$35$d31W)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805252$35$$35$d31W) 0)))
(define-fun b$36$$35$$35$317 () Bool (and (= lq_anf$36$$35$$35$7205759403792805260$35$$35$d324 ds_d2V4) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805260$35$$35$d324) 0)))
(define-fun b$36$$35$$35$381 () Bool (and (= lq_anf$36$$35$$35$7205759403792805286$35$$35$d32u ds_d2Zq) (= (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805286$35$$35$d32u) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank lq_anf$36$$35$$35$7205759403792805286$35$$35$d32u))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) lq_anf$36$$35$$35$7205759403792805286$35$$35$d32u))))
(define-fun b$36$$35$$35$445 () Bool (= lq_anf$36$$35$$35$7205759403792805276$35$$35$d32k lit$36$$47$Users$47$niki.vazou$47$tmp$47$jamie$47$LiquidHaskell$47$lh$45$thesis$47$src$47$FibHeap.hs$58$$40$104$44$1$41$$45$$40$108$44$58$41$$124$function$32$deleteMin))
(define-fun b$36$$35$$35$829 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$362) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$362)) (= VV$35$$35$F$35$$35$362 (apply$35$$35$0 (apply$35$$35$35 (as GHC.Types.$58$ Int) x$35$$35$a1Y2) lq_anf$36$$35$$35$7205759403792805229$35$$35$d31z)) (= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$362) (+ (apply$35$$35$35 (as FibHeap.size Int) x$35$$35$a1Y2) (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805229$35$$35$d31z))) (= (apply$35$$35$5 (as head Int) VV$35$$35$F$35$$35$362) x$35$$35$a1Y2) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$362) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805229$35$$35$d31z))) (= (apply$35$$35$5 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$362) x$35$$35$a1Y2) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$362) lq_anf$36$$35$$35$7205759403792805229$35$$35$d31z) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$362) lq_anf$36$$35$$35$7205759403792805229$35$$35$d31z) (>= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$362) (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$362)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$362) 0)))
(define-fun b$36$$35$$35$861 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$313) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$313)) (= VV$35$$35$F$35$$35$313 lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) (= VV$35$$35$F$35$$35$313 (apply$35$$35$0 (apply$35$$35$35 (as GHC.Types.$58$ Int) x$35$$35$a1XX) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)) (= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$35 (as FibHeap.size Int) x$35$$35$a1XX) (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H))) (= (apply$35$$35$5 (as head Int) VV$35$$35$F$35$$35$313) x$35$$35$a1XX) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H))) (= (apply$35$$35$5 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$313) x$35$$35$a1XX) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$313) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$313) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H) (>= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) 0)))
(define-fun b$36$$35$$35$190 () Bool (= lq_anf$36$$35$$35$7205759403792805218$35$$35$d31o lq_anf$36$$35$$35$7205759403792805217$35$$35$d31n))
(define-fun b$36$$35$$35$382 () Bool (>= ds_d2Zv 0))
(define-fun b$36$$35$$35$414 () Bool (and (= lq_anf$36$$35$$35$7205759403792805293$35$$35$d32B (FibHeap.subtrees ds_d2Zq)) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805293$35$$35$d32B) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805293$35$$35$d32B)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805293$35$$35$d32B) 0)))
(define-fun b$36$$35$$35$446 () Bool (and (= lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j subtr$35$$35$a1Yl) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j) 0)))
(define-fun b$36$$35$$35$510 () Bool (>= (apply$35$$35$0 (as len Int) ds_d2TZ) 0))
(define-fun b$36$$35$$35$830 () Bool (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$363) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$363)) (= VV$35$$35$F$35$$35$363 (apply$35$$35$0 (apply$35$$35$35 (as GHC.Types.$58$ Int) x$35$$35$a1Y2) lq_anf$36$$35$$35$7205759403792805229$35$$35$d31z)) (= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$363) (+ (apply$35$$35$35 (as FibHeap.size Int) x$35$$35$a1Y2) (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805229$35$$35$d31z))) (= (apply$35$$35$5 (as head Int) VV$35$$35$F$35$$35$363) x$35$$35$a1Y2) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$363) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805229$35$$35$d31z))) (= (apply$35$$35$5 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$363) x$35$$35$a1Y2) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$363) lq_anf$36$$35$$35$7205759403792805229$35$$35$d31z) (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$363) lq_anf$36$$35$$35$7205759403792805229$35$$35$d31z) (>= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$363) (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$363)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$363) 0)))
(define-fun b$36$$35$$35$862 () Bool (and (= VV$35$$35$F$35$$35$122 lq_anf$36$$35$$35$7205759403792805295$35$$35$d32D) (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$122) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$122) (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$122)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$122) 0)))
(define-fun b$36$$35$$35$191 () Bool (= lq_anf$36$$35$$35$7205759403792805219$35$$35$d31p (+ r$35$$35$a1XI lq_anf$36$$35$$35$7205759403792805218$35$$35$d31o)))
(define-fun b$36$$35$$35$255 () Bool (and (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) ds_d2Vf) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) ds_d2Vf))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) ds_d2Vf) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) ds_d2Vf)))) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) ds_d2Vf))))
(define-fun b$36$$35$$35$351 () Bool (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) ds_d2Y7) (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) ds_d2Y7) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) ds_d2Y7))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) ds_d2Y7) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) ds_d2Y7)))) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) ds_d2Y7))))
(define-fun b$36$$35$$35$415 () Bool (and (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805294$35$$35$d32C) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805293$35$$35$d32B) (apply$35$$35$0 (as len Int) ds_d2Zr))) (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_anf$36$$35$$35$7205759403792805294$35$$35$d32C) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805294$35$$35$d32C)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805294$35$$35$d32C) 0)))
(define-fun b$36$$35$$35$447 () Bool (and (= (apply$35$$35$35 (as FibHeap.size Int) x$35$$35$a1Ym) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank x$35$$35$a1Ym))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) x$35$$35$a1Ym))))
(define-fun b$36$$35$$35$511 () Bool (and (= lq_anf$36$$35$$35$7205759403792805310$35$$35$d32S ds_d2TZ) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805310$35$$35$d32S) 0)))
(define-fun b$36$$35$$35$831 () Bool (and (is-FibHeap.Node VV$35$$35$F$35$$35$396) (= VV$35$$35$F$35$$35$396 ((as FibHeap.Node (FibHeap.FibTree Int)) lq_anf$36$$35$$35$7205759403792805219$35$$35$d31p y$35$$35$a1XM lq_anf$36$$35$$35$7205759403792805220$35$$35$d31q GHC.Types.False)) (= (FibHeap.marked VV$35$$35$F$35$$35$396) GHC.Types.False) (= (FibHeap.rank VV$35$$35$F$35$$35$396) lq_anf$36$$35$$35$7205759403792805219$35$$35$d31p) (= (FibHeap.root VV$35$$35$F$35$$35$396) y$35$$35$a1XM) (= (apply$35$$35$35 (as FibHeap.size Int) VV$35$$35$F$35$$35$396) (apply$35$$35$0 FibHeap.pow2 lq_anf$36$$35$$35$7205759403792805219$35$$35$d31p)) (= (apply$35$$35$35 (as FibHeap.size Int) VV$35$$35$F$35$$35$396) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank VV$35$$35$F$35$$35$396))) (= (FibHeap.subtrees VV$35$$35$F$35$$35$396) lq_anf$36$$35$$35$7205759403792805220$35$$35$d31q) (< 0 (apply$35$$35$35 (as FibHeap.size Int) VV$35$$35$F$35$$35$396))))
(push 1)
(assert (and true b$36$$35$$35$41 b$36$$35$$35$203 b$36$$35$$35$204 b$36$$35$$35$47 b$36$$35$$35$208 b$36$$35$$35$209 b$36$$35$$35$210 b$36$$35$$35$211 b$36$$35$$35$212 b$36$$35$$35$89 b$36$$35$$35$218 b$36$$35$$35$250 b$36$$35$$35$219 b$36$$35$$35$92 b$36$$35$$35$220 b$36$$35$$35$252 b$36$$35$$35$221 b$36$$35$$35$861))
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$313 lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) ds_d2X9))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$313)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$313) ds_d2X9)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$313 lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) ds_d2XC) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$313 lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) ds_d2X9) 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) ds_d2X9) (apply$35$$35$0 (as len Int) ds_d2X9)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$313 lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$313 lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$313) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L) (apply$35$$35$0 (as len Int) ds_d2X9)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) ds_d2X9))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$313 ds_d2XC)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$313 lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$313 lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) ds_d2X9) (apply$35$$35$0 (as len Int) ds_d2XC)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$313) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) ds_d2X9) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$313 lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) (apply$35$$35$0 (as len Int) ds_d2X9)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$313 lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$313 lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) ds_d2XC) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$313 lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$313 lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$313 lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$313 ds_d2XC))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) (apply$35$$35$0 (as len Int) ds_d2XC)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$313))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$313) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) ds_d2X9))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$313) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H) (apply$35$$35$0 (as len Int) ds_d2XC)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$313))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$313 lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ 1 (apply$35$$35$0 (as len Int) ds_d2XC)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) (apply$35$$35$0 (as len Int) ds_d2X9)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$313 lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$313) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H) 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$313 lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) (apply$35$$35$0 (as len Int) ds_d2XC)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ 1 (apply$35$$35$0 (as len Int) ds_d2X9)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$313 lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$313 lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) ds_d2X9))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) ds_d2XC))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$313 lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$313) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) ds_d2X9))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) ds_d2XC))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) ds_d2XC) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$313 lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$5 (as head Int) VV$35$$35$F$35$$35$313) lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$313 lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) ds_d2X9) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$5 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$313) lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$313 ds_d2XC)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) ds_d2X9) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$313) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) ds_d2XC) (apply$35$$35$0 (as len Int) ds_d2XC)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$313 lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) ds_d2XC) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$313 lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) ds_d2XC) (apply$35$$35$0 (as len Int) ds_d2X9)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$313 ds_d2X9)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$313 ds_d2X9)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= 0 1)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$313 lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L) (apply$35$$35$0 (as len Int) ds_d2XC)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$313 lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$313) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) ds_d2XC))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$313 lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$5 (as head Int) VV$35$$35$F$35$$35$313) x$35$$35$a1XX)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$313 lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L) 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) (apply$35$$35$0 (as len Int) ds_d2X9)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$313) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) (apply$35$$35$0 (as len Int) ds_d2XC)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) ds_d2X9) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$313 ds_d2X9))))
(check-sat)
(pop 1)
(push 1)
(assert (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$313)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$313 lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$313 (FibHeap.subtrees lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$313 ds_d2X9)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$5 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$313) x$35$$35$a1XX)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$313) ds_d2X9)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) ds_d2XC) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$313 lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) ds_d2XC))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$313 lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) ds_d2XC) 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H) (apply$35$$35$0 (as len Int) ds_d2X9)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$313) ds_d2XC)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$313 ds_d2XC)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$313) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x)))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$313 ds_d2XC)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$313 ds_d2X9)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) ds_d2XC))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$313) ds_d2XC)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$313 ds_d2XC)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) (+ (apply$35$$35$0 (as len Int) ds_d2X9) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$313 (FibHeap.subtrees x$35$$35$a1XX))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$313 ds_d2X9)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$313) 0)))
(check-sat)
(pop 1)
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (and (<= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I)) (<= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) 1)) (> (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)) (<= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (+ (apply$35$$35$0 (as len Int) ds_d2XC) 1)) (= (apply$35$$35$5 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) x$35$$35$a1XX) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (not (= lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733 ds_d2X9)) (< (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v)) (= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I))) (<= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L) 1)) (>= lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733 lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) (= (apply$35$$35$5 (as head Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) x$35$$35$a1XX) (<= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) 1)) (> (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) 0) (<= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (apply$35$$35$0 (as len Int) ds_d2XC)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H) (= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H))) (<= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v)) (<= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) 1)) (= lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733 lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) (>= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) 0) (= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H))) (<= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H) 1)) (not (= lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733 lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733)) (< (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (apply$35$$35$0 (as len Int) ds_d2X9)) (>= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I)) (<= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x)) (= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I)) (<= lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733 lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) (>= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)) (<= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (apply$35$$35$0 (as len Int) ds_d2X9)) (= (apply$35$$35$0 (as tail Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H) (<= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (+ (apply$35$$35$0 (as len Int) ds_d2X9) 1)) (not (= lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733 lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v)) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I$35$$35$k_$35$$35$1885 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v$35$$35$k_$35$$35$1885 Int) (lq_karg$36$VV$35$$35$1884$35$$35$k_$35$$35$1885 (FibHeap.FibTree Int)) (lq_tmp$36$x$35$$35$1887 (FibHeap.FibTree Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x$35$$35$k_$35$$35$1885 Int) (lq_karg$36$ds_d2XC$35$$35$k_$35$$35$1885 Int) (lq_karg$36$ds_d2X9$35$$35$k_$35$$35$1885 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H$35$$35$k_$35$$35$1885 Int) (lq_karg$36$x$35$$35$a1XX$35$$35$k_$35$$35$1885 (FibHeap.FibTree Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K$35$$35$k_$35$$35$1885 (FibHeap.FibTree Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L$35$$35$k_$35$$35$1885 Int)) (and (= lq_karg$36$VV$35$$35$1884$35$$35$k_$35$$35$1885 lq_rnm$36$lq_tmp$36$x$35$$35$43$35$$35$734) (= lq_karg$36$ds_d2X9$35$$35$k_$35$$35$1885 ds_d2X9) (= lq_karg$36$ds_d2XC$35$$35$k_$35$$35$1885 ds_d2XC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L) (= lq_karg$36$x$35$$35$a1XX$35$$35$k_$35$$35$1885 x$35$$35$a1XX) (= lq_tmp$36$x$35$$35$1887 lq_rnm$36$lq_tmp$36$x$35$$35$43$35$$35$734) (exists ((VV$35$$35$F$35$$35$311 (FibHeap.FibTree Int))) (and (= (apply$35$$35$35 (as FibHeap.size Int) VV$35$$35$F$35$$35$311) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank VV$35$$35$F$35$$35$311))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) VV$35$$35$F$35$$35$311)) (= lq_karg$36$VV$35$$35$1884$35$$35$k_$35$$35$1885 VV$35$$35$F$35$$35$311) (= lq_karg$36$ds_d2X9$35$$35$k_$35$$35$1885 ds_d2X9) (= lq_karg$36$ds_d2XC$35$$35$k_$35$$35$1885 ds_d2XC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L) (= lq_karg$36$x$35$$35$a1XX$35$$35$k_$35$$35$1885 x$35$$35$a1XX)))))) b$36$$35$$35$807 b$36$$35$$35$41 b$36$$35$$35$203 b$36$$35$$35$204 b$36$$35$$35$47 b$36$$35$$35$208 b$36$$35$$35$209 b$36$$35$$35$210 b$36$$35$$35$211 b$36$$35$$35$212 b$36$$35$$35$89 b$36$$35$$35$218 b$36$$35$$35$250 b$36$$35$$35$219 b$36$$35$$35$92 b$36$$35$$35$220 b$36$$35$$35$252 b$36$$35$$35$221 (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733)) (>= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) 0)) (and (= (apply$35$$35$35 (as FibHeap.size Int) lq_rnm$36$lq_tmp$36$x$35$$35$43$35$$35$734) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank lq_rnm$36$lq_tmp$36$x$35$$35$43$35$$35$734))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) lq_rnm$36$lq_tmp$36$x$35$$35$43$35$$35$734)))))
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (+ (apply$35$$35$0 (as len Int) ds_d2XC) 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$5 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$320) x$35$$35$a1XX)))
(check-sat)
(pop 1)
(push 1)
(assert (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$320)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$320 ds_d2X9))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L) 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$320 lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$5 (as head Int) VV$35$$35$F$35$$35$320) x$35$$35$a1XX)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (apply$35$$35$0 (as len Int) ds_d2XC))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$320) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$320 lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H) 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$320 lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$320))))
(check-sat)
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (apply$35$$35$0 (as len Int) ds_d2X9))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$320 lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (apply$35$$35$0 (as len Int) ds_d2X9))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$320) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (+ (apply$35$$35$0 (as len Int) ds_d2X9) 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$320 lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v))))
(check-sat)
(pop 1)
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (and (<= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (+ (apply$35$$35$0 (as len Int) ds_d2X9) 1)) (<= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (apply$35$$35$0 (as len Int) ds_d2X9)) (>= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)) (>= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I)) (not (= lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733 lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)) (>= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) 0) (<= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) 1)) (<= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v)) (> (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) 0) (<= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) 1)) (<= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (+ (apply$35$$35$0 (as len Int) ds_d2XC) 1)) (> (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)) (<= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) 1)) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I$35$$35$k_$35$$35$1885 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v$35$$35$k_$35$$35$1885 Int) (lq_karg$36$VV$35$$35$1884$35$$35$k_$35$$35$1885 (FibHeap.FibTree Int)) (lq_tmp$36$x$35$$35$1887 (FibHeap.FibTree Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x$35$$35$k_$35$$35$1885 Int) (lq_karg$36$ds_d2XC$35$$35$k_$35$$35$1885 Int) (lq_karg$36$ds_d2X9$35$$35$k_$35$$35$1885 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H$35$$35$k_$35$$35$1885 Int) (lq_karg$36$x$35$$35$a1XX$35$$35$k_$35$$35$1885 (FibHeap.FibTree Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K$35$$35$k_$35$$35$1885 (FibHeap.FibTree Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L$35$$35$k_$35$$35$1885 Int)) (and (= lq_karg$36$VV$35$$35$1884$35$$35$k_$35$$35$1885 lq_rnm$36$lq_tmp$36$x$35$$35$43$35$$35$734) (= lq_karg$36$ds_d2X9$35$$35$k_$35$$35$1885 ds_d2X9) (= lq_karg$36$ds_d2XC$35$$35$k_$35$$35$1885 ds_d2XC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L) (= lq_karg$36$x$35$$35$a1XX$35$$35$k_$35$$35$1885 x$35$$35$a1XX) (= lq_tmp$36$x$35$$35$1887 lq_rnm$36$lq_tmp$36$x$35$$35$43$35$$35$734) (exists ((VV$35$$35$F$35$$35$311 (FibHeap.FibTree Int))) (and (= (apply$35$$35$35 (as FibHeap.size Int) VV$35$$35$F$35$$35$311) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank VV$35$$35$F$35$$35$311))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) VV$35$$35$F$35$$35$311)) (= lq_karg$36$VV$35$$35$1884$35$$35$k_$35$$35$1885 VV$35$$35$F$35$$35$311) (= lq_karg$36$ds_d2X9$35$$35$k_$35$$35$1885 ds_d2X9) (= lq_karg$36$ds_d2XC$35$$35$k_$35$$35$1885 ds_d2XC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L) (= lq_karg$36$x$35$$35$a1XX$35$$35$k_$35$$35$1885 x$35$$35$a1XX)))))) b$36$$35$$35$807 b$36$$35$$35$41 b$36$$35$$35$203 b$36$$35$$35$204 b$36$$35$$35$47 b$36$$35$$35$208 b$36$$35$$35$209 b$36$$35$$35$210 b$36$$35$$35$211 b$36$$35$$35$212 b$36$$35$$35$89 b$36$$35$$35$218 b$36$$35$$35$250 b$36$$35$$35$219 b$36$$35$$35$92 b$36$$35$$35$220 b$36$$35$$35$252 b$36$$35$$35$221 (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733)) (>= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) 0)) (and (= (apply$35$$35$35 (as FibHeap.size Int) lq_rnm$36$lq_tmp$36$x$35$$35$43$35$$35$734) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank lq_rnm$36$lq_tmp$36$x$35$$35$43$35$$35$734))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) lq_rnm$36$lq_tmp$36$x$35$$35$43$35$$35$734)))))
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (+ (apply$35$$35$0 (as len Int) ds_d2X9) 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (apply$35$$35$0 (as len Int) ds_d2X9))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$320 lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (+ (apply$35$$35$0 (as len Int) ds_d2XC) 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) 1))))
(check-sat)
(pop 1)
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Sat
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (<= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) 1)) (> (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)) (> (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) 0) (>= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) 0) (not (= lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733 lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)) (>= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I)) (>= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)) (<= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (+ (apply$35$$35$0 (as len Int) ds_d2X9) 1)) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I$35$$35$k_$35$$35$1885 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v$35$$35$k_$35$$35$1885 Int) (lq_karg$36$VV$35$$35$1884$35$$35$k_$35$$35$1885 (FibHeap.FibTree Int)) (lq_tmp$36$x$35$$35$1887 (FibHeap.FibTree Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x$35$$35$k_$35$$35$1885 Int) (lq_karg$36$ds_d2XC$35$$35$k_$35$$35$1885 Int) (lq_karg$36$ds_d2X9$35$$35$k_$35$$35$1885 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H$35$$35$k_$35$$35$1885 Int) (lq_karg$36$x$35$$35$a1XX$35$$35$k_$35$$35$1885 (FibHeap.FibTree Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K$35$$35$k_$35$$35$1885 (FibHeap.FibTree Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L$35$$35$k_$35$$35$1885 Int)) (and (= lq_karg$36$VV$35$$35$1884$35$$35$k_$35$$35$1885 lq_rnm$36$lq_tmp$36$x$35$$35$43$35$$35$734) (= lq_karg$36$ds_d2X9$35$$35$k_$35$$35$1885 ds_d2X9) (= lq_karg$36$ds_d2XC$35$$35$k_$35$$35$1885 ds_d2XC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L) (= lq_karg$36$x$35$$35$a1XX$35$$35$k_$35$$35$1885 x$35$$35$a1XX) (= lq_tmp$36$x$35$$35$1887 lq_rnm$36$lq_tmp$36$x$35$$35$43$35$$35$734) (exists ((VV$35$$35$F$35$$35$311 (FibHeap.FibTree Int))) (and (= (apply$35$$35$35 (as FibHeap.size Int) VV$35$$35$F$35$$35$311) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank VV$35$$35$F$35$$35$311))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) VV$35$$35$F$35$$35$311)) (= lq_karg$36$VV$35$$35$1884$35$$35$k_$35$$35$1885 VV$35$$35$F$35$$35$311) (= lq_karg$36$ds_d2X9$35$$35$k_$35$$35$1885 ds_d2X9) (= lq_karg$36$ds_d2XC$35$$35$k_$35$$35$1885 ds_d2XC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L) (= lq_karg$36$x$35$$35$a1XX$35$$35$k_$35$$35$1885 x$35$$35$a1XX)))))) b$36$$35$$35$807 b$36$$35$$35$41 b$36$$35$$35$203 b$36$$35$$35$204 b$36$$35$$35$47 b$36$$35$$35$208 b$36$$35$$35$209 b$36$$35$$35$210 b$36$$35$$35$211 b$36$$35$$35$212 b$36$$35$$35$89 b$36$$35$$35$218 b$36$$35$$35$250 b$36$$35$$35$219 b$36$$35$$35$92 b$36$$35$$35$220 b$36$$35$$35$252 b$36$$35$$35$221 (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733)) (>= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) 0)) (and (= (apply$35$$35$35 (as FibHeap.size Int) lq_rnm$36$lq_tmp$36$x$35$$35$43$35$$35$734) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank lq_rnm$36$lq_tmp$36$x$35$$35$43$35$$35$734))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) lq_rnm$36$lq_tmp$36$x$35$$35$43$35$$35$734)))))
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (+ (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) 1))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H))))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$320 lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H))))
(check-sat)
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (+ (apply$35$$35$0 (as len Int) ds_d2X9) 1))))
(check-sat)
(pop 1)
; SMT Says: Sat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (and (>= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)) (>= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I)) (not (= lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733 lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)) (>= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) 0) (> (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) 0) (> (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I$35$$35$k_$35$$35$1885 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v$35$$35$k_$35$$35$1885 Int) (lq_karg$36$VV$35$$35$1884$35$$35$k_$35$$35$1885 (FibHeap.FibTree Int)) (lq_tmp$36$x$35$$35$1887 (FibHeap.FibTree Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x$35$$35$k_$35$$35$1885 Int) (lq_karg$36$ds_d2XC$35$$35$k_$35$$35$1885 Int) (lq_karg$36$ds_d2X9$35$$35$k_$35$$35$1885 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H$35$$35$k_$35$$35$1885 Int) (lq_karg$36$x$35$$35$a1XX$35$$35$k_$35$$35$1885 (FibHeap.FibTree Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K$35$$35$k_$35$$35$1885 (FibHeap.FibTree Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L$35$$35$k_$35$$35$1885 Int)) (and (= lq_karg$36$VV$35$$35$1884$35$$35$k_$35$$35$1885 lq_rnm$36$lq_tmp$36$x$35$$35$43$35$$35$734) (= lq_karg$36$ds_d2X9$35$$35$k_$35$$35$1885 ds_d2X9) (= lq_karg$36$ds_d2XC$35$$35$k_$35$$35$1885 ds_d2XC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L) (= lq_karg$36$x$35$$35$a1XX$35$$35$k_$35$$35$1885 x$35$$35$a1XX) (= lq_tmp$36$x$35$$35$1887 lq_rnm$36$lq_tmp$36$x$35$$35$43$35$$35$734) (exists ((VV$35$$35$F$35$$35$311 (FibHeap.FibTree Int))) (and (= (apply$35$$35$35 (as FibHeap.size Int) VV$35$$35$F$35$$35$311) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank VV$35$$35$F$35$$35$311))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) VV$35$$35$F$35$$35$311)) (= lq_karg$36$VV$35$$35$1884$35$$35$k_$35$$35$1885 VV$35$$35$F$35$$35$311) (= lq_karg$36$ds_d2X9$35$$35$k_$35$$35$1885 ds_d2X9) (= lq_karg$36$ds_d2XC$35$$35$k_$35$$35$1885 ds_d2XC) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805225$35$$35$d31v) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805227$35$$35$d31x) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805240$35$$35$d31K) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L$35$$35$k_$35$$35$1885 lq_anf$36$$35$$35$7205759403792805241$35$$35$d31L) (= lq_karg$36$x$35$$35$a1XX$35$$35$k_$35$$35$1885 x$35$$35$a1XX)))))) b$36$$35$$35$807 b$36$$35$$35$41 b$36$$35$$35$203 b$36$$35$$35$204 b$36$$35$$35$47 b$36$$35$$35$208 b$36$$35$$35$209 b$36$$35$$35$210 b$36$$35$$35$211 b$36$$35$$35$212 b$36$$35$$35$89 b$36$$35$$35$218 b$36$$35$$35$250 b$36$$35$$35$219 b$36$$35$$35$92 b$36$$35$$35$220 b$36$$35$$35$252 b$36$$35$$35$221 (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733)) (>= (apply$35$$35$0 (as len Int) lq_rnm$36$lq_tmp$36$x$35$$35$42$35$$35$733) 0)) (and (= (apply$35$$35$35 (as FibHeap.size Int) lq_rnm$36$lq_tmp$36$x$35$$35$43$35$$35$734) (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank lq_rnm$36$lq_tmp$36$x$35$$35$43$35$$35$734))) (< 0 (apply$35$$35$35 (as FibHeap.size Int) lq_rnm$36$lq_tmp$36$x$35$$35$43$35$$35$734)))))
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I))))
(check-sat)
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$320 lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H))))
(check-sat)
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) 0)))
(check-sat)
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$320) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H))))
(check-sat)
(pop 1)
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
; SMT Says: Unsat
(pop 1)
(push 1)
(push 1)
(assert (and true b$36$$35$$35$194 b$36$$35$$35$195 b$36$$35$$35$196 b$36$$35$$35$197 b$36$$35$$35$198 b$36$$35$$35$200 b$36$$35$$35$808 b$36$$35$$35$41 b$36$$35$$35$169 b$36$$35$$35$170 b$36$$35$$35$171 b$36$$35$$35$172 b$36$$35$$35$173 b$36$$35$$35$47 b$36$$35$$35$175 b$36$$35$$35$177 b$36$$35$$35$178 b$36$$35$$35$179 b$36$$35$$35$180 b$36$$35$$35$182 b$36$$35$$35$184 b$36$$35$$35$89 b$36$$35$$35$185 b$36$$35$$35$186 b$36$$35$$35$92))
(push 1)
(assert (not (= (FibHeap.rank VV$35$$35$F$35$$35$384) (+ 1 (FibHeap.rank t1$35$$35$a1XH)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$512 b$36$$35$$35$513 b$36$$35$$35$514 b$36$$35$$35$41 b$36$$35$$35$809 b$36$$35$$35$47 b$36$$35$$35$89 b$36$$35$$35$92 b$36$$35$$35$510 b$36$$35$$35$511))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$33 (apply$35$$35$0 (as len Int) ds_d2TZ))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$41 b$36$$35$$35$810 b$36$$35$$35$47 b$36$$35$$35$501 b$36$$35$$35$502 b$36$$35$$35$503 b$36$$35$$35$89 b$36$$35$$35$505 b$36$$35$$35$507 b$36$$35$$35$92))
(push 1)
(assert (not (= VV$35$$35$F$35$$35$34 (apply$35$$35$0 FibHeap.pow2 (FibHeap.rank ds_d2TJ)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$41 b$36$$35$$35$811 b$36$$35$$35$47 b$36$$35$$35$501 b$36$$35$$35$502 b$36$$35$$35$503 b$36$$35$$35$89 b$36$$35$$35$505 b$36$$35$$35$507 b$36$$35$$35$92))
(push 1)
(assert (not (< 0 VV$35$$35$F$35$$35$35)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F$35$$35$k_$35$$35$3637 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805286$35$$35$d32u$35$$35$k_$35$$35$3637 (FibHeap.FibTree Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d$35$$35$k_$35$$35$3637 (FibHeap.FibHeap Int)) (lq_karg$36$ds_d2Zx$35$$35$k_$35$$35$3637 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805296$35$$35$d32E$35$$35$k_$35$$35$3637 (FibHeap.FibTree Int)) (lq_karg$36$x$35$$35$a1Ym$35$$35$k_$35$$35$3637 (FibHeap.FibTree Int)) (lq_karg$36$ds_d2Zr$35$$35$k_$35$$35$3637 Int) (lq_karg$36$VV$35$$35$3636$35$$35$k_$35$$35$3637 Int) (lq_karg$36$ds_d2Zs$35$$35$k_$35$$35$3637 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s$35$$35$k_$35$$35$3637 Int) (lq_karg$36$subtr$35$$35$a1Yl$35$$35$k_$35$$35$3637 Int) (lq_karg$36$ds_d2Zq$35$$35$k_$35$$35$3637 (FibHeap.FibTree Int)) (lq_karg$36$ds_d2Y7$35$$35$k_$35$$35$3637 (FibHeap.FibHeap Int)) (lq_karg$36$ds_d2Zv$35$$35$k_$35$$35$3637 Int) (lq_karg$36$x$35$$35$a1Yb$35$$35$k_$35$$35$3637 Int) (lq_karg$36$ds_d2Zw$35$$35$k_$35$$35$3637 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f$35$$35$k_$35$$35$3637 (FibHeap.FibTree Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805290$35$$35$d32y$35$$35$k_$35$$35$3637 Int) (lq_karg$36$ds_d2Zt$35$$35$k_$35$$35$3637 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v$35$$35$k_$35$$35$3637 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t$35$$35$k_$35$$35$3637 Int) (lq_karg$36$xs$35$$35$a1Yn$35$$35$k_$35$$35$3637 Int) (lq_karg$36$ds_d2Zu$35$$35$k_$35$$35$3637 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g$35$$35$k_$35$$35$3637 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805291$35$$35$d32z$35$$35$k_$35$$35$3637 Int)) (and (= lq_karg$36$VV$35$$35$3636$35$$35$k_$35$$35$3637 VV$35$$35$F$35$$35$163) (= lq_karg$36$ds_d2Y7$35$$35$k_$35$$35$3637 ds_d2Y7) (= lq_karg$36$ds_d2Zq$35$$35$k_$35$$35$3637 ds_d2Zq) (= lq_karg$36$ds_d2Zr$35$$35$k_$35$$35$3637 ds_d2Zr) (= lq_karg$36$ds_d2Zs$35$$35$k_$35$$35$3637 ds_d2Zs) (= lq_karg$36$ds_d2Zt$35$$35$k_$35$$35$3637 ds_d2Zt) (= lq_karg$36$ds_d2Zu$35$$35$k_$35$$35$3637 ds_d2Zu) (= lq_karg$36$ds_d2Zv$35$$35$k_$35$$35$3637 ds_d2Zv) (= lq_karg$36$ds_d2Zw$35$$35$k_$35$$35$3637 ds_d2Zw) (= lq_karg$36$ds_d2Zx$35$$35$k_$35$$35$3637 ds_d2Zx) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d$35$$35$k_$35$$35$3637 lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f$35$$35$k_$35$$35$3637 lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g$35$$35$k_$35$$35$3637 lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s$35$$35$k_$35$$35$3637 lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t$35$$35$k_$35$$35$3637 lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805286$35$$35$d32u$35$$35$k_$35$$35$3637 lq_anf$36$$35$$35$7205759403792805286$35$$35$d32u) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v$35$$35$k_$35$$35$3637 lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805290$35$$35$d32y$35$$35$k_$35$$35$3637 lq_anf$36$$35$$35$7205759403792805290$35$$35$d32y) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805291$35$$35$d32z$35$$35$k_$35$$35$3637 lq_anf$36$$35$$35$7205759403792805291$35$$35$d32z) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805296$35$$35$d32E$35$$35$k_$35$$35$3637 lq_anf$36$$35$$35$7205759403792805296$35$$35$d32E) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F$35$$35$k_$35$$35$3637 lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F) (= lq_karg$36$subtr$35$$35$a1Yl$35$$35$k_$35$$35$3637 subtr$35$$35$a1Yl) (= lq_karg$36$x$35$$35$a1Yb$35$$35$k_$35$$35$3637 x$35$$35$a1Yb) (= lq_karg$36$x$35$$35$a1Ym$35$$35$k_$35$$35$3637 x$35$$35$a1Ym) (= lq_karg$36$xs$35$$35$a1Yn$35$$35$k_$35$$35$3637 xs$35$$35$a1Yn) (exists ((VV$35$$35$F$35$$35$158 Int)) (and (= VV$35$$35$F$35$$35$158 lq_anf$36$$35$$35$7205759403792805291$35$$35$d32z) (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$158) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$158) (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$158)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$158) 0) (= lq_karg$36$VV$35$$35$3636$35$$35$k_$35$$35$3637 VV$35$$35$F$35$$35$158) (= lq_karg$36$ds_d2Y7$35$$35$k_$35$$35$3637 ds_d2Y7) (= lq_karg$36$ds_d2Zq$35$$35$k_$35$$35$3637 ds_d2Zq) (= lq_karg$36$ds_d2Zr$35$$35$k_$35$$35$3637 ds_d2Zr) (= lq_karg$36$ds_d2Zs$35$$35$k_$35$$35$3637 ds_d2Zs) (= lq_karg$36$ds_d2Zt$35$$35$k_$35$$35$3637 ds_d2Zt) (= lq_karg$36$ds_d2Zu$35$$35$k_$35$$35$3637 ds_d2Zu) (= lq_karg$36$ds_d2Zv$35$$35$k_$35$$35$3637 ds_d2Zv) (= lq_karg$36$ds_d2Zw$35$$35$k_$35$$35$3637 ds_d2Zw) (= lq_karg$36$ds_d2Zx$35$$35$k_$35$$35$3637 ds_d2Zx) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d$35$$35$k_$35$$35$3637 lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f$35$$35$k_$35$$35$3637 lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g$35$$35$k_$35$$35$3637 lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s$35$$35$k_$35$$35$3637 lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t$35$$35$k_$35$$35$3637 lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805286$35$$35$d32u$35$$35$k_$35$$35$3637 lq_anf$36$$35$$35$7205759403792805286$35$$35$d32u) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v$35$$35$k_$35$$35$3637 lq_anf$36$$35$$35$7205759403792805287$35$$35$d32v) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805290$35$$35$d32y$35$$35$k_$35$$35$3637 lq_anf$36$$35$$35$7205759403792805290$35$$35$d32y) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805291$35$$35$d32z$35$$35$k_$35$$35$3637 lq_anf$36$$35$$35$7205759403792805291$35$$35$d32z) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805296$35$$35$d32E$35$$35$k_$35$$35$3637 lq_anf$36$$35$$35$7205759403792805296$35$$35$d32E) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F$35$$35$k_$35$$35$3637 lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F) (= lq_karg$36$subtr$35$$35$a1Yl$35$$35$k_$35$$35$3637 subtr$35$$35$a1Yl) (= lq_karg$36$x$35$$35$a1Yb$35$$35$k_$35$$35$3637 x$35$$35$a1Yb) (= lq_karg$36$x$35$$35$a1Ym$35$$35$k_$35$$35$3637 x$35$$35$a1Ym) (= lq_karg$36$xs$35$$35$a1Yn$35$$35$k_$35$$35$3637 xs$35$$35$a1Yn))))) b$36$$35$$35$352 b$36$$35$$35$384 b$36$$35$$35$386 b$36$$35$$35$387 b$36$$35$$35$356 b$36$$35$$35$357 b$36$$35$$35$358 b$36$$35$$35$359 b$36$$35$$35$391 b$36$$35$$35$360 b$36$$35$$35$392 b$36$$35$$35$41 b$36$$35$$35$361 b$36$$35$$35$393 b$36$$35$$35$362 b$36$$35$$35$394 b$36$$35$$35$364 b$36$$35$$35$396 (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$163) (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$163)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$163) 0)) b$36$$35$$35$397 b$36$$35$$35$366 b$36$$35$$35$47 b$36$$35$$35$367 b$36$$35$$35$368 b$36$$35$$35$369 b$36$$35$$35$370 b$36$$35$$35$373 b$36$$35$$35$374 b$36$$35$$35$375 b$36$$35$$35$376 b$36$$35$$35$89 b$36$$35$$35$377 b$36$$35$$35$378 b$36$$35$$35$379 b$36$$35$$35$92 b$36$$35$$35$380 b$36$$35$$35$381 b$36$$35$$35$382 b$36$$35$$35$351))
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$163) 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$194 b$36$$35$$35$195 b$36$$35$$35$196 b$36$$35$$35$197 b$36$$35$$35$198 b$36$$35$$35$200 b$36$$35$$35$41 b$36$$35$$35$169 b$36$$35$$35$170 b$36$$35$$35$171 b$36$$35$$35$172 b$36$$35$$35$173 b$36$$35$$35$813 b$36$$35$$35$47 b$36$$35$$35$175 b$36$$35$$35$177 b$36$$35$$35$178 b$36$$35$$35$179 b$36$$35$$35$180 b$36$$35$$35$182 b$36$$35$$35$184 b$36$$35$$35$89 b$36$$35$$35$185 b$36$$35$$35$186 b$36$$35$$35$92))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$387 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$41 b$36$$35$$35$814 b$36$$35$$35$47 b$36$$35$$35$501 b$36$$35$$35$502 b$36$$35$$35$503 b$36$$35$$35$89 b$36$$35$$35$505 b$36$$35$$35$507 b$36$$35$$35$92))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$36 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$160 b$36$$35$$35$161 b$36$$35$$35$163 b$36$$35$$35$41 b$36$$35$$35$47 b$36$$35$$35$815 b$36$$35$$35$89 b$36$$35$$35$92))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$420 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$485 b$36$$35$$35$486 b$36$$35$$35$487 b$36$$35$$35$41 b$36$$35$$35$489 b$36$$35$$35$490 b$36$$35$$35$47 b$36$$35$$35$816 b$36$$35$$35$498 b$36$$35$$35$499 b$36$$35$$35$89 b$36$$35$$35$92))
(push 1)
(assert (not (< 0 VV$35$$35$F$35$$35$37)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$323 b$36$$35$$35$324 b$36$$35$$35$325 b$36$$35$$35$326 b$36$$35$$35$41 b$36$$35$$35$47 b$36$$35$$35$817 b$36$$35$$35$308 b$36$$35$$35$309 b$36$$35$$35$89 b$36$$35$$35$313 b$36$$35$$35$314 b$36$$35$$35$315 b$36$$35$$35$92 b$36$$35$$35$316 b$36$$35$$35$317))
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$229) 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$41 b$36$$35$$35$47 b$36$$35$$35$818 b$36$$35$$35$89 b$36$$35$$35$92))
(push 1)
(assert (not (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$421))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$485 b$36$$35$$35$486 b$36$$35$$35$487 b$36$$35$$35$41 b$36$$35$$35$489 b$36$$35$$35$490 b$36$$35$$35$491 b$36$$35$$35$492 b$36$$35$$35$493 b$36$$35$$35$494 b$36$$35$$35$47 b$36$$35$$35$495 b$36$$35$$35$496 b$36$$35$$35$497 b$36$$35$$35$819 b$36$$35$$35$89 b$36$$35$$35$92))
(push 1)
(assert (not (< 0 VV$35$$35$F$35$$35$38)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$352 b$36$$35$$35$356 b$36$$35$$35$357 b$36$$35$$35$358 b$36$$35$$35$359 b$36$$35$$35$360 b$36$$35$$35$41 b$36$$35$$35$361 b$36$$35$$35$362 b$36$$35$$35$364 b$36$$35$$35$428 b$36$$35$$35$429 b$36$$35$$35$366 b$36$$35$$35$430 b$36$$35$$35$47 b$36$$35$$35$367 b$36$$35$$35$431 b$36$$35$$35$432 b$36$$35$$35$464 b$36$$35$$35$465 b$36$$35$$35$466 b$36$$35$$35$467 b$36$$35$$35$820 b$36$$35$$35$469 b$36$$35$$35$470 b$36$$35$$35$89 b$36$$35$$35$92 b$36$$35$$35$351))
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$70) 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$41 b$36$$35$$35$47 b$36$$35$$35$149 b$36$$35$$35$821 b$36$$35$$35$150 b$36$$35$$35$89 b$36$$35$$35$153 b$36$$35$$35$154 b$36$$35$$35$155 b$36$$35$$35$92 b$36$$35$$35$156))
(push 1)
(assert (not (or (and VV$35$$35$F$35$$35$422 (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) ds_d30a))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) ds_d30a) (not VV$35$$35$F$35$$35$422)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$485 b$36$$35$$35$486 b$36$$35$$35$487 b$36$$35$$35$41 b$36$$35$$35$489 b$36$$35$$35$490 b$36$$35$$35$491 b$36$$35$$35$492 b$36$$35$$35$493 b$36$$35$$35$494 b$36$$35$$35$47 b$36$$35$$35$495 b$36$$35$$35$496 b$36$$35$$35$822 b$36$$35$$35$89 b$36$$35$$35$92))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$39 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$288 b$36$$35$$35$290 b$36$$35$$35$41 b$36$$35$$35$47 b$36$$35$$35$823 b$36$$35$$35$89 b$36$$35$$35$92))
(push 1)
(assert (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$263)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$41 b$36$$35$$35$47 b$36$$35$$35$149 b$36$$35$$35$150 b$36$$35$$35$151 b$36$$35$$35$152 b$36$$35$$35$824 b$36$$35$$35$89 b$36$$35$$35$92))
(push 1)
(assert (not (or (and VV$35$$35$F$35$$35$423 (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) ds_d30a))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) ds_d30a) (not VV$35$$35$F$35$$35$423)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$485 b$36$$35$$35$486 b$36$$35$$35$487 b$36$$35$$35$41 b$36$$35$$35$489 b$36$$35$$35$490 b$36$$35$$35$491 b$36$$35$$35$492 b$36$$35$$35$493 b$36$$35$$35$494 b$36$$35$$35$47 b$36$$35$$35$495 b$36$$35$$35$496 b$36$$35$$35$89 b$36$$35$$35$825 b$36$$35$$35$92))
(push 1)
(assert (not (< VV$35$$35$F$35$$35$40 ds_d2Tz)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$288 b$36$$35$$35$290 b$36$$35$$35$41 b$36$$35$$35$47 b$36$$35$$35$89 b$36$$35$$35$826 b$36$$35$$35$92))
(push 1)
(assert (not (or (and (= (FibHeap.root (FibHeap.minTree VV$35$$35$F$35$$35$264)) (FibHeap.root (FibHeap.minTree h$35$$35$a1XV))) (<= (FibHeap.root (FibHeap.minTree h$35$$35$a1XV)) x$35$$35$a1XW)) (and (or (<= x$35$$35$a1XW (FibHeap.root (FibHeap.minTree h$35$$35$a1XV))) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) h$35$$35$a1XV))) (= (FibHeap.root (FibHeap.minTree VV$35$$35$F$35$$35$264)) x$35$$35$a1XW)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$288 b$36$$35$$35$290 b$36$$35$$35$41 b$36$$35$$35$47 b$36$$35$$35$89 b$36$$35$$35$827 b$36$$35$$35$92))
(push 1)
(assert (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$265)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$352 b$36$$35$$35$448 b$36$$35$$35$449 b$36$$35$$35$451 b$36$$35$$35$356 b$36$$35$$35$357 b$36$$35$$35$358 b$36$$35$$35$359 b$36$$35$$35$360 b$36$$35$$35$41 b$36$$35$$35$361 b$36$$35$$35$362 b$36$$35$$35$364 b$36$$35$$35$428 b$36$$35$$35$429 b$36$$35$$35$366 b$36$$35$$35$430 b$36$$35$$35$47 b$36$$35$$35$367 b$36$$35$$35$431 b$36$$35$$35$432 b$36$$35$$35$433 b$36$$35$$35$434 b$36$$35$$35$435 b$36$$35$$35$436 b$36$$35$$35$437 b$36$$35$$35$439 b$36$$35$$35$89 b$36$$35$$35$441 b$36$$35$$35$442 b$36$$35$$35$92 b$36$$35$$35$828 b$36$$35$$35$446 b$36$$35$$35$351 b$36$$35$$35$447))
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$106) 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$224 b$36$$35$$35$225 b$36$$35$$35$226 b$36$$35$$35$227 b$36$$35$$35$228 b$36$$35$$35$230 b$36$$35$$35$41 b$36$$35$$35$203 b$36$$35$$35$204 b$36$$35$$35$47 b$36$$35$$35$208 b$36$$35$$35$209 b$36$$35$$35$210 b$36$$35$$35$211 b$36$$35$$35$212 b$36$$35$$35$89 b$36$$35$$35$218 b$36$$35$$35$219 b$36$$35$$35$92 b$36$$35$$35$220 b$36$$35$$35$221 b$36$$35$$35$829))
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$362) 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$224 b$36$$35$$35$225 b$36$$35$$35$226 b$36$$35$$35$227 b$36$$35$$35$228 b$36$$35$$35$230 b$36$$35$$35$41 b$36$$35$$35$203 b$36$$35$$35$204 b$36$$35$$35$47 b$36$$35$$35$208 b$36$$35$$35$209 b$36$$35$$35$210 b$36$$35$$35$211 b$36$$35$$35$212 b$36$$35$$35$89 b$36$$35$$35$218 b$36$$35$$35$219 b$36$$35$$35$92 b$36$$35$$35$220 b$36$$35$$35$221 b$36$$35$$35$830))
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$363) (+ (apply$35$$35$0 (as len Int) ds_d2XJ) 1))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$193 b$36$$35$$35$41 b$36$$35$$35$169 b$36$$35$$35$170 b$36$$35$$35$171 b$36$$35$$35$172 b$36$$35$$35$173 b$36$$35$$35$47 b$36$$35$$35$175 b$36$$35$$35$177 b$36$$35$$35$178 b$36$$35$$35$179 b$36$$35$$35$180 b$36$$35$$35$182 b$36$$35$$35$184 b$36$$35$$35$89 b$36$$35$$35$185 b$36$$35$$35$186 b$36$$35$$35$187 b$36$$35$$35$92 b$36$$35$$35$188 b$36$$35$$35$189 b$36$$35$$35$190 b$36$$35$$35$191 b$36$$35$$35$831))
(push 1)
(assert (not (or (and (= (FibHeap.root VV$35$$35$F$35$$35$396) (FibHeap.root t1$35$$35$a1XH)) (<= (FibHeap.root t1$35$$35$a1XH) (FibHeap.root t2$35$$35$a1XL))) (and (= (FibHeap.root VV$35$$35$F$35$$35$396) (FibHeap.root t2$35$$35$a1XL)) (<= (FibHeap.root t2$35$$35$a1XL) (FibHeap.root t1$35$$35$a1XH))))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (exists ((lq_karg$36$h$35$$35$a1XO$35$$35$k_$35$$35$2045 (FibHeap.FibHeap Int)) (lq_karg$36$ds_d2Vf$35$$35$k_$35$$35$2045 (FibHeap.FibHeap Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M$35$$35$k_$35$$35$2045 (FibHeap.FibHeap Int)) (lq_karg$36$VV$35$$35$2044$35$$35$k_$35$$35$2045 Int) (lq_karg$36$ts1$35$$35$a1XR$35$$35$k_$35$$35$2045 Int) (lq_tmp$36$x$35$$35$2046 Int) (lq_karg$36$minTr2$35$$35$a1XT$35$$35$k_$35$$35$2045 (FibHeap.FibTree Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N$35$$35$k_$35$$35$2045 (FibHeap.FibHeap Int)) (lq_karg$36$minTr1$35$$35$a1XQ$35$$35$k_$35$$35$2045 (FibHeap.FibTree Int)) (lq_karg$36$ts2$35$$35$a1XU$35$$35$k_$35$$35$2045 Int)) (and (= lq_karg$36$VV$35$$35$2044$35$$35$k_$35$$35$2045 lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P) (= lq_karg$36$ds_d2Vf$35$$35$k_$35$$35$2045 ds_d2Vf) (= lq_karg$36$h$35$$35$a1XO$35$$35$k_$35$$35$2045 h$35$$35$a1XO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M$35$$35$k_$35$$35$2045 lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N$35$$35$k_$35$$35$2045 lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (= lq_karg$36$minTr1$35$$35$a1XQ$35$$35$k_$35$$35$2045 minTr1$35$$35$a1XQ) (= lq_karg$36$minTr2$35$$35$a1XT$35$$35$k_$35$$35$2045 minTr2$35$$35$a1XT) (= lq_karg$36$ts1$35$$35$a1XR$35$$35$k_$35$$35$2045 ts1$35$$35$a1XR) (= lq_karg$36$ts2$35$$35$a1XU$35$$35$k_$35$$35$2045 ts2$35$$35$a1XU) (= lq_tmp$36$x$35$$35$2046 lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P) (exists ((VV$35$$35$F$35$$35$304 Int)) (and (= lq_karg$36$VV$35$$35$2044$35$$35$k_$35$$35$2045 VV$35$$35$F$35$$35$304) (= lq_karg$36$ds_d2Vf$35$$35$k_$35$$35$2045 ds_d2Vf) (= lq_karg$36$h$35$$35$a1XO$35$$35$k_$35$$35$2045 h$35$$35$a1XO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M$35$$35$k_$35$$35$2045 lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N$35$$35$k_$35$$35$2045 lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (= lq_karg$36$minTr1$35$$35$a1XQ$35$$35$k_$35$$35$2045 minTr1$35$$35$a1XQ) (= lq_karg$36$minTr2$35$$35$a1XT$35$$35$k_$35$$35$2045 minTr2$35$$35$a1XT) (= lq_karg$36$ts1$35$$35$a1XR$35$$35$k_$35$$35$2045 ts1$35$$35$a1XR) (= lq_karg$36$ts2$35$$35$a1XU$35$$35$k_$35$$35$2045 ts2$35$$35$a1XU))))) (exists ((lq_karg$36$ts2$35$$35$a1XU$35$$35$k_$35$$35$2056 Int) (lq_tmp$36$x$35$$35$2057 Int) (lq_karg$36$ds_d2Vf$35$$35$k_$35$$35$2056 (FibHeap.FibHeap Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M$35$$35$k_$35$$35$2056 (FibHeap.FibHeap Int)) (lq_karg$36$ts1$35$$35$a1XR$35$$35$k_$35$$35$2056 Int) (lq_karg$36$VV$35$$35$2055$35$$35$k_$35$$35$2056 Int) (lq_karg$36$h$35$$35$a1XO$35$$35$k_$35$$35$2056 (FibHeap.FibHeap Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P$35$$35$k_$35$$35$2056 Int) (lq_karg$36$minTr1$35$$35$a1XQ$35$$35$k_$35$$35$2056 (FibHeap.FibTree Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N$35$$35$k_$35$$35$2056 (FibHeap.FibHeap Int)) (lq_karg$36$minTr2$35$$35$a1XT$35$$35$k_$35$$35$2056 (FibHeap.FibTree Int))) (and (= lq_karg$36$VV$35$$35$2055$35$$35$k_$35$$35$2056 lq_anf$36$$35$$35$7205759403792805246$35$$35$d31Q) (= lq_karg$36$ds_d2Vf$35$$35$k_$35$$35$2056 ds_d2Vf) (= lq_karg$36$h$35$$35$a1XO$35$$35$k_$35$$35$2056 h$35$$35$a1XO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M$35$$35$k_$35$$35$2056 lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N$35$$35$k_$35$$35$2056 lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P$35$$35$k_$35$$35$2056 lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P) (= lq_karg$36$minTr1$35$$35$a1XQ$35$$35$k_$35$$35$2056 minTr1$35$$35$a1XQ) (= lq_karg$36$minTr2$35$$35$a1XT$35$$35$k_$35$$35$2056 minTr2$35$$35$a1XT) (= lq_karg$36$ts1$35$$35$a1XR$35$$35$k_$35$$35$2056 ts1$35$$35$a1XR) (= lq_karg$36$ts2$35$$35$a1XU$35$$35$k_$35$$35$2056 ts2$35$$35$a1XU) (= lq_tmp$36$x$35$$35$2057 lq_anf$36$$35$$35$7205759403792805246$35$$35$d31Q) (exists ((VV$35$$35$F$35$$35$303 Int)) (and (= lq_karg$36$VV$35$$35$2055$35$$35$k_$35$$35$2056 VV$35$$35$F$35$$35$303) (= lq_karg$36$ds_d2Vf$35$$35$k_$35$$35$2056 ds_d2Vf) (= lq_karg$36$h$35$$35$a1XO$35$$35$k_$35$$35$2056 h$35$$35$a1XO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M$35$$35$k_$35$$35$2056 lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N$35$$35$k_$35$$35$2056 lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P$35$$35$k_$35$$35$2056 lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P) (= lq_karg$36$minTr1$35$$35$a1XQ$35$$35$k_$35$$35$2056 minTr1$35$$35$a1XQ) (= lq_karg$36$minTr2$35$$35$a1XT$35$$35$k_$35$$35$2056 minTr2$35$$35$a1XT) (= lq_karg$36$ts1$35$$35$a1XR$35$$35$k_$35$$35$2056 ts1$35$$35$a1XR) (= lq_karg$36$ts2$35$$35$a1XU$35$$35$k_$35$$35$2056 ts2$35$$35$a1XU)))))) b$36$$35$$35$256 b$36$$35$$35$832 b$36$$35$$35$257 b$36$$35$$35$260 b$36$$35$$35$261 b$36$$35$$35$262 b$36$$35$$35$263 b$36$$35$$35$264 b$36$$35$$35$41 b$36$$35$$35$268 b$36$$35$$35$269 b$36$$35$$35$270 b$36$$35$$35$47 b$36$$35$$35$271 (= lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P (FibHeap.root minTr1$35$$35$a1XQ)) (= lq_anf$36$$35$$35$7205759403792805246$35$$35$d31Q (FibHeap.root minTr2$35$$35$a1XT)) b$36$$35$$35$274 b$36$$35$$35$275 b$36$$35$$35$89 b$36$$35$$35$281 b$36$$35$$35$282 b$36$$35$$35$283 b$36$$35$$35$92 b$36$$35$$35$285 b$36$$35$$35$255))
(push 1)
(assert (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$269)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$224 b$36$$35$$35$225 b$36$$35$$35$833 b$36$$35$$35$226 b$36$$35$$35$232 b$36$$35$$35$41 b$36$$35$$35$233 b$36$$35$$35$234 b$36$$35$$35$203 b$36$$35$$35$235 b$36$$35$$35$204 b$36$$35$$35$236 b$36$$35$$35$237 b$36$$35$$35$238 b$36$$35$$35$47 b$36$$35$$35$239 b$36$$35$$35$208 b$36$$35$$35$209 b$36$$35$$35$210 b$36$$35$$35$211 b$36$$35$$35$212 b$36$$35$$35$245 b$36$$35$$35$246 b$36$$35$$35$247 b$36$$35$$35$89 b$36$$35$$35$218 b$36$$35$$35$219 b$36$$35$$35$92 b$36$$35$$35$220 b$36$$35$$35$221))
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$333) 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$193 b$36$$35$$35$834 b$36$$35$$35$41 b$36$$35$$35$169 b$36$$35$$35$170 b$36$$35$$35$171 b$36$$35$$35$172 b$36$$35$$35$173 b$36$$35$$35$47 b$36$$35$$35$175 b$36$$35$$35$177 b$36$$35$$35$178 b$36$$35$$35$179 b$36$$35$$35$180 b$36$$35$$35$182 b$36$$35$$35$184 b$36$$35$$35$89 b$36$$35$$35$185 b$36$$35$$35$186 b$36$$35$$35$187 b$36$$35$$35$92 b$36$$35$$35$188 b$36$$35$$35$189 b$36$$35$$35$190 b$36$$35$$35$191))
(push 1)
(assert (not (= (FibHeap.rank VV$35$$35$F$35$$35$397) (+ 1 (FibHeap.rank t1$35$$35$a1XH)))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$352 b$36$$35$$35$835 b$36$$35$$35$356 b$36$$35$$35$357 b$36$$35$$35$358 b$36$$35$$35$359 b$36$$35$$35$360 b$36$$35$$35$41 b$36$$35$$35$361 b$36$$35$$35$362 b$36$$35$$35$364 b$36$$35$$35$366 b$36$$35$$35$47 b$36$$35$$35$367 b$36$$35$$35$368 b$36$$35$$35$369 b$36$$35$$35$370 b$36$$35$$35$373 b$36$$35$$35$374 b$36$$35$$35$375 b$36$$35$$35$376 b$36$$35$$35$89 b$36$$35$$35$377 b$36$$35$$35$409 b$36$$35$$35$410 b$36$$35$$35$411 b$36$$35$$35$92 b$36$$35$$35$412 b$36$$35$$35$414 b$36$$35$$35$351 b$36$$35$$35$415))
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$142) 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (exists ((lq_karg$36$h$35$$35$a1XO$35$$35$k_$35$$35$2045 (FibHeap.FibHeap Int)) (lq_karg$36$ds_d2Vf$35$$35$k_$35$$35$2045 (FibHeap.FibHeap Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M$35$$35$k_$35$$35$2045 (FibHeap.FibHeap Int)) (lq_karg$36$VV$35$$35$2044$35$$35$k_$35$$35$2045 Int) (lq_karg$36$ts1$35$$35$a1XR$35$$35$k_$35$$35$2045 Int) (lq_tmp$36$x$35$$35$2046 Int) (lq_karg$36$minTr2$35$$35$a1XT$35$$35$k_$35$$35$2045 (FibHeap.FibTree Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N$35$$35$k_$35$$35$2045 (FibHeap.FibHeap Int)) (lq_karg$36$minTr1$35$$35$a1XQ$35$$35$k_$35$$35$2045 (FibHeap.FibTree Int)) (lq_karg$36$ts2$35$$35$a1XU$35$$35$k_$35$$35$2045 Int)) (and (= lq_karg$36$VV$35$$35$2044$35$$35$k_$35$$35$2045 lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P) (= lq_karg$36$ds_d2Vf$35$$35$k_$35$$35$2045 ds_d2Vf) (= lq_karg$36$h$35$$35$a1XO$35$$35$k_$35$$35$2045 h$35$$35$a1XO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M$35$$35$k_$35$$35$2045 lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N$35$$35$k_$35$$35$2045 lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (= lq_karg$36$minTr1$35$$35$a1XQ$35$$35$k_$35$$35$2045 minTr1$35$$35$a1XQ) (= lq_karg$36$minTr2$35$$35$a1XT$35$$35$k_$35$$35$2045 minTr2$35$$35$a1XT) (= lq_karg$36$ts1$35$$35$a1XR$35$$35$k_$35$$35$2045 ts1$35$$35$a1XR) (= lq_karg$36$ts2$35$$35$a1XU$35$$35$k_$35$$35$2045 ts2$35$$35$a1XU) (= lq_tmp$36$x$35$$35$2046 lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P) (exists ((VV$35$$35$F$35$$35$304 Int)) (and (= lq_karg$36$VV$35$$35$2044$35$$35$k_$35$$35$2045 VV$35$$35$F$35$$35$304) (= lq_karg$36$ds_d2Vf$35$$35$k_$35$$35$2045 ds_d2Vf) (= lq_karg$36$h$35$$35$a1XO$35$$35$k_$35$$35$2045 h$35$$35$a1XO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M$35$$35$k_$35$$35$2045 lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N$35$$35$k_$35$$35$2045 lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (= lq_karg$36$minTr1$35$$35$a1XQ$35$$35$k_$35$$35$2045 minTr1$35$$35$a1XQ) (= lq_karg$36$minTr2$35$$35$a1XT$35$$35$k_$35$$35$2045 minTr2$35$$35$a1XT) (= lq_karg$36$ts1$35$$35$a1XR$35$$35$k_$35$$35$2045 ts1$35$$35$a1XR) (= lq_karg$36$ts2$35$$35$a1XU$35$$35$k_$35$$35$2045 ts2$35$$35$a1XU))))) (exists ((lq_karg$36$ts2$35$$35$a1XU$35$$35$k_$35$$35$2056 Int) (lq_tmp$36$x$35$$35$2057 Int) (lq_karg$36$ds_d2Vf$35$$35$k_$35$$35$2056 (FibHeap.FibHeap Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M$35$$35$k_$35$$35$2056 (FibHeap.FibHeap Int)) (lq_karg$36$ts1$35$$35$a1XR$35$$35$k_$35$$35$2056 Int) (lq_karg$36$VV$35$$35$2055$35$$35$k_$35$$35$2056 Int) (lq_karg$36$h$35$$35$a1XO$35$$35$k_$35$$35$2056 (FibHeap.FibHeap Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P$35$$35$k_$35$$35$2056 Int) (lq_karg$36$minTr1$35$$35$a1XQ$35$$35$k_$35$$35$2056 (FibHeap.FibTree Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N$35$$35$k_$35$$35$2056 (FibHeap.FibHeap Int)) (lq_karg$36$minTr2$35$$35$a1XT$35$$35$k_$35$$35$2056 (FibHeap.FibTree Int))) (and (= lq_karg$36$VV$35$$35$2055$35$$35$k_$35$$35$2056 lq_anf$36$$35$$35$7205759403792805246$35$$35$d31Q) (= lq_karg$36$ds_d2Vf$35$$35$k_$35$$35$2056 ds_d2Vf) (= lq_karg$36$h$35$$35$a1XO$35$$35$k_$35$$35$2056 h$35$$35$a1XO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M$35$$35$k_$35$$35$2056 lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N$35$$35$k_$35$$35$2056 lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P$35$$35$k_$35$$35$2056 lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P) (= lq_karg$36$minTr1$35$$35$a1XQ$35$$35$k_$35$$35$2056 minTr1$35$$35$a1XQ) (= lq_karg$36$minTr2$35$$35$a1XT$35$$35$k_$35$$35$2056 minTr2$35$$35$a1XT) (= lq_karg$36$ts1$35$$35$a1XR$35$$35$k_$35$$35$2056 ts1$35$$35$a1XR) (= lq_karg$36$ts2$35$$35$a1XU$35$$35$k_$35$$35$2056 ts2$35$$35$a1XU) (= lq_tmp$36$x$35$$35$2057 lq_anf$36$$35$$35$7205759403792805246$35$$35$d31Q) (exists ((VV$35$$35$F$35$$35$303 Int)) (and (= lq_karg$36$VV$35$$35$2055$35$$35$k_$35$$35$2056 VV$35$$35$F$35$$35$303) (= lq_karg$36$ds_d2Vf$35$$35$k_$35$$35$2056 ds_d2Vf) (= lq_karg$36$h$35$$35$a1XO$35$$35$k_$35$$35$2056 h$35$$35$a1XO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M$35$$35$k_$35$$35$2056 lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N$35$$35$k_$35$$35$2056 lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P$35$$35$k_$35$$35$2056 lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P) (= lq_karg$36$minTr1$35$$35$a1XQ$35$$35$k_$35$$35$2056 minTr1$35$$35$a1XQ) (= lq_karg$36$minTr2$35$$35$a1XT$35$$35$k_$35$$35$2056 minTr2$35$$35$a1XT) (= lq_karg$36$ts1$35$$35$a1XR$35$$35$k_$35$$35$2056 ts1$35$$35$a1XR) (= lq_karg$36$ts2$35$$35$a1XU$35$$35$k_$35$$35$2056 ts2$35$$35$a1XU)))))) b$36$$35$$35$256 b$36$$35$$35$257 b$36$$35$$35$260 b$36$$35$$35$836 b$36$$35$$35$261 b$36$$35$$35$262 b$36$$35$$35$263 b$36$$35$$35$264 b$36$$35$$35$41 b$36$$35$$35$268 b$36$$35$$35$269 b$36$$35$$35$270 b$36$$35$$35$47 b$36$$35$$35$271 (= lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P (FibHeap.root minTr1$35$$35$a1XQ)) (= lq_anf$36$$35$$35$7205759403792805246$35$$35$d31Q (FibHeap.root minTr2$35$$35$a1XT)) b$36$$35$$35$274 b$36$$35$$35$275 b$36$$35$$35$89 b$36$$35$$35$281 b$36$$35$$35$282 b$36$$35$$35$283 b$36$$35$$35$92 b$36$$35$$35$285 b$36$$35$$35$255))
(push 1)
(assert (not (or (and (= (FibHeap.root (FibHeap.minTree VV$35$$35$F$35$$35$270)) (FibHeap.root (FibHeap.minTree ds_d2Vf))) (< (FibHeap.root (FibHeap.minTree ds_d2Vf)) (FibHeap.root (FibHeap.minTree h$35$$35$a1XO)))) (and (or (<= (FibHeap.root (FibHeap.minTree h$35$$35$a1XO)) (FibHeap.root (FibHeap.minTree ds_d2Vf))) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) ds_d2Vf))) (= (FibHeap.root (FibHeap.minTree VV$35$$35$F$35$$35$270)) (FibHeap.root (FibHeap.minTree h$35$$35$a1XO)))))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$224 b$36$$35$$35$225 b$36$$35$$35$226 b$36$$35$$35$837 b$36$$35$$35$232 b$36$$35$$35$41 b$36$$35$$35$233 b$36$$35$$35$234 b$36$$35$$35$203 b$36$$35$$35$235 b$36$$35$$35$204 b$36$$35$$35$236 b$36$$35$$35$237 b$36$$35$$35$238 b$36$$35$$35$47 b$36$$35$$35$239 b$36$$35$$35$208 b$36$$35$$35$209 b$36$$35$$35$210 b$36$$35$$35$211 b$36$$35$$35$212 b$36$$35$$35$245 b$36$$35$$35$246 b$36$$35$$35$247 b$36$$35$$35$89 b$36$$35$$35$218 b$36$$35$$35$219 b$36$$35$$35$92 b$36$$35$$35$220 b$36$$35$$35$221))
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$334) (+ (apply$35$$35$0 (as len Int) ds_d2XJ) 1))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$352 b$36$$35$$35$356 b$36$$35$$35$357 b$36$$35$$35$358 b$36$$35$$35$359 b$36$$35$$35$839 b$36$$35$$35$360 b$36$$35$$35$41 b$36$$35$$35$361 b$36$$35$$35$362 b$36$$35$$35$364 b$36$$35$$35$428 b$36$$35$$35$429 b$36$$35$$35$366 b$36$$35$$35$430 b$36$$35$$35$47 b$36$$35$$35$367 b$36$$35$$35$431 b$36$$35$$35$432 b$36$$35$$35$433 b$36$$35$$35$434 b$36$$35$$35$435 b$36$$35$$35$436 b$36$$35$$35$437 b$36$$35$$35$439 b$36$$35$$35$89 b$36$$35$$35$441 b$36$$35$$35$442 b$36$$35$$35$443 b$36$$35$$35$92 b$36$$35$$35$444 b$36$$35$$35$445 b$36$$35$$35$351))
(push 1)
(assert (not (apply$35$$35$15 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$193 b$36$$35$$35$41 b$36$$35$$35$169 b$36$$35$$35$841 b$36$$35$$35$170 b$36$$35$$35$171 b$36$$35$$35$172 b$36$$35$$35$173 b$36$$35$$35$47 b$36$$35$$35$175 b$36$$35$$35$177 b$36$$35$$35$178 b$36$$35$$35$179 b$36$$35$$35$180 b$36$$35$$35$182 b$36$$35$$35$184 b$36$$35$$35$89 b$36$$35$$35$185 b$36$$35$$35$186 b$36$$35$$35$187 b$36$$35$$35$92 b$36$$35$$35$188 b$36$$35$$35$189 b$36$$35$$35$190 b$36$$35$$35$191))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$400 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$256 b$36$$35$$35$257 b$36$$35$$35$260 b$36$$35$$35$261 b$36$$35$$35$262 b$36$$35$$35$263 b$36$$35$$35$264 b$36$$35$$35$41 b$36$$35$$35$265 b$36$$35$$35$266 (and (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$305) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$305))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$305) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$305)))) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) VV$35$$35$F$35$$35$305))) b$36$$35$$35$267 b$36$$35$$35$47 b$36$$35$$35$89 b$36$$35$$35$92 b$36$$35$$35$255))
(push 1)
(assert (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$305)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$224 b$36$$35$$35$225 b$36$$35$$35$226 b$36$$35$$35$232 b$36$$35$$35$41 b$36$$35$$35$233 b$36$$35$$35$234 b$36$$35$$35$203 b$36$$35$$35$235 b$36$$35$$35$843 b$36$$35$$35$204 b$36$$35$$35$236 b$36$$35$$35$237 b$36$$35$$35$238 b$36$$35$$35$47 b$36$$35$$35$239 b$36$$35$$35$208 b$36$$35$$35$209 b$36$$35$$35$210 b$36$$35$$35$211 b$36$$35$$35$212 b$36$$35$$35$245 b$36$$35$$35$246 b$36$$35$$35$89 b$36$$35$$35$218 b$36$$35$$35$219 b$36$$35$$35$92 b$36$$35$$35$220 b$36$$35$$35$221))
(push 1)
(assert (not (= (FibHeap.rank x$35$$35$a1Y2) (FibHeap.rank VV$35$$35$F$35$$35$337))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$352 b$36$$35$$35$384 b$36$$35$$35$386 b$36$$35$$35$387 b$36$$35$$35$356 b$36$$35$$35$357 b$36$$35$$35$358 b$36$$35$$35$359 b$36$$35$$35$391 b$36$$35$$35$360 b$36$$35$$35$392 b$36$$35$$35$41 b$36$$35$$35$361 b$36$$35$$35$393 b$36$$35$$35$362 b$36$$35$$35$394 b$36$$35$$35$364 b$36$$35$$35$396 b$36$$35$$35$845 b$36$$35$$35$366 b$36$$35$$35$47 b$36$$35$$35$367 b$36$$35$$35$368 b$36$$35$$35$369 b$36$$35$$35$370 b$36$$35$$35$373 b$36$$35$$35$374 b$36$$35$$35$375 b$36$$35$$35$376 b$36$$35$$35$89 b$36$$35$$35$377 b$36$$35$$35$378 b$36$$35$$35$379 b$36$$35$$35$92 b$36$$35$$35$380 b$36$$35$$35$381 b$36$$35$$35$382 b$36$$35$$35$351))
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$178) 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$256 b$36$$35$$35$257 b$36$$35$$35$260 b$36$$35$$35$261 b$36$$35$$35$262 b$36$$35$$35$263 b$36$$35$$35$264 b$36$$35$$35$41 b$36$$35$$35$265 b$36$$35$$35$266 b$36$$35$$35$267 (and (or (and (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$306) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$306))) (and (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$306) (not (apply$35$$35$29 (as FibHeap.isEmptyFibHeap Int) VV$35$$35$F$35$$35$306)))) (< 0 (apply$35$$35$28 (as FibHeap.fibsize Int) VV$35$$35$F$35$$35$306))) b$36$$35$$35$47 b$36$$35$$35$89 b$36$$35$$35$92 b$36$$35$$35$255))
(push 1)
(assert (not (or (and (= (FibHeap.root (FibHeap.minTree VV$35$$35$F$35$$35$306)) (FibHeap.root (FibHeap.minTree ds_d2Vf))) (< (FibHeap.root (FibHeap.minTree ds_d2Vf)) (FibHeap.root (FibHeap.minTree h$35$$35$a1XO)))) (and (or (<= (FibHeap.root (FibHeap.minTree h$35$$35$a1XO)) (FibHeap.root (FibHeap.minTree ds_d2Vf))) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) ds_d2Vf))) (= (FibHeap.root (FibHeap.minTree VV$35$$35$F$35$$35$306)) (FibHeap.root (FibHeap.minTree h$35$$35$a1XO)))))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$41 b$36$$35$$35$47 b$36$$35$$35$847 b$36$$35$$35$308 b$36$$35$$35$309 b$36$$35$$35$310 b$36$$35$$35$311 b$36$$35$$35$312 b$36$$35$$35$89 b$36$$35$$35$92))
(push 1)
(assert (not (apply$35$$35$15 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$256 b$36$$35$$35$257 b$36$$35$$35$260 b$36$$35$$35$261 b$36$$35$$35$262 b$36$$35$$35$263 b$36$$35$$35$264 b$36$$35$$35$41 b$36$$35$$35$265 b$36$$35$$35$266 b$36$$35$$35$267 b$36$$35$$35$47 b$36$$35$$35$848 b$36$$35$$35$89 b$36$$35$$35$92 b$36$$35$$35$255))
(push 1)
(assert (not (apply$35$$35$15 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$256 b$36$$35$$35$257 b$36$$35$$35$258 b$36$$35$$35$259 b$36$$35$$35$41 b$36$$35$$35$47 b$36$$35$$35$849 b$36$$35$$35$89 b$36$$35$$35$92 b$36$$35$$35$255))
(push 1)
(assert (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$308)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$224 b$36$$35$$35$225 b$36$$35$$35$226 b$36$$35$$35$232 b$36$$35$$35$41 b$36$$35$$35$233 b$36$$35$$35$234 b$36$$35$$35$203 b$36$$35$$35$235 b$36$$35$$35$204 b$36$$35$$35$236 b$36$$35$$35$237 b$36$$35$$35$238 b$36$$35$$35$47 b$36$$35$$35$239 b$36$$35$$35$208 b$36$$35$$35$240 b$36$$35$$35$209 b$36$$35$$35$241 b$36$$35$$35$210 b$36$$35$$35$850 b$36$$35$$35$211 b$36$$35$$35$243 b$36$$35$$35$212 b$36$$35$$35$89 b$36$$35$$35$218 b$36$$35$$35$219 b$36$$35$$35$92 b$36$$35$$35$220 b$36$$35$$35$221))
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$340) 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$41 b$36$$35$$35$203 b$36$$35$$35$204 b$36$$35$$35$47 b$36$$35$$35$208 b$36$$35$$35$209 b$36$$35$$35$210 b$36$$35$$35$211 b$36$$35$$35$851 b$36$$35$$35$212 b$36$$35$$35$213 b$36$$35$$35$214 b$36$$35$$35$216 b$36$$35$$35$89 b$36$$35$$35$92))
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$372) 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$256 b$36$$35$$35$257 b$36$$35$$35$258 b$36$$35$$35$259 b$36$$35$$35$41 b$36$$35$$35$47 b$36$$35$$35$852 b$36$$35$$35$89 b$36$$35$$35$92 b$36$$35$$35$255))
(push 1)
(assert (not (or (and (= (FibHeap.root (FibHeap.minTree VV$35$$35$F$35$$35$309)) (FibHeap.root (FibHeap.minTree ds_d2Vf))) (< (FibHeap.root (FibHeap.minTree ds_d2Vf)) (FibHeap.root (FibHeap.minTree h$35$$35$a1XO)))) (and (or (<= (FibHeap.root (FibHeap.minTree h$35$$35$a1XO)) (FibHeap.root (FibHeap.minTree ds_d2Vf))) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) ds_d2Vf))) (= (FibHeap.root (FibHeap.minTree VV$35$$35$F$35$$35$309)) (FibHeap.root (FibHeap.minTree h$35$$35$a1XO)))))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$224 b$36$$35$$35$225 b$36$$35$$35$226 b$36$$35$$35$232 b$36$$35$$35$41 b$36$$35$$35$233 b$36$$35$$35$234 b$36$$35$$35$203 b$36$$35$$35$235 b$36$$35$$35$204 b$36$$35$$35$236 b$36$$35$$35$237 b$36$$35$$35$238 b$36$$35$$35$47 b$36$$35$$35$239 b$36$$35$$35$208 b$36$$35$$35$240 b$36$$35$$35$209 b$36$$35$$35$241 b$36$$35$$35$210 b$36$$35$$35$211 b$36$$35$$35$243 b$36$$35$$35$212 b$36$$35$$35$853 b$36$$35$$35$89 b$36$$35$$35$218 b$36$$35$$35$219 b$36$$35$$35$92 b$36$$35$$35$220 b$36$$35$$35$221))
(push 1)
(assert (not (<= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$341) (+ (apply$35$$35$0 (as len Int) ds_d2XJ) 1))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$310) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)) (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$310) 0) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$310) 0) (not (= VV$35$$35$F$35$$35$310 lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$310) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805238$35$$35$d31I)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$310) (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792805237$35$$35$d31H))) b$36$$35$$35$41 b$36$$35$$35$203 b$36$$35$$35$204 b$36$$35$$35$47 b$36$$35$$35$208 b$36$$35$$35$209 b$36$$35$$35$210 b$36$$35$$35$211 b$36$$35$$35$212 (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$310) (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$310)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$310) 0)) b$36$$35$$35$89 b$36$$35$$35$218 b$36$$35$$35$250 b$36$$35$$35$219 b$36$$35$$35$92 b$36$$35$$35$220 b$36$$35$$35$252 b$36$$35$$35$221))
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$310) 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$ds_d2Y7$35$$35$k_$35$$35$5045 (FibHeap.FibHeap Int)) (lq_karg$36$xs$35$$35$a1Yg$35$$35$k_$35$$35$5045 Int) (lq_karg$36$ds_d2Zq$35$$35$k_$35$$35$5045 (FibHeap.FibTree Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g$35$$35$k_$35$$35$5045 Int) (lq_karg$36$ds_d2Zt$35$$35$k_$35$$35$5045 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h$35$$35$k_$35$$35$5045 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p$35$$35$k_$35$$35$5045 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805283$35$$35$d32r$35$$35$k_$35$$35$5045 Int) (lq_karg$36$ds_d2Zr$35$$35$k_$35$$35$5045 Int) (lq_karg$36$x$35$$35$a1Yb$35$$35$k_$35$$35$5045 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805282$35$$35$d32q$35$$35$k_$35$$35$5045 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d$35$$35$k_$35$$35$5045 (FibHeap.FibHeap Int)) (lq_karg$36$ds_d2Zu$35$$35$k_$35$$35$5045 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805299$35$$35$d32H$35$$35$k_$35$$35$5045 Int) (lq_karg$36$VV$35$$35$5044$35$$35$k_$35$$35$5045 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805298$35$$35$d32G$35$$35$k_$35$$35$5045 (FibHeap.FibTree Int)) (lq_karg$36$x$35$$35$a1Yf$35$$35$k_$35$$35$5045 (FibHeap.FibTree Int)) (lq_karg$36$ds_d2Zs$35$$35$k_$35$$35$5045 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f$35$$35$k_$35$$35$5045 (FibHeap.FibTree Int))) (and (= lq_karg$36$VV$35$$35$5044$35$$35$k_$35$$35$5045 VV$35$$35$F$35$$35$55) (= lq_karg$36$ds_d2Y7$35$$35$k_$35$$35$5045 ds_d2Y7) (= lq_karg$36$ds_d2Zq$35$$35$k_$35$$35$5045 ds_d2Zq) (= lq_karg$36$ds_d2Zr$35$$35$k_$35$$35$5045 ds_d2Zr) (= lq_karg$36$ds_d2Zs$35$$35$k_$35$$35$5045 ds_d2Zs) (= lq_karg$36$ds_d2Zt$35$$35$k_$35$$35$5045 ds_d2Zt) (= lq_karg$36$ds_d2Zu$35$$35$k_$35$$35$5045 ds_d2Zu) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d$35$$35$k_$35$$35$5045 lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f$35$$35$k_$35$$35$5045 lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g$35$$35$k_$35$$35$5045 lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h$35$$35$k_$35$$35$5045 lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p$35$$35$k_$35$$35$5045 lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805282$35$$35$d32q$35$$35$k_$35$$35$5045 lq_anf$36$$35$$35$7205759403792805282$35$$35$d32q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805283$35$$35$d32r$35$$35$k_$35$$35$5045 lq_anf$36$$35$$35$7205759403792805283$35$$35$d32r) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805298$35$$35$d32G$35$$35$k_$35$$35$5045 lq_anf$36$$35$$35$7205759403792805298$35$$35$d32G) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805299$35$$35$d32H$35$$35$k_$35$$35$5045 lq_anf$36$$35$$35$7205759403792805299$35$$35$d32H) (= lq_karg$36$x$35$$35$a1Yb$35$$35$k_$35$$35$5045 x$35$$35$a1Yb) (= lq_karg$36$x$35$$35$a1Yf$35$$35$k_$35$$35$5045 x$35$$35$a1Yf) (= lq_karg$36$xs$35$$35$a1Yg$35$$35$k_$35$$35$5045 xs$35$$35$a1Yg) (exists ((VV$35$$35$F$35$$35$50 Int)) (and (= VV$35$$35$F$35$$35$50 lq_anf$36$$35$$35$7205759403792805283$35$$35$d32r) (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$50) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$50) (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$50)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$50) 0) (= lq_karg$36$VV$35$$35$5044$35$$35$k_$35$$35$5045 VV$35$$35$F$35$$35$50) (= lq_karg$36$ds_d2Y7$35$$35$k_$35$$35$5045 ds_d2Y7) (= lq_karg$36$ds_d2Zq$35$$35$k_$35$$35$5045 ds_d2Zq) (= lq_karg$36$ds_d2Zr$35$$35$k_$35$$35$5045 ds_d2Zr) (= lq_karg$36$ds_d2Zs$35$$35$k_$35$$35$5045 ds_d2Zs) (= lq_karg$36$ds_d2Zt$35$$35$k_$35$$35$5045 ds_d2Zt) (= lq_karg$36$ds_d2Zu$35$$35$k_$35$$35$5045 ds_d2Zu) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d$35$$35$k_$35$$35$5045 lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f$35$$35$k_$35$$35$5045 lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g$35$$35$k_$35$$35$5045 lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h$35$$35$k_$35$$35$5045 lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p$35$$35$k_$35$$35$5045 lq_anf$36$$35$$35$7205759403792805281$35$$35$d32p) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805282$35$$35$d32q$35$$35$k_$35$$35$5045 lq_anf$36$$35$$35$7205759403792805282$35$$35$d32q) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805283$35$$35$d32r$35$$35$k_$35$$35$5045 lq_anf$36$$35$$35$7205759403792805283$35$$35$d32r) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805298$35$$35$d32G$35$$35$k_$35$$35$5045 lq_anf$36$$35$$35$7205759403792805298$35$$35$d32G) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805299$35$$35$d32H$35$$35$k_$35$$35$5045 lq_anf$36$$35$$35$7205759403792805299$35$$35$d32H) (= lq_karg$36$x$35$$35$a1Yb$35$$35$k_$35$$35$5045 x$35$$35$a1Yb) (= lq_karg$36$x$35$$35$a1Yf$35$$35$k_$35$$35$5045 x$35$$35$a1Yf) (= lq_karg$36$xs$35$$35$a1Yg$35$$35$k_$35$$35$5045 xs$35$$35$a1Yg))))) b$36$$35$$35$352 b$36$$35$$35$356 b$36$$35$$35$357 b$36$$35$$35$358 b$36$$35$$35$359 b$36$$35$$35$360 b$36$$35$$35$41 b$36$$35$$35$361 b$36$$35$$35$362 b$36$$35$$35$364 b$36$$35$$35$428 b$36$$35$$35$429 b$36$$35$$35$366 b$36$$35$$35$430 b$36$$35$$35$47 b$36$$35$$35$367 b$36$$35$$35$431 b$36$$35$$35$432 b$36$$35$$35$464 b$36$$35$$35$465 b$36$$35$$35$466 b$36$$35$$35$467 b$36$$35$$35$469 b$36$$35$$35$470 b$36$$35$$35$471 (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$55) (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$55)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$55) 0)) b$36$$35$$35$89 b$36$$35$$35$92 b$36$$35$$35$351))
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$55) 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$352 b$36$$35$$35$384 b$36$$35$$35$386 b$36$$35$$35$387 b$36$$35$$35$356 b$36$$35$$35$388 b$36$$35$$35$357 b$36$$35$$35$389 b$36$$35$$35$358 b$36$$35$$35$390 b$36$$35$$35$359 b$36$$35$$35$360 b$36$$35$$35$41 b$36$$35$$35$361 b$36$$35$$35$362 b$36$$35$$35$364 b$36$$35$$35$366 b$36$$35$$35$47 b$36$$35$$35$367 b$36$$35$$35$368 b$36$$35$$35$369 b$36$$35$$35$370 b$36$$35$$35$373 b$36$$35$$35$374 b$36$$35$$35$375 b$36$$35$$35$376 b$36$$35$$35$89 b$36$$35$$35$377 b$36$$35$$35$378 b$36$$35$$35$858 b$36$$35$$35$379 b$36$$35$$35$92 b$36$$35$$35$380 b$36$$35$$35$381 b$36$$35$$35$382 b$36$$35$$35$351))
(push 1)
(assert (not (apply$35$$35$15 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$41 b$36$$35$$35$521 b$36$$35$$35$522 b$36$$35$$35$526 b$36$$35$$35$47 b$36$$35$$35$527 b$36$$35$$35$528 b$36$$35$$35$529 b$36$$35$$35$530 b$36$$35$$35$531 b$36$$35$$35$89 b$36$$35$$35$859 b$36$$35$$35$92))
(push 1)
(assert (not (< 0 VV$35$$35$F$35$$35$25)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$352 b$36$$35$$35$353 b$36$$35$$35$354 b$36$$35$$35$355 b$36$$35$$35$41 b$36$$35$$35$47 b$36$$35$$35$89 b$36$$35$$35$92 b$36$$35$$35$860 b$36$$35$$35$351))
(push 1)
(assert (not (apply$35$$35$15 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d$35$$35$k_$35$$35$4621 (FibHeap.FibHeap Int)) (lq_karg$36$x$35$$35$a1Ym$35$$35$k_$35$$35$4621 (FibHeap.FibTree Int)) (lq_karg$36$ds_d2Zx$35$$35$k_$35$$35$4621 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805279$35$$35$d32n$35$$35$k_$35$$35$4621 Int) (lq_karg$36$ds_d2Zr$35$$35$k_$35$$35$4621 Int) (lq_karg$36$VV$35$$35$4620$35$$35$k_$35$$35$4621 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805298$35$$35$d32G$35$$35$k_$35$$35$4621 (FibHeap.FibTree Int)) (lq_karg$36$ds_d2Zs$35$$35$k_$35$$35$4621 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805278$35$$35$d32m$35$$35$k_$35$$35$4621 Int) (lq_karg$36$subtr$35$$35$a1Yl$35$$35$k_$35$$35$4621 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805299$35$$35$d32H$35$$35$k_$35$$35$4621 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j$35$$35$k_$35$$35$4621 Int) (lq_karg$36$ds_d2Zq$35$$35$k_$35$$35$4621 (FibHeap.FibTree Int)) (lq_karg$36$ds_d2Y7$35$$35$k_$35$$35$4621 (FibHeap.FibHeap Int)) (lq_karg$36$ds_d2Zv$35$$35$k_$35$$35$4621 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805274$35$$35$d32i$35$$35$k_$35$$35$4621 (FibHeap.FibTree Int)) (lq_karg$36$x$35$$35$a1Yb$35$$35$k_$35$$35$4621 Int) (lq_karg$36$ds_d2Zw$35$$35$k_$35$$35$4621 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f$35$$35$k_$35$$35$4621 (FibHeap.FibTree Int)) (lq_karg$36$ds_d2Zt$35$$35$k_$35$$35$4621 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h$35$$35$k_$35$$35$4621 Int) (lq_karg$36$xs$35$$35$a1Yn$35$$35$k_$35$$35$4621 Int) (lq_karg$36$ds_d2Zu$35$$35$k_$35$$35$4621 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g$35$$35$k_$35$$35$4621 Int)) (and (= lq_karg$36$VV$35$$35$4620$35$$35$k_$35$$35$4621 VV$35$$35$F$35$$35$91) (= lq_karg$36$ds_d2Y7$35$$35$k_$35$$35$4621 ds_d2Y7) (= lq_karg$36$ds_d2Zq$35$$35$k_$35$$35$4621 ds_d2Zq) (= lq_karg$36$ds_d2Zr$35$$35$k_$35$$35$4621 ds_d2Zr) (= lq_karg$36$ds_d2Zs$35$$35$k_$35$$35$4621 ds_d2Zs) (= lq_karg$36$ds_d2Zt$35$$35$k_$35$$35$4621 ds_d2Zt) (= lq_karg$36$ds_d2Zu$35$$35$k_$35$$35$4621 ds_d2Zu) (= lq_karg$36$ds_d2Zv$35$$35$k_$35$$35$4621 ds_d2Zv) (= lq_karg$36$ds_d2Zw$35$$35$k_$35$$35$4621 ds_d2Zw) (= lq_karg$36$ds_d2Zx$35$$35$k_$35$$35$4621 ds_d2Zx) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d$35$$35$k_$35$$35$4621 lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f$35$$35$k_$35$$35$4621 lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g$35$$35$k_$35$$35$4621 lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h$35$$35$k_$35$$35$4621 lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805274$35$$35$d32i$35$$35$k_$35$$35$4621 lq_anf$36$$35$$35$7205759403792805274$35$$35$d32i) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j$35$$35$k_$35$$35$4621 lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805278$35$$35$d32m$35$$35$k_$35$$35$4621 lq_anf$36$$35$$35$7205759403792805278$35$$35$d32m) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805279$35$$35$d32n$35$$35$k_$35$$35$4621 lq_anf$36$$35$$35$7205759403792805279$35$$35$d32n) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805298$35$$35$d32G$35$$35$k_$35$$35$4621 lq_anf$36$$35$$35$7205759403792805298$35$$35$d32G) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805299$35$$35$d32H$35$$35$k_$35$$35$4621 lq_anf$36$$35$$35$7205759403792805299$35$$35$d32H) (= lq_karg$36$subtr$35$$35$a1Yl$35$$35$k_$35$$35$4621 subtr$35$$35$a1Yl) (= lq_karg$36$x$35$$35$a1Yb$35$$35$k_$35$$35$4621 x$35$$35$a1Yb) (= lq_karg$36$x$35$$35$a1Ym$35$$35$k_$35$$35$4621 x$35$$35$a1Ym) (= lq_karg$36$xs$35$$35$a1Yn$35$$35$k_$35$$35$4621 xs$35$$35$a1Yn) (exists ((VV$35$$35$F$35$$35$86 Int)) (and (= VV$35$$35$F$35$$35$86 lq_anf$36$$35$$35$7205759403792805279$35$$35$d32n) (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$86) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$86) (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$86)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$86) 0) (= lq_karg$36$VV$35$$35$4620$35$$35$k_$35$$35$4621 VV$35$$35$F$35$$35$86) (= lq_karg$36$ds_d2Y7$35$$35$k_$35$$35$4621 ds_d2Y7) (= lq_karg$36$ds_d2Zq$35$$35$k_$35$$35$4621 ds_d2Zq) (= lq_karg$36$ds_d2Zr$35$$35$k_$35$$35$4621 ds_d2Zr) (= lq_karg$36$ds_d2Zs$35$$35$k_$35$$35$4621 ds_d2Zs) (= lq_karg$36$ds_d2Zt$35$$35$k_$35$$35$4621 ds_d2Zt) (= lq_karg$36$ds_d2Zu$35$$35$k_$35$$35$4621 ds_d2Zu) (= lq_karg$36$ds_d2Zv$35$$35$k_$35$$35$4621 ds_d2Zv) (= lq_karg$36$ds_d2Zw$35$$35$k_$35$$35$4621 ds_d2Zw) (= lq_karg$36$ds_d2Zx$35$$35$k_$35$$35$4621 ds_d2Zx) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d$35$$35$k_$35$$35$4621 lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f$35$$35$k_$35$$35$4621 lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g$35$$35$k_$35$$35$4621 lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h$35$$35$k_$35$$35$4621 lq_anf$36$$35$$35$7205759403792805273$35$$35$d32h) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805274$35$$35$d32i$35$$35$k_$35$$35$4621 lq_anf$36$$35$$35$7205759403792805274$35$$35$d32i) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j$35$$35$k_$35$$35$4621 lq_anf$36$$35$$35$7205759403792805275$35$$35$d32j) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805278$35$$35$d32m$35$$35$k_$35$$35$4621 lq_anf$36$$35$$35$7205759403792805278$35$$35$d32m) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805279$35$$35$d32n$35$$35$k_$35$$35$4621 lq_anf$36$$35$$35$7205759403792805279$35$$35$d32n) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805298$35$$35$d32G$35$$35$k_$35$$35$4621 lq_anf$36$$35$$35$7205759403792805298$35$$35$d32G) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805299$35$$35$d32H$35$$35$k_$35$$35$4621 lq_anf$36$$35$$35$7205759403792805299$35$$35$d32H) (= lq_karg$36$subtr$35$$35$a1Yl$35$$35$k_$35$$35$4621 subtr$35$$35$a1Yl) (= lq_karg$36$x$35$$35$a1Yb$35$$35$k_$35$$35$4621 x$35$$35$a1Yb) (= lq_karg$36$x$35$$35$a1Ym$35$$35$k_$35$$35$4621 x$35$$35$a1Ym) (= lq_karg$36$xs$35$$35$a1Yn$35$$35$k_$35$$35$4621 xs$35$$35$a1Yn))))) b$36$$35$$35$352 b$36$$35$$35$448 b$36$$35$$35$449 b$36$$35$$35$451 b$36$$35$$35$356 b$36$$35$$35$452 b$36$$35$$35$357 b$36$$35$$35$358 b$36$$35$$35$359 b$36$$35$$35$360 b$36$$35$$35$41 b$36$$35$$35$361 b$36$$35$$35$362 b$36$$35$$35$364 b$36$$35$$35$428 b$36$$35$$35$429 b$36$$35$$35$366 b$36$$35$$35$430 b$36$$35$$35$47 b$36$$35$$35$367 b$36$$35$$35$431 b$36$$35$$35$432 b$36$$35$$35$433 b$36$$35$$35$434 b$36$$35$$35$435 b$36$$35$$35$436 b$36$$35$$35$437 b$36$$35$$35$439 b$36$$35$$35$89 b$36$$35$$35$441 b$36$$35$$35$442 b$36$$35$$35$92 b$36$$35$$35$446 b$36$$35$$35$351 b$36$$35$$35$447 (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$91) (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$91)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$91) 0))))
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$91) 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$160 b$36$$35$$35$864 b$36$$35$$35$161 b$36$$35$$35$163 b$36$$35$$35$164 b$36$$35$$35$166 b$36$$35$$35$41 b$36$$35$$35$47 b$36$$35$$35$89 b$36$$35$$35$92))
(push 1)
(assert (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$411)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false b$36$$35$$35$41 b$36$$35$$35$521 b$36$$35$$35$522 b$36$$35$$35$523 b$36$$35$$35$524 b$36$$35$$35$525 b$36$$35$$35$47 b$36$$35$$35$89 b$36$$35$$35$92))
(push 1)
(assert (not (< 0 VV$35$$35$F$35$$35$28)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$160 b$36$$35$$35$161 b$36$$35$$35$866 b$36$$35$$35$163 b$36$$35$$35$164 b$36$$35$$35$166 b$36$$35$$35$41 b$36$$35$$35$47 b$36$$35$$35$89 b$36$$35$$35$92))
(push 1)
(assert (not (= (FibHeap.rank (FibHeap.minTree VV$35$$35$F$35$$35$412)) 1)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$867 b$36$$35$$35$41 b$36$$35$$35$521 b$36$$35$$35$522 b$36$$35$$35$523 b$36$$35$$35$524 b$36$$35$$35$525 b$36$$35$$35$47 b$36$$35$$35$89 b$36$$35$$35$92))
(push 1)
(assert (not (apply$35$$35$15 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (exists ((lq_karg$36$h$35$$35$a1XO$35$$35$k_$35$$35$2045 (FibHeap.FibHeap Int)) (lq_karg$36$ds_d2Vf$35$$35$k_$35$$35$2045 (FibHeap.FibHeap Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M$35$$35$k_$35$$35$2045 (FibHeap.FibHeap Int)) (lq_karg$36$VV$35$$35$2044$35$$35$k_$35$$35$2045 Int) (lq_karg$36$ts1$35$$35$a1XR$35$$35$k_$35$$35$2045 Int) (lq_tmp$36$x$35$$35$2046 Int) (lq_karg$36$minTr2$35$$35$a1XT$35$$35$k_$35$$35$2045 (FibHeap.FibTree Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N$35$$35$k_$35$$35$2045 (FibHeap.FibHeap Int)) (lq_karg$36$minTr1$35$$35$a1XQ$35$$35$k_$35$$35$2045 (FibHeap.FibTree Int)) (lq_karg$36$ts2$35$$35$a1XU$35$$35$k_$35$$35$2045 Int)) (and (= lq_karg$36$VV$35$$35$2044$35$$35$k_$35$$35$2045 lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P) (= lq_karg$36$ds_d2Vf$35$$35$k_$35$$35$2045 ds_d2Vf) (= lq_karg$36$h$35$$35$a1XO$35$$35$k_$35$$35$2045 h$35$$35$a1XO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M$35$$35$k_$35$$35$2045 lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N$35$$35$k_$35$$35$2045 lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (= lq_karg$36$minTr1$35$$35$a1XQ$35$$35$k_$35$$35$2045 minTr1$35$$35$a1XQ) (= lq_karg$36$minTr2$35$$35$a1XT$35$$35$k_$35$$35$2045 minTr2$35$$35$a1XT) (= lq_karg$36$ts1$35$$35$a1XR$35$$35$k_$35$$35$2045 ts1$35$$35$a1XR) (= lq_karg$36$ts2$35$$35$a1XU$35$$35$k_$35$$35$2045 ts2$35$$35$a1XU) (= lq_tmp$36$x$35$$35$2046 lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P) (exists ((VV$35$$35$F$35$$35$304 Int)) (and (= lq_karg$36$VV$35$$35$2044$35$$35$k_$35$$35$2045 VV$35$$35$F$35$$35$304) (= lq_karg$36$ds_d2Vf$35$$35$k_$35$$35$2045 ds_d2Vf) (= lq_karg$36$h$35$$35$a1XO$35$$35$k_$35$$35$2045 h$35$$35$a1XO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M$35$$35$k_$35$$35$2045 lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N$35$$35$k_$35$$35$2045 lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (= lq_karg$36$minTr1$35$$35$a1XQ$35$$35$k_$35$$35$2045 minTr1$35$$35$a1XQ) (= lq_karg$36$minTr2$35$$35$a1XT$35$$35$k_$35$$35$2045 minTr2$35$$35$a1XT) (= lq_karg$36$ts1$35$$35$a1XR$35$$35$k_$35$$35$2045 ts1$35$$35$a1XR) (= lq_karg$36$ts2$35$$35$a1XU$35$$35$k_$35$$35$2045 ts2$35$$35$a1XU))))) (exists ((lq_karg$36$ts2$35$$35$a1XU$35$$35$k_$35$$35$2056 Int) (lq_tmp$36$x$35$$35$2057 Int) (lq_karg$36$ds_d2Vf$35$$35$k_$35$$35$2056 (FibHeap.FibHeap Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M$35$$35$k_$35$$35$2056 (FibHeap.FibHeap Int)) (lq_karg$36$ts1$35$$35$a1XR$35$$35$k_$35$$35$2056 Int) (lq_karg$36$VV$35$$35$2055$35$$35$k_$35$$35$2056 Int) (lq_karg$36$h$35$$35$a1XO$35$$35$k_$35$$35$2056 (FibHeap.FibHeap Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P$35$$35$k_$35$$35$2056 Int) (lq_karg$36$minTr1$35$$35$a1XQ$35$$35$k_$35$$35$2056 (FibHeap.FibTree Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N$35$$35$k_$35$$35$2056 (FibHeap.FibHeap Int)) (lq_karg$36$minTr2$35$$35$a1XT$35$$35$k_$35$$35$2056 (FibHeap.FibTree Int))) (and (= lq_karg$36$VV$35$$35$2055$35$$35$k_$35$$35$2056 lq_anf$36$$35$$35$7205759403792805246$35$$35$d31Q) (= lq_karg$36$ds_d2Vf$35$$35$k_$35$$35$2056 ds_d2Vf) (= lq_karg$36$h$35$$35$a1XO$35$$35$k_$35$$35$2056 h$35$$35$a1XO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M$35$$35$k_$35$$35$2056 lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N$35$$35$k_$35$$35$2056 lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P$35$$35$k_$35$$35$2056 lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P) (= lq_karg$36$minTr1$35$$35$a1XQ$35$$35$k_$35$$35$2056 minTr1$35$$35$a1XQ) (= lq_karg$36$minTr2$35$$35$a1XT$35$$35$k_$35$$35$2056 minTr2$35$$35$a1XT) (= lq_karg$36$ts1$35$$35$a1XR$35$$35$k_$35$$35$2056 ts1$35$$35$a1XR) (= lq_karg$36$ts2$35$$35$a1XU$35$$35$k_$35$$35$2056 ts2$35$$35$a1XU) (= lq_tmp$36$x$35$$35$2057 lq_anf$36$$35$$35$7205759403792805246$35$$35$d31Q) (exists ((VV$35$$35$F$35$$35$303 Int)) (and (= lq_karg$36$VV$35$$35$2055$35$$35$k_$35$$35$2056 VV$35$$35$F$35$$35$303) (= lq_karg$36$ds_d2Vf$35$$35$k_$35$$35$2056 ds_d2Vf) (= lq_karg$36$h$35$$35$a1XO$35$$35$k_$35$$35$2056 h$35$$35$a1XO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M$35$$35$k_$35$$35$2056 lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N$35$$35$k_$35$$35$2056 lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P$35$$35$k_$35$$35$2056 lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P) (= lq_karg$36$minTr1$35$$35$a1XQ$35$$35$k_$35$$35$2056 minTr1$35$$35$a1XQ) (= lq_karg$36$minTr2$35$$35$a1XT$35$$35$k_$35$$35$2056 minTr2$35$$35$a1XT) (= lq_karg$36$ts1$35$$35$a1XR$35$$35$k_$35$$35$2056 ts1$35$$35$a1XR) (= lq_karg$36$ts2$35$$35$a1XU$35$$35$k_$35$$35$2056 ts2$35$$35$a1XU)))))) b$36$$35$$35$256 b$36$$35$$35$257 b$36$$35$$35$260 b$36$$35$$35$868 b$36$$35$$35$261 b$36$$35$$35$262 b$36$$35$$35$263 b$36$$35$$35$264 b$36$$35$$35$41 b$36$$35$$35$268 b$36$$35$$35$269 b$36$$35$$35$270 b$36$$35$$35$47 b$36$$35$$35$271 (= lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P (FibHeap.root minTr1$35$$35$a1XQ)) (= lq_anf$36$$35$$35$7205759403792805246$35$$35$d31Q (FibHeap.root minTr2$35$$35$a1XT)) b$36$$35$$35$274 b$36$$35$$35$275 b$36$$35$$35$276 b$36$$35$$35$277 b$36$$35$$35$278 b$36$$35$$35$280 b$36$$35$$35$89 b$36$$35$$35$92 b$36$$35$$35$255))
(push 1)
(assert (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) VV$35$$35$F$35$$35$285)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and false (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$381) (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$381)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$381) 0)) b$36$$35$$35$41 b$36$$35$$35$203 b$36$$35$$35$204 b$36$$35$$35$205 b$36$$35$$35$206 b$36$$35$$35$47 b$36$$35$$35$207 b$36$$35$$35$89 b$36$$35$$35$92))
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$381) 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$160 b$36$$35$$35$161 b$36$$35$$35$163 b$36$$35$$35$164 b$36$$35$$35$166 b$36$$35$$35$870 b$36$$35$$35$41 b$36$$35$$35$47 b$36$$35$$35$89 b$36$$35$$35$92))
(push 1)
(assert (not (= (FibHeap.root (FibHeap.minTree VV$35$$35$F$35$$35$413)) x$35$$35$a1XG)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$515 b$36$$35$$35$516 b$36$$35$$35$517 b$36$$35$$35$518 b$36$$35$$35$519 b$36$$35$$35$871 b$36$$35$$35$520 b$36$$35$$35$41 b$36$$35$$35$47 b$36$$35$$35$89 b$36$$35$$35$92 b$36$$35$$35$510 b$36$$35$$35$511))
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$30 (apply$35$$35$0 (as len Int) ds_d2TZ))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (and (exists ((lq_karg$36$h$35$$35$a1XO$35$$35$k_$35$$35$2045 (FibHeap.FibHeap Int)) (lq_karg$36$ds_d2Vf$35$$35$k_$35$$35$2045 (FibHeap.FibHeap Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M$35$$35$k_$35$$35$2045 (FibHeap.FibHeap Int)) (lq_karg$36$VV$35$$35$2044$35$$35$k_$35$$35$2045 Int) (lq_karg$36$ts1$35$$35$a1XR$35$$35$k_$35$$35$2045 Int) (lq_tmp$36$x$35$$35$2046 Int) (lq_karg$36$minTr2$35$$35$a1XT$35$$35$k_$35$$35$2045 (FibHeap.FibTree Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N$35$$35$k_$35$$35$2045 (FibHeap.FibHeap Int)) (lq_karg$36$minTr1$35$$35$a1XQ$35$$35$k_$35$$35$2045 (FibHeap.FibTree Int)) (lq_karg$36$ts2$35$$35$a1XU$35$$35$k_$35$$35$2045 Int)) (and (= lq_karg$36$VV$35$$35$2044$35$$35$k_$35$$35$2045 lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P) (= lq_karg$36$ds_d2Vf$35$$35$k_$35$$35$2045 ds_d2Vf) (= lq_karg$36$h$35$$35$a1XO$35$$35$k_$35$$35$2045 h$35$$35$a1XO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M$35$$35$k_$35$$35$2045 lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N$35$$35$k_$35$$35$2045 lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (= lq_karg$36$minTr1$35$$35$a1XQ$35$$35$k_$35$$35$2045 minTr1$35$$35$a1XQ) (= lq_karg$36$minTr2$35$$35$a1XT$35$$35$k_$35$$35$2045 minTr2$35$$35$a1XT) (= lq_karg$36$ts1$35$$35$a1XR$35$$35$k_$35$$35$2045 ts1$35$$35$a1XR) (= lq_karg$36$ts2$35$$35$a1XU$35$$35$k_$35$$35$2045 ts2$35$$35$a1XU) (= lq_tmp$36$x$35$$35$2046 lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P) (exists ((VV$35$$35$F$35$$35$304 Int)) (and (= lq_karg$36$VV$35$$35$2044$35$$35$k_$35$$35$2045 VV$35$$35$F$35$$35$304) (= lq_karg$36$ds_d2Vf$35$$35$k_$35$$35$2045 ds_d2Vf) (= lq_karg$36$h$35$$35$a1XO$35$$35$k_$35$$35$2045 h$35$$35$a1XO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M$35$$35$k_$35$$35$2045 lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N$35$$35$k_$35$$35$2045 lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (= lq_karg$36$minTr1$35$$35$a1XQ$35$$35$k_$35$$35$2045 minTr1$35$$35$a1XQ) (= lq_karg$36$minTr2$35$$35$a1XT$35$$35$k_$35$$35$2045 minTr2$35$$35$a1XT) (= lq_karg$36$ts1$35$$35$a1XR$35$$35$k_$35$$35$2045 ts1$35$$35$a1XR) (= lq_karg$36$ts2$35$$35$a1XU$35$$35$k_$35$$35$2045 ts2$35$$35$a1XU))))) (exists ((lq_karg$36$ts2$35$$35$a1XU$35$$35$k_$35$$35$2056 Int) (lq_tmp$36$x$35$$35$2057 Int) (lq_karg$36$ds_d2Vf$35$$35$k_$35$$35$2056 (FibHeap.FibHeap Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M$35$$35$k_$35$$35$2056 (FibHeap.FibHeap Int)) (lq_karg$36$ts1$35$$35$a1XR$35$$35$k_$35$$35$2056 Int) (lq_karg$36$VV$35$$35$2055$35$$35$k_$35$$35$2056 Int) (lq_karg$36$h$35$$35$a1XO$35$$35$k_$35$$35$2056 (FibHeap.FibHeap Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P$35$$35$k_$35$$35$2056 Int) (lq_karg$36$minTr1$35$$35$a1XQ$35$$35$k_$35$$35$2056 (FibHeap.FibTree Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N$35$$35$k_$35$$35$2056 (FibHeap.FibHeap Int)) (lq_karg$36$minTr2$35$$35$a1XT$35$$35$k_$35$$35$2056 (FibHeap.FibTree Int))) (and (= lq_karg$36$VV$35$$35$2055$35$$35$k_$35$$35$2056 lq_anf$36$$35$$35$7205759403792805246$35$$35$d31Q) (= lq_karg$36$ds_d2Vf$35$$35$k_$35$$35$2056 ds_d2Vf) (= lq_karg$36$h$35$$35$a1XO$35$$35$k_$35$$35$2056 h$35$$35$a1XO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M$35$$35$k_$35$$35$2056 lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N$35$$35$k_$35$$35$2056 lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P$35$$35$k_$35$$35$2056 lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P) (= lq_karg$36$minTr1$35$$35$a1XQ$35$$35$k_$35$$35$2056 minTr1$35$$35$a1XQ) (= lq_karg$36$minTr2$35$$35$a1XT$35$$35$k_$35$$35$2056 minTr2$35$$35$a1XT) (= lq_karg$36$ts1$35$$35$a1XR$35$$35$k_$35$$35$2056 ts1$35$$35$a1XR) (= lq_karg$36$ts2$35$$35$a1XU$35$$35$k_$35$$35$2056 ts2$35$$35$a1XU) (= lq_tmp$36$x$35$$35$2057 lq_anf$36$$35$$35$7205759403792805246$35$$35$d31Q) (exists ((VV$35$$35$F$35$$35$303 Int)) (and (= lq_karg$36$VV$35$$35$2055$35$$35$k_$35$$35$2056 VV$35$$35$F$35$$35$303) (= lq_karg$36$ds_d2Vf$35$$35$k_$35$$35$2056 ds_d2Vf) (= lq_karg$36$h$35$$35$a1XO$35$$35$k_$35$$35$2056 h$35$$35$a1XO) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M$35$$35$k_$35$$35$2056 lq_anf$36$$35$$35$7205759403792805242$35$$35$d31M) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N$35$$35$k_$35$$35$2056 lq_anf$36$$35$$35$7205759403792805243$35$$35$d31N) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P$35$$35$k_$35$$35$2056 lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P) (= lq_karg$36$minTr1$35$$35$a1XQ$35$$35$k_$35$$35$2056 minTr1$35$$35$a1XQ) (= lq_karg$36$minTr2$35$$35$a1XT$35$$35$k_$35$$35$2056 minTr2$35$$35$a1XT) (= lq_karg$36$ts1$35$$35$a1XR$35$$35$k_$35$$35$2056 ts1$35$$35$a1XR) (= lq_karg$36$ts2$35$$35$a1XU$35$$35$k_$35$$35$2056 ts2$35$$35$a1XU)))))) b$36$$35$$35$256 b$36$$35$$35$257 b$36$$35$$35$260 b$36$$35$$35$261 b$36$$35$$35$262 b$36$$35$$35$263 b$36$$35$$35$264 b$36$$35$$35$41 b$36$$35$$35$873 b$36$$35$$35$268 b$36$$35$$35$269 b$36$$35$$35$270 b$36$$35$$35$47 b$36$$35$$35$271 (= lq_anf$36$$35$$35$7205759403792805245$35$$35$d31P (FibHeap.root minTr1$35$$35$a1XQ)) (= lq_anf$36$$35$$35$7205759403792805246$35$$35$d31Q (FibHeap.root minTr2$35$$35$a1XT)) b$36$$35$$35$274 b$36$$35$$35$275 b$36$$35$$35$276 b$36$$35$$35$277 b$36$$35$$35$278 b$36$$35$$35$280 b$36$$35$$35$89 b$36$$35$$35$92 b$36$$35$$35$255))
(push 1)
(assert (not (or (and (= (FibHeap.root (FibHeap.minTree VV$35$$35$F$35$$35$286)) (FibHeap.root (FibHeap.minTree ds_d2Vf))) (< (FibHeap.root (FibHeap.minTree ds_d2Vf)) (FibHeap.root (FibHeap.minTree h$35$$35$a1XO)))) (and (or (<= (FibHeap.root (FibHeap.minTree h$35$$35$a1XO)) (FibHeap.root (FibHeap.minTree ds_d2Vf))) (not (apply$35$$35$29 (as FibHeap.notEmptyFibHeap Int) ds_d2Vf))) (= (FibHeap.root (FibHeap.minTree VV$35$$35$F$35$$35$286)) (FibHeap.root (FibHeap.minTree h$35$$35$a1XO)))))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$41 b$36$$35$$35$874 b$36$$35$$35$203 b$36$$35$$35$204 b$36$$35$$35$205 b$36$$35$$35$206 b$36$$35$$35$47 b$36$$35$$35$207 b$36$$35$$35$89 b$36$$35$$35$92))
(push 1)
(assert (not (apply$35$$35$15 (as totalityError Int) lit$36$Pattern$32$match$40$es$41$$32$are$32$non$45$exhaustive)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$160 b$36$$35$$35$161 b$36$$35$$35$163 b$36$$35$$35$164 b$36$$35$$35$166 b$36$$35$$35$41 b$36$$35$$35$875 b$36$$35$$35$47 b$36$$35$$35$89 b$36$$35$$35$92))
(push 1)
(assert (not (= (FibHeap.subtrees (FibHeap.minTree VV$35$$35$F$35$$35$414)) (as GHC.Types.$91$$93$ Int))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792805296$35$$35$d32E$35$$35$k_$35$$35$4061 (FibHeap.FibTree Int)) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t$35$$35$k_$35$$35$4061 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805293$35$$35$d32B$35$$35$k_$35$$35$4061 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805295$35$$35$d32D$35$$35$k_$35$$35$4061 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F$35$$35$k_$35$$35$4061 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s$35$$35$k_$35$$35$4061 Int) (lq_karg$36$VV$35$$35$4060$35$$35$k_$35$$35$4061 Int) (lq_karg$36$ds_d2Zq$35$$35$k_$35$$35$4061 (FibHeap.FibTree Int)) (lq_karg$36$ds_d2Y7$35$$35$k_$35$$35$4061 (FibHeap.FibHeap Int)) (lq_karg$36$xs$35$$35$a1Yg$35$$35$k_$35$$35$4061 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805294$35$$35$d32C$35$$35$k_$35$$35$4061 Int) (lq_karg$36$ds_d2Zr$35$$35$k_$35$$35$4061 Int) (lq_karg$36$x$35$$35$a1Yf$35$$35$k_$35$$35$4061 (FibHeap.FibTree Int)) (lq_karg$36$ds_d2Zs$35$$35$k_$35$$35$4061 Int) (lq_karg$36$ds_d2Zt$35$$35$k_$35$$35$4061 Int) (lq_karg$36$ds_d2Zu$35$$35$k_$35$$35$4061 Bool) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g$35$$35$k_$35$$35$4061 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d$35$$35$k_$35$$35$4061 (FibHeap.FibHeap Int)) (lq_karg$36$x$35$$35$a1Yb$35$$35$k_$35$$35$4061 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f$35$$35$k_$35$$35$4061 (FibHeap.FibTree Int))) (and (= lq_karg$36$VV$35$$35$4060$35$$35$k_$35$$35$4061 VV$35$$35$F$35$$35$127) (= lq_karg$36$ds_d2Y7$35$$35$k_$35$$35$4061 ds_d2Y7) (= lq_karg$36$ds_d2Zq$35$$35$k_$35$$35$4061 ds_d2Zq) (= lq_karg$36$ds_d2Zr$35$$35$k_$35$$35$4061 ds_d2Zr) (= lq_karg$36$ds_d2Zs$35$$35$k_$35$$35$4061 ds_d2Zs) (= lq_karg$36$ds_d2Zt$35$$35$k_$35$$35$4061 ds_d2Zt) (= lq_karg$36$ds_d2Zu$35$$35$k_$35$$35$4061 ds_d2Zu) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d$35$$35$k_$35$$35$4061 lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f$35$$35$k_$35$$35$4061 lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g$35$$35$k_$35$$35$4061 lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s$35$$35$k_$35$$35$4061 lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t$35$$35$k_$35$$35$4061 lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805293$35$$35$d32B$35$$35$k_$35$$35$4061 lq_anf$36$$35$$35$7205759403792805293$35$$35$d32B) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805294$35$$35$d32C$35$$35$k_$35$$35$4061 lq_anf$36$$35$$35$7205759403792805294$35$$35$d32C) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805295$35$$35$d32D$35$$35$k_$35$$35$4061 lq_anf$36$$35$$35$7205759403792805295$35$$35$d32D) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805296$35$$35$d32E$35$$35$k_$35$$35$4061 lq_anf$36$$35$$35$7205759403792805296$35$$35$d32E) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F$35$$35$k_$35$$35$4061 lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F) (= lq_karg$36$x$35$$35$a1Yb$35$$35$k_$35$$35$4061 x$35$$35$a1Yb) (= lq_karg$36$x$35$$35$a1Yf$35$$35$k_$35$$35$4061 x$35$$35$a1Yf) (= lq_karg$36$xs$35$$35$a1Yg$35$$35$k_$35$$35$4061 xs$35$$35$a1Yg) (exists ((VV$35$$35$F$35$$35$122 Int)) (and (= VV$35$$35$F$35$$35$122 lq_anf$36$$35$$35$7205759403792805295$35$$35$d32D) (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$122) 0) (>= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$122) (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$122)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$122) 0) (= lq_karg$36$VV$35$$35$4060$35$$35$k_$35$$35$4061 VV$35$$35$F$35$$35$122) (= lq_karg$36$ds_d2Y7$35$$35$k_$35$$35$4061 ds_d2Y7) (= lq_karg$36$ds_d2Zq$35$$35$k_$35$$35$4061 ds_d2Zq) (= lq_karg$36$ds_d2Zr$35$$35$k_$35$$35$4061 ds_d2Zr) (= lq_karg$36$ds_d2Zs$35$$35$k_$35$$35$4061 ds_d2Zs) (= lq_karg$36$ds_d2Zt$35$$35$k_$35$$35$4061 ds_d2Zt) (= lq_karg$36$ds_d2Zu$35$$35$k_$35$$35$4061 ds_d2Zu) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d$35$$35$k_$35$$35$4061 lq_anf$36$$35$$35$7205759403792805269$35$$35$d32d) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f$35$$35$k_$35$$35$4061 lq_anf$36$$35$$35$7205759403792805271$35$$35$d32f) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g$35$$35$k_$35$$35$4061 lq_anf$36$$35$$35$7205759403792805272$35$$35$d32g) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s$35$$35$k_$35$$35$4061 lq_anf$36$$35$$35$7205759403792805284$35$$35$d32s) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t$35$$35$k_$35$$35$4061 lq_anf$36$$35$$35$7205759403792805285$35$$35$d32t) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805293$35$$35$d32B$35$$35$k_$35$$35$4061 lq_anf$36$$35$$35$7205759403792805293$35$$35$d32B) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805294$35$$35$d32C$35$$35$k_$35$$35$4061 lq_anf$36$$35$$35$7205759403792805294$35$$35$d32C) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805295$35$$35$d32D$35$$35$k_$35$$35$4061 lq_anf$36$$35$$35$7205759403792805295$35$$35$d32D) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805296$35$$35$d32E$35$$35$k_$35$$35$4061 lq_anf$36$$35$$35$7205759403792805296$35$$35$d32E) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F$35$$35$k_$35$$35$4061 lq_anf$36$$35$$35$7205759403792805297$35$$35$d32F) (= lq_karg$36$x$35$$35$a1Yb$35$$35$k_$35$$35$4061 x$35$$35$a1Yb) (= lq_karg$36$x$35$$35$a1Yf$35$$35$k_$35$$35$4061 x$35$$35$a1Yf) (= lq_karg$36$xs$35$$35$a1Yg$35$$35$k_$35$$35$4061 xs$35$$35$a1Yg))))) b$36$$35$$35$352 b$36$$35$$35$416 b$36$$35$$35$356 b$36$$35$$35$357 b$36$$35$$35$358 b$36$$35$$35$359 b$36$$35$$35$360 b$36$$35$$35$41 b$36$$35$$35$361 b$36$$35$$35$362 b$36$$35$$35$364 (and (>= (apply$35$$35$0 (as FibHeap.lsize Int) VV$35$$35$F$35$$35$127) (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$127)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$127) 0)) b$36$$35$$35$366 b$36$$35$$35$47 b$36$$35$$35$367 b$36$$35$$35$368 b$36$$35$$35$369 b$36$$35$$35$370 b$36$$35$$35$373 b$36$$35$$35$374 b$36$$35$$35$375 b$36$$35$$35$376 b$36$$35$$35$89 b$36$$35$$35$377 b$36$$35$$35$409 b$36$$35$$35$410 b$36$$35$$35$411 b$36$$35$$35$92 b$36$$35$$35$412 b$36$$35$$35$414 b$36$$35$$35$351 b$36$$35$$35$415))
(push 1)
(assert (not (> (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$127) 0)))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$194 b$36$$35$$35$195 b$36$$35$$35$196 b$36$$35$$35$197 b$36$$35$$35$198 b$36$$35$$35$200 b$36$$35$$35$41 b$36$$35$$35$169 b$36$$35$$35$170 b$36$$35$$35$171 b$36$$35$$35$172 b$36$$35$$35$173 b$36$$35$$35$877 b$36$$35$$35$47 b$36$$35$$35$175 b$36$$35$$35$177 b$36$$35$$35$178 b$36$$35$$35$179 b$36$$35$$35$180 b$36$$35$$35$182 b$36$$35$$35$184 b$36$$35$$35$89 b$36$$35$$35$185 b$36$$35$$35$186 b$36$$35$$35$92))
(push 1)
(assert (not (or (and (= (FibHeap.root VV$35$$35$F$35$$35$383) (FibHeap.root t1$35$$35$a1XH)) (<= (FibHeap.root t1$35$$35$a1XH) (FibHeap.root t2$35$$35$a1XL))) (and (= (FibHeap.root VV$35$$35$F$35$$35$383) (FibHeap.root t2$35$$35$a1XL)) (<= (FibHeap.root t2$35$$35$a1XL) (FibHeap.root t1$35$$35$a1XH))))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and true b$36$$35$$35$160 b$36$$35$$35$161 b$36$$35$$35$163 b$36$$35$$35$164 b$36$$35$$35$166 b$36$$35$$35$41 b$36$$35$$35$878 b$36$$35$$35$47 b$36$$35$$35$89 b$36$$35$$35$92))
(push 1)
(assert (not (= (FibHeap.trees VV$35$$35$F$35$$35$415) (as GHC.Types.$91$$93$ Int))))
(check-sat)
(pop 1)
; SMT Says: Unsat
(pop 1)
(pop 1)
(pop 1)
(exit)
