{"status":"safe","types":{"34":{"29":{"row":34,"col":29,"ident":"ys","ann":"{v : [a] | v == ys\n           && length v == len v\n           && pot v == len v\n           && len v >= 0}"},"16":{"row":34,"col":16,"ident":"return","ann":"{VV : forall a .\n      x1:a -> {v : (Language.Haskell.Liquid.RTick.Tick a) | 0 == tcost v\n                                                            && v == return x1\n                                                            && v == Tick 0 x1\n                                                            && x1 == tval v} | VV == return}"},"1":{"row":34,"col":1,"ident":"pop","ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> x2:{v : [a] | x1 <= len v} -> {t : (Language.Haskell.Liquid.RTick.Tick {ys : [a] | len ys == len x2 - x1}) | pot x2 + 2 >= tcost t + pot (tval t)}"},"7":{"row":34,"col":7,"ident":"ys","ann":"[a]"}},"24":{"1":{"row":24,"col":1,"ident":"pot","ann":"forall a .\nx1:[a] -> {VV : GHC.Types.Int | VV == len x1\n                                && VV == pot x1}"},"14":{"row":24,"col":14,"ident":"lq_anf$##7205759403792803255","ann":"{v : GHC.Prim.Int# | v == 0}"}},"29":{"6":{"row":29,"col":6,"ident":"ls","ann":"[a]"},"24":{"row":29,"col":24,"ident":"lq_anf$##7205759403792803259","ann":"{v : [a] | v == : a ls\n           && head v == a\n           && len v == 1 + len ls\n           && length v == 1 + length ls\n           && lqdc##$select v == a\n           && lqdc##$select v == ls\n           && pot v == 1 + pot ls\n           && tail v == ls}"},"1":{"row":29,"col":1,"ident":"push","ann":"forall a .\nx1:[a] -> a -> {t : (Language.Haskell.Liquid.RTick.Tick {ys : [a] | len ys == 1 + len x1}) | pot x1 + 2 >= tcost t + pot (tval t)}"},"25":{"row":29,"col":25,"ident":"a","ann":"{VV : a | VV == a}"},"9":{"row":29,"col":9,"ident":"a","ann":"a"},"27":{"row":29,"col":27,"ident":"ls","ann":"{v : [a] | v == ls\n           && length v == len v\n           && pot v == len v\n           && len v >= 0}"}},"19":{"17":{"row":19,"col":17,"ident":"lq_anf$##7205759403792803252","ann":"GHC.Types.Int"},"21":{"row":19,"col":21,"ident":"lq_anf$##7205759403792803253","ann":"{v : GHC.Types.Int | v == len xs\n                     && v == length xs}"},"28":{"row":19,"col":28,"ident":"xs","ann":"{v : [a] | v == xs\n           && pot v == len v\n           && len v >= 0}"}},"1":{"1":{"row":1,"col":1,"ident":"$trModule","ann":"GHC.Types.Module"}},"35":{"34":{"row":35,"col":34,"ident":"lq_anf$##7205759403792803268","ann":"GHC.Types.Int"},"40":{"row":35,"col":40,"ident":"xs","ann":"{v : [a] | v == xs\n           && length v == len v\n           && pot v == len v\n           && len v >= 0}"},"29":{"row":35,"col":29,"ident":"lq_anf$##7205759403792803269","ann":"{v : (Language.Haskell.Liquid.RTick.Tick [a]) | pot xs + 2 >= tcost v + pot (tval v)}"},"16":{"row":35,"col":16,"ident":"step","ann":"{VV : forall a .\n      x1:GHC.Types.Int -> x2:(Language.Haskell.Liquid.RTick.Tick a) -> {v : (Language.Haskell.Liquid.RTick.Tick a) | v == Tick (x1 + tcost x2) (tval x2)\n                                                                                                                     && v == step x1 x2\n                                                                                                                     && tval x2 == tval v\n                                                                                                                     && x1 + tcost x2 == tcost v} | VV == step}"},"35":{"row":35,"col":35,"ident":"ds_d2uM","ann":"{v : GHC.Types.Int | v >= 0}"},"37":{"row":35,"col":37,"ident":"lq_anf$##7205759403792803267","ann":"GHC.Types.Int"},"27":{"row":35,"col":27,"ident":"lq_anf$##7205759403792803265","ann":"GHC.Types.Int"}},"25":{"23":{"row":25,"col":23,"ident":"xs","ann":"{v : [a] | v == xs\n           && length v == len v\n           && len v >= 0}"},"14":{"row":25,"col":14,"ident":"lq_anf$##7205759403792803257","ann":"GHC.Types.Int"},"18":{"row":25,"col":18,"ident":"lq_anf$##7205759403792803258","ann":"{v : GHC.Types.Int | v == len xs\n                     && v == pot xs}"}},"18":{"17":{"row":18,"col":17,"ident":"lq_anf$##7205759403792803250","ann":"{v : GHC.Prim.Int# | v == 0}"},"1":{"row":18,"col":1,"ident":"length","ann":"forall a .\nx1:[a] -> {VV : GHC.Types.Int | VV == len x1\n                                && VV == length x1}"}}},"errors":[],"sptypes":[{"start":{"line":1,"column":1},"stop":{"line":1,"column":1},"ident":"$trModule","ann":"GHC.Types.Module"},{"start":{"line":18,"column":1},"stop":{"line":18,"column":7},"ident":"length","ann":"forall a .\nx1:[a] -> {VV : GHC.Types.Int | VV == len x1\n                                && VV == length x1}"},{"start":{"line":18,"column":17},"stop":{"line":18,"column":18},"ident":"lq_anf$##7205759403792803250","ann":"{v : GHC.Prim.Int# | v == 0}"},{"start":{"line":19,"column":17},"stop":{"line":19,"column":18},"ident":"lq_anf$##7205759403792803252","ann":"GHC.Types.Int"},{"start":{"line":19,"column":21},"stop":{"line":19,"column":30},"ident":"lq_anf$##7205759403792803253","ann":"{v : GHC.Types.Int | v == len xs\n                     && v == length xs}"},{"start":{"line":19,"column":28},"stop":{"line":19,"column":30},"ident":"xs","ann":"{v : [a] | v == xs\n           && pot v == len v\n           && len v >= 0}"},{"start":{"line":24,"column":1},"stop":{"line":24,"column":4},"ident":"pot","ann":"forall a .\nx1:[a] -> {VV : GHC.Types.Int | VV == len x1\n                                && VV == pot x1}"},{"start":{"line":24,"column":14},"stop":{"line":24,"column":15},"ident":"lq_anf$##7205759403792803255","ann":"{v : GHC.Prim.Int# | v == 0}"},{"start":{"line":25,"column":14},"stop":{"line":25,"column":15},"ident":"lq_anf$##7205759403792803257","ann":"GHC.Types.Int"},{"start":{"line":25,"column":18},"stop":{"line":25,"column":26},"ident":"lq_anf$##7205759403792803258","ann":"{v : GHC.Types.Int | v == len xs\n                     && v == pot xs}"},{"start":{"line":25,"column":23},"stop":{"line":25,"column":25},"ident":"xs","ann":"{v : [a] | v == xs\n           && length v == len v\n           && len v >= 0}"},{"start":{"line":29,"column":1},"stop":{"line":29,"column":5},"ident":"push","ann":"forall a .\nx1:[a] -> a -> {t : (Language.Haskell.Liquid.RTick.Tick {ys : [a] | len ys == 1 + len x1}) | pot x1 + 2 >= tcost t + pot (tval t)}"},{"start":{"line":29,"column":6},"stop":{"line":29,"column":8},"ident":"ls","ann":"[a]"},{"start":{"line":29,"column":9},"stop":{"line":29,"column":10},"ident":"a","ann":"a"},{"start":{"line":29,"column":24},"stop":{"line":29,"column":30},"ident":"lq_anf$##7205759403792803259","ann":"{v : [a] | v == : a ls\n           && head v == a\n           && len v == 1 + len ls\n           && length v == 1 + length ls\n           && lqdc##$select v == a\n           && lqdc##$select v == ls\n           && pot v == 1 + pot ls\n           && tail v == ls}"},{"start":{"line":29,"column":25},"stop":{"line":29,"column":26},"ident":"a","ann":"{VV : a | VV == a}"},{"start":{"line":29,"column":27},"stop":{"line":29,"column":29},"ident":"ls","ann":"{v : [a] | v == ls\n           && length v == len v\n           && pot v == len v\n           && len v >= 0}"},{"start":{"line":34,"column":1},"stop":{"line":34,"column":4},"ident":"pop","ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> x2:{v : [a] | x1 <= len v} -> {t : (Language.Haskell.Liquid.RTick.Tick {ys : [a] | len ys == len x2 - x1}) | pot x2 + 2 >= tcost t + pot (tval t)}"},{"start":{"line":34,"column":7},"stop":{"line":34,"column":9},"ident":"ys","ann":"[a]"},{"start":{"line":34,"column":16},"stop":{"line":34,"column":31},"ident":"return","ann":"{VV : forall a .\n      x1:a -> {v : (Language.Haskell.Liquid.RTick.Tick a) | 0 == tcost v\n                                                            && v == return x1\n                                                            && v == Tick 0 x1\n                                                            && x1 == tval v} | VV == return}"},{"start":{"line":34,"column":29},"stop":{"line":34,"column":31},"ident":"ys","ann":"{v : [a] | v == ys\n           && length v == len v\n           && pot v == len v\n           && len v >= 0}"},{"start":{"line":35,"column":16},"stop":{"line":35,"column":43},"ident":"step","ann":"{VV : forall a .\n      x1:GHC.Types.Int -> x2:(Language.Haskell.Liquid.RTick.Tick a) -> {v : (Language.Haskell.Liquid.RTick.Tick a) | v == Tick (x1 + tcost x2) (tval x2)\n                                                                                                                     && v == step x1 x2\n                                                                                                                     && tval x2 == tval v\n                                                                                                                     && x1 + tcost x2 == tcost v} | VV == step}"},{"start":{"line":35,"column":27},"stop":{"line":35,"column":28},"ident":"lq_anf$##7205759403792803265","ann":"GHC.Types.Int"},{"start":{"line":35,"column":29},"stop":{"line":35,"column":43},"ident":"lq_anf$##7205759403792803269","ann":"{v : (Language.Haskell.Liquid.RTick.Tick [a]) | pot xs + 2 >= tcost v + pot (tval v)}"},{"start":{"line":35,"column":34},"stop":{"line":35,"column":39},"ident":"lq_anf$##7205759403792803268","ann":"GHC.Types.Int"},{"start":{"line":35,"column":35},"stop":{"line":35,"column":36},"ident":"ds_d2uM","ann":"{v : GHC.Types.Int | v >= 0}"},{"start":{"line":35,"column":37},"stop":{"line":35,"column":38},"ident":"lq_anf$##7205759403792803267","ann":"GHC.Types.Int"},{"start":{"line":35,"column":40},"stop":{"line":35,"column":42},"ident":"xs","ann":"{v : [a] | v == xs\n           && length v == len v\n           && pot v == len v\n           && len v >= 0}"}]}