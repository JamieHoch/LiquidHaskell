{"o_vars":null,"o_types":[[{"spanInfo":{"endLine":53,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":13,"startLine":53,"startCol":1},"realSpan":true},[[null,"{VV : forall a .\n      {v : (FibHeap.FibHeap a) | isEmptyFibHeap v\n                                 && not (notEmptyFibHeap v)\n                                 && v == E} | VV == E}"]]],[{"spanInfo":{"endLine":64,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":27,"startLine":64,"startCol":20},"realSpan":true},[["lq_anf$##7205759403792805223","GHC.Types.Int"]]],[{"spanInfo":{"endLine":42,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":25,"startLine":41,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792805202","{v : (FibHeap.FibHeap a) | (isEmptyFibHeap v\n                            && not (notEmptyFibHeap v))\n                           || (notEmptyFibHeap v\n                               && not (isEmptyFibHeap v))\n                           && 0 < fibsize v}"]]],[{"spanInfo":{"endLine":73,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":44,"startLine":73,"startCol":38},"realSpan":true},[["minTr1","{v : (FibHeap.FibTree a) | v == minTr1\n                           && size v == pow2 (rank v)\n                           && 0 < size v}"]]],[{"spanInfo":{"endLine":1,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":1,"startLine":1,"startCol":1},"realSpan":true},[["FibHeap.$trModule","GHC.Types.Module"]]],[{"spanInfo":{"endLine":87,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":39,"startLine":87,"startCol":37},"realSpan":true},[["ds_d2XC","{v : [(FibHeap.FibTree a)] | len v >= 0\n                             && lsize v >= len v}"]]],[{"spanInfo":{"endLine":79,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":35,"startLine":79,"startCol":1},"realSpan":true},[["$dOrd_a25N","{v : (GHC.Classes.Ord a) | v == $dOrd_a25N}"]]],[{"spanInfo":{"endLine":79,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":34,"startLine":79,"startCol":33},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"endLine":135,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":29,"startLine":135,"startCol":28},"realSpan":true},[["r","{v : GHC.Types.Int | v == r\n                     && v >= 0}"]]],[{"spanInfo":{"endLine":124,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":33,"startLine":124,"startCol":25},"realSpan":true},[["lq_anf$##7205759403792805313","{v : GHC.Types.Int | v == lsize ts\n                     && v >= len ts}"]]],[{"spanInfo":{"endLine":79,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":9,"startLine":79,"startCol":8},"realSpan":true},[["h","(FibHeap.FibHeap a)"]]],[{"spanInfo":{"endLine":111,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":12,"startLine":111,"startCol":10},"realSpan":true},[["xs","[a]"]]],[{"spanInfo":{"endLine":65,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":42,"startLine":65,"startCol":34},"realSpan":true},[["lq_anf$##7205759403792805220","{v : [(FibHeap.FibTree a)] | len v == 1 + len ts2\n                             && lqdc##$select v == ts2\n                             && tail v == ts2}"]]],[{"spanInfo":{"endLine":106,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":17,"startLine":106,"startCol":14},"realSpan":true},[["ts'","[(FibHeap.FibTree a)]"]]],[{"spanInfo":{"endLine":107,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":68,"startLine":107,"startCol":65},"realSpan":true},[["ts'","{v : [(FibHeap.FibTree a)] | v == ts'\n                             && len v >= 0\n                             && lsize v >= len v}"]]],[{"spanInfo":{"endLine":73,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":62,"startLine":73,"startCol":45},"realSpan":true},[["lq_anf$##7205759403792805252","{v : [(FibHeap.FibTree a)] | head v == minTr2\n                             && lqdc##$select v == minTr2}"]]],[{"spanInfo":{"endLine":65,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":48,"startLine":63,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792805216","{v : GHC.Types.Bool | v <=> x < y}"]]],[{"spanInfo":{"endLine":111,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":32,"startLine":111,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792805255","{v : (FibHeap.FibHeap a) | isEmptyFibHeap v\n                           && not (notEmptyFibHeap v)\n                           && v == E}"]]],[{"spanInfo":{"endLine":65,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":26,"startLine":65,"startCol":25},"realSpan":true},[["r","{v : GHC.Types.Int | v == r\n                     && v >= 0}"]]],[{"spanInfo":{"endLine":105,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":49,"startLine":105,"startCol":36},"realSpan":true},[["FibHeap.FH","{VV : forall a .\n      x1:(FibHeap.FibTree a) -> x2:[(FibHeap.FibTree a)] -> {v : (FibHeap.FibHeap a) | notEmptyFibHeap v\n                                                                                       && not (isEmptyFibHeap v)\n                                                                                       && v == FH x1 x2\n                                                                                       && fibsize v == size x1 + lsize x2\n                                                                                       && minTree v == x1\n                                                                                       && trees v == x2} | VV == FH}"]]],[{"spanInfo":{"endLine":53,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":9,"startLine":53,"startCol":1},"realSpan":true},[["FibHeap.makeHeap","forall a . {VV : (FibHeap.FibHeap a) | not (notEmptyFibHeap VV)}"]]],[{"spanInfo":{"endLine":111,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":27,"startLine":111,"startCol":21},"realSpan":true},[["lq_anf$##7205759403792805254","x1:(FibHeap.FibHeap a) -> x2:a -> {v : (FibHeap.FibHeap a) | notEmptyFibHeap v\n                                                             && (root (minTree v) == root (minTree x1)\n                                                                 && root (minTree x1) <= x2)\n                                                                || ((x2 <= root (minTree x1)\n                                                                     || not (notEmptyFibHeap x1))\n                                                                    && root (minTree v) == x2)}"]]],[{"spanInfo":{"endLine":90,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":19,"startLine":90,"startCol":18},"realSpan":true},[["x","{v : (FibHeap.FibTree a) | v == x\n                           && size v == pow2 (rank v)\n                           && 0 < size v}"]]],[{"spanInfo":{"endLine":129,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":5,"startLine":129,"startCol":1},"realSpan":true},[["FibHeap.pow2","{VV : GHC.Types.Int | VV >= 0} -> {VV : GHC.Types.Int | 0 < VV}"]]],[{"spanInfo":{"endLine":92,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":34,"startLine":92,"startCol":27},"realSpan":true},[["GHC.Types.:","{VV : forall a <p :: a a -> Bool>.\n      x1:a -> x2:[{VV : a<p x1> | true}]<\\x7 VV -> {VV : a<p x7> | true}> -> {v : [a]<\\x7 VV -> {VV : a<p x7> | true}> | v == : x1 x2\n                                                                                                                         && head v == x1\n                                                                                                                         && len v == 1 + len x2\n                                                                                                                         && lqdc##$select v == x1\n                                                                                                                         && lqdc##$select v == x2\n                                                                                                                         && lsize v == size x1 + lsize x2\n                                                                                                                         && tail v == x2} | VV == :}"]]],[{"spanInfo":{"endLine":130,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":24,"startLine":130,"startCol":19},"realSpan":true},[["lq_anf$##7205759403792805306","GHC.Types.Int"]]],[{"spanInfo":{"endLine":79,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":7,"startLine":79,"startCol":1},"realSpan":true},[["FibHeap.insert","forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(FibHeap.FibHeap a) -> x3:a -> {VV : (FibHeap.FibHeap a) | notEmptyFibHeap VV\n                                                              && (root (minTree VV) == root (minTree x2)\n                                                                  && root (minTree x2) <= x3)\n                                                                 || ((x3 <= root (minTree x2)\n                                                                      || not (notEmptyFibHeap x2))\n                                                                     && root (minTree VV) == x3)}"]]],[{"spanInfo":{"endLine":59,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":25,"startLine":59,"startCol":24},"realSpan":true},[["lq_anf$##7205759403792805209","GHC.Types.Int"]]],[{"spanInfo":{"endLine":74,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":46,"startLine":71,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792805248","GHC.Types.Bool"]]],[{"spanInfo":{"endLine":79,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":11,"startLine":79,"startCol":10},"realSpan":true},[["x","a"]]],[{"spanInfo":{"endLine":91,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":42,"startLine":91,"startCol":25},"realSpan":true},[["lq_anf$##7205759403792805232","GHC.Types.Bool"]]],[{"spanInfo":{"endLine":91,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":42,"startLine":91,"startCol":40},"realSpan":true},[["x'","{v : (FibHeap.FibTree a) | v == x'\n                           && size v == pow2 (rank v)\n                           && 0 < size v}"]]],[{"spanInfo":{"endLine":108,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":52,"startLine":108,"startCol":47},"realSpan":true},[["lq_anf$##7205759403792805275","{v : [(FibHeap.FibTree a)] | v == subtr\n                             && v == : x xs\n                             && head v == x\n                             && len v == 1 + len xs\n                             && lqdc##$select v == x\n                             && lqdc##$select v == xs\n                             && lsize v == size x + lsize xs\n                             && tail v == xs\n                             && len v >= 0\n                             && lsize v >= len v}"]]],[{"spanInfo":{"endLine":64,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":26,"startLine":64,"startCol":25},"realSpan":true},[["lq_anf$##7205759403792805222","GHC.Types.Int"]]],[{"spanInfo":{"endLine":82,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":25,"startLine":82,"startCol":18},"realSpan":true},[[null,"{VV : forall a .\n      x1:(FibHeap.FibHeap a) -> {v : (FibHeap.FibTree a) | v == minTree x1} | VV == minTree}"]]],[{"spanInfo":{"endLine":91,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":66,"startLine":91,"startCol":64},"realSpan":true},[["x'","{v : (FibHeap.FibTree a) | v == x'\n                           && size v == pow2 (rank v)\n                           && 0 < size v}"]]],[{"spanInfo":{"endLine":106,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":12,"startLine":106,"startCol":6},"realSpan":true},[["minTr'","(FibHeap.FibTree a)"]]],[{"spanInfo":{"endLine":74,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":36,"startLine":74,"startCol":30},"realSpan":true},[["minTr1","{v : (FibHeap.FibTree a) | v == minTr1\n                           && size v == pow2 (rank v)\n                           && 0 < size v}"]]],[{"spanInfo":{"endLine":98,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":34,"startLine":98,"startCol":32},"realSpan":true},[["ds_d2V4","{v : [(FibHeap.FibTree a)] | len v >= 0\n                             && lsize v >= len v}"]]],[{"spanInfo":{"endLine":74,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":28,"startLine":74,"startCol":22},"realSpan":true},[["minTr2","{v : (FibHeap.FibTree a) | v == minTr2\n                           && size v == pow2 (rank v)\n                           && 0 < size v}"]]],[{"spanInfo":{"endLine":90,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":9,"startLine":90,"startCol":5},"realSpan":true},[["meld","forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[(FibHeap.FibTree a)] -> (FibHeap.FibTree a) -> {v : [(FibHeap.FibTree a)] | len v > 0\n                                                                                && len v <= len x2 + 1}"]]],[{"spanInfo":{"endLine":108,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":59,"startLine":104,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792805276","{v : GHC.Prim.Addr# | v == \"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs:(104,1)-(108,58)|function deleteMin\"}"]]],[{"spanInfo":{"endLine":73,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":32,"startLine":73,"startCol":26},"realSpan":true},[["minTr2","{v : (FibHeap.FibTree a) | v == minTr2\n                           && size v == pow2 (rank v)\n                           && 0 < size v}"]]],[{"spanInfo":{"endLine":73,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":61,"startLine":73,"startCol":53},"realSpan":true},[["lq_anf$##7205759403792805251","{v : [(FibHeap.FibTree a)] | len v == len ts2 + len ts1}"]]],[{"spanInfo":{"endLine":106,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":61,"startLine":106,"startCol":56},"realSpan":true},[["ds_d2Zq","{v : (FibHeap.FibTree a) | size v == pow2 (rank v)\n                           && 0 < size v}"]]],[{"spanInfo":{"endLine":91,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":63,"startLine":91,"startCol":62},"realSpan":true},[["x","{v : (FibHeap.FibTree a) | v == x\n                           && size v == pow2 (rank v)\n                           && 0 < size v}"]]],[{"spanInfo":{"endLine":41,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":16,"startLine":41,"startCol":1},"realSpan":true},[["FibHeap.notEmptyFibHeap","forall a .\nx1:(FibHeap.FibHeap a) -> {VV : GHC.Types.Bool | VV <=> notEmptyFibHeap x1}"]]],[{"spanInfo":{"endLine":106,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":67,"startLine":106,"startCol":65},"realSpan":true},[["ds_d2Zr","{v : [(FibHeap.FibTree a)] | len v >= 0\n                             && lsize v >= len v}"]]],[{"spanInfo":{"endLine":91,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":31,"startLine":91,"startCol":30},"realSpan":true},[["x","{v : (FibHeap.FibTree a) | v == x\n                           && size v == pow2 (rank v)\n                           && 0 < size v}"]]],[{"spanInfo":{"endLine":59,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":12,"startLine":59,"startCol":11},"realSpan":true},[["x","a"]]],[{"spanInfo":{"endLine":111,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":9,"startLine":111,"startCol":1},"realSpan":true},[["FibHeap.fromList","forall a . (GHC.Classes.Ord<[]> a) => [a] -> (FibHeap.FibHeap a)"]]],[{"spanInfo":{"endLine":108,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":59,"startLine":108,"startCol":34},"realSpan":true},[["lq_anf$##7205759403792805279","{v : [(FibHeap.FibTree a)] | len v > 0}"]]],[{"spanInfo":{"endLine":106,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":68,"startLine":106,"startCol":21},"realSpan":true},[[null,"((FibHeap.FibTree a), [(FibHeap.FibTree a)])"]]],[{"spanInfo":{"endLine":124,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":33,"startLine":124,"startCol":16},"realSpan":true},[["GHC.Num.$fNumInt","{v : (GHC.Num.Num GHC.Types.Int) | v == $fNumInt}"]]],[{"spanInfo":{"endLine":64,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":44,"startLine":64,"startCol":15},"realSpan":true},[["FibHeap.Node","{VV : forall a .\n      x1:{v : GHC.Types.Int | v >= 0} -> x2:a -> x3:[(FibHeap.FibTree a)] -> x4:GHC.Types.Bool -> {v : (FibHeap.FibTree a) | v == Node x1 x2 x3 x4\n                                                                                                                             && marked v == x4\n                                                                                                                             && rank v == x1\n                                                                                                                             && root v == x2\n                                                                                                                             && size v == pow2 x1\n                                                                                                                             && subtrees v == x3} | VV == Node}"]]],[{"spanInfo":{"endLine":82,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":8,"startLine":82,"startCol":1},"realSpan":true},[["FibHeap.findMin","forall a . (GHC.Classes.Ord<[]> a) => (FibHeap.FibHeap a) -> a"]]],[{"spanInfo":{"endLine":111,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":32,"startLine":111,"startCol":30},"realSpan":true},[["xs","{v : [a] | v == xs\n           && len v >= 0\n           && lsize v >= len v}"]]],[{"spanInfo":{"endLine":108,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":31,"startLine":108,"startCol":21},"realSpan":true},[["lq_anf$##7205759403792805277","{v : [(FibHeap.FibTree a)] | len v > 0} -> ((FibHeap.FibTree a), [(FibHeap.FibTree a)])"]]],[{"spanInfo":{"endLine":99,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":41,"startLine":99,"startCol":34},"realSpan":true},[["GHC.Tuple.(,)","{VV : forall a b <p2 :: a b -> Bool>.\n      x1:a -> x2:{VV : b<p2 x1> | true} -> {v : (a, b)<\\x5 VV -> {VV : b<p2 x5> | true}> | v == (,) x1 x2\n                                                                                           && fst v == x1\n                                                                                           && lqdc##$select v == x1\n                                                                                           && lqdc##$select v == x2\n                                                                                           && snd v == x2\n                                                                                           && x_Tuple21 v == x1\n                                                                                           && x_Tuple22 v == x2} | VV == (,)}"]]],[{"spanInfo":{"endLine":118,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":46,"startLine":118,"startCol":44},"realSpan":true},[["ts","{v : [(FibHeap.FibTree a)] | v == ts\n                             && len v >= 0\n                             && lsize v >= len v}"]]],[{"spanInfo":{"endLine":91,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":55,"startLine":91,"startCol":53},"realSpan":true},[["xs","{v : [(FibHeap.FibTree a)] | v == xs\n                             && len v >= 0\n                             && lsize v >= len v}"]]],[{"spanInfo":{"endLine":118,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":35,"startLine":118,"startCol":30},"realSpan":true},[["minTr","{v : (FibHeap.FibTree a) | v == minTr\n                           && size v == pow2 (rank v)\n                           && 0 < size v}"]]],[{"spanInfo":{"endLine":92,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":34,"startLine":90,"startCol":5},"realSpan":true},[["lq_anf$##7205759403792805228","{v : [(FibHeap.FibTree a)] | len v >= 0\n                             && lsize v >= len v}"]]],[{"spanInfo":{"endLine":87,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":32,"startLine":87,"startCol":28},"realSpan":true},[["lq_anf$##7205759403792805236","x1:[(FibHeap.FibTree a)] -> (FibHeap.FibTree a) -> {v : [(FibHeap.FibTree a)] | len v > 0\n                                                                                && len v <= len x1 + 1}"]]],[{"spanInfo":{"endLine":47,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":15,"startLine":47,"startCol":1},"realSpan":true},[["FibHeap.isEmptyFibHeap","forall a .\nx1:(FibHeap.FibHeap a) -> {VV : GHC.Types.Bool | (VV\n                                                  && not (notEmptyFibHeap x1))\n                                                 || (notEmptyFibHeap x1\n                                                     && not VV)\n                                                 && (VV <=> isEmptyFibHeap x1)}"]]],[{"spanInfo":{"endLine":92,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":34,"startLine":91,"startCol":22},"realSpan":true},[["lq_anf$##7205759403792805233","GHC.Types.Bool"]]],[{"spanInfo":{"endLine":73,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":62,"startLine":73,"startCol":35},"realSpan":true},[["FibHeap.FH","{VV : forall a .\n      x1:(FibHeap.FibTree a) -> x2:[(FibHeap.FibTree a)] -> {v : (FibHeap.FibHeap a) | notEmptyFibHeap v\n                                                                                       && not (isEmptyFibHeap v)\n                                                                                       && v == FH x1 x2\n                                                                                       && fibsize v == size x1 + lsize x2\n                                                                                       && minTree v == x1\n                                                                                       && trees v == x2} | VV == FH}"]]],[{"spanInfo":{"endLine":123,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":13,"startLine":123,"startCol":12},"realSpan":true},[["lq_anf$##7205759403792805311","{v : GHC.Prim.Int# | v == 0}"]]],[{"spanInfo":{"endLine":71,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":6,"startLine":71,"startCol":1},"realSpan":true},[["FibHeap.merge","forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(FibHeap.FibHeap a) -> x3:{VV : (FibHeap.FibHeap a) | notEmptyFibHeap VV} -> {VV : (FibHeap.FibHeap a) | notEmptyFibHeap VV\n                                                                                                            && (root (minTree VV) == root (minTree x2)\n                                                                                                                && root (minTree x2) < root (minTree x3))\n                                                                                                               || ((root (minTree x3) <= root (minTree x2)\n                                                                                                                    || not (notEmptyFibHeap x2))\n                                                                                                                   && root (minTree VV) == root (minTree x3))}"]]],[{"spanInfo":{"endLine":73,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":18,"startLine":73,"startCol":7},"realSpan":true},[["lq_anf$##7205759403792805245","{VV : a | VV == root minTr1}"]]],[{"spanInfo":{"endLine":73,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":56,"startLine":73,"startCol":53},"realSpan":true},[["ts2","{v : [(FibHeap.FibTree a)] | v == ts2\n                             && len v >= 0\n                             && lsize v >= len v}"]]],[{"spanInfo":{"endLine":87,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":35,"startLine":87,"startCol":34},"realSpan":true},[["x","{v : (FibHeap.FibTree a) | v == x\n                           && size v == pow2 (rank v)\n                           && 0 < size v}"]]],[{"spanInfo":{"endLine":59,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":36,"startLine":59,"startCol":31},"realSpan":true},[["GHC.Types.False","{v : GHC.Types.Bool | not v\n                      && v == False}"]]],[{"spanInfo":{"endLine":99,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":18,"startLine":99,"startCol":17},"realSpan":true},[["t","{v : (FibHeap.FibTree a) | v == t\n                           && size v == pow2 (rank v)\n                           && 0 < size v}"]]],[{"spanInfo":{"endLine":87,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":39,"startLine":87,"startCol":22},"realSpan":true},[["Data.Foldable.$fFoldable[]","{v : (Data.Foldable.Foldable []) | v == $fFoldable[]}"]]],[{"spanInfo":{"endLine":92,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":34,"startLine":92,"startCol":29},"realSpan":true},[["lq_anf$##7205759403792805234","{v : [(FibHeap.FibTree a)] | v == : x' xs\n                             && head v == x'\n                             && len v == 1 + len xs\n                             && lqdc##$select v == x'\n                             && lqdc##$select v == xs\n                             && lsize v == size x' + lsize xs\n                             && tail v == xs}"]]],[{"spanInfo":{"endLine":59,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":30,"startLine":59,"startCol":28},"realSpan":true},[[null,"{VV : forall a <p :: a a -> Bool>.\n      {v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | v == []\n                                                  && len v == 0\n                                                  && lsize v == 0} | VV == []}"]]],[{"spanInfo":{"endLine":135,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":5,"startLine":135,"startCol":1},"realSpan":true},[["FibHeap.size","forall a .\nx1:(FibHeap.FibTree a) -> {VV : GHC.Types.Int | VV == pow2 (rank x1)\n                                                && VV == size x1\n                                                && 0 < VV}"]]],[{"spanInfo":{"endLine":96,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":20,"startLine":96,"startCol":19},"realSpan":true},[["t","{v : (FibHeap.FibTree a) | v == t\n                           && size v == pow2 (rank v)\n                           && 0 < size v}"]]],[{"spanInfo":{"endLine":104,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":39,"startLine":104,"startCol":38},"realSpan":true},[[null,"{VV : forall a .\n      {v : (FibHeap.FibHeap a) | isEmptyFibHeap v\n                                 && not (notEmptyFibHeap v)\n                                 && v == E} | VV == E}"]]],[{"spanInfo":{"endLine":41,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":26,"startLine":41,"startCol":21},"realSpan":true},[["GHC.Types.False","{v : GHC.Types.Bool | not v\n                      && v == False}"]]],[{"spanInfo":{"endLine":99,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":28,"startLine":99,"startCol":21},"realSpan":true},[["lq_anf$##7205759403792805262","{VV : a | VV == root t'}"]]],[{"spanInfo":{"endLine":108,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":59,"startLine":108,"startCol":21},"realSpan":true},[[null,"((FibHeap.FibTree a), [(FibHeap.FibTree a)])"]]],[{"spanInfo":{"endLine":96,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":11,"startLine":96,"startCol":1},"realSpan":true},[["FibHeap.extractMin","forall a .\n(GHC.Classes.Ord<[]> a) =>\n{t : [(FibHeap.FibTree a)] | len t > 0} -> ((FibHeap.FibTree a), [(FibHeap.FibTree a)])"]]],[{"spanInfo":{"endLine":130,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":24,"startLine":130,"startCol":10},"realSpan":true},[["GHC.Num.$fNumInt","{v : (GHC.Num.Num GHC.Types.Int) | v == $fNumInt}"]]],[{"spanInfo":{"endLine":64,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":38,"startLine":64,"startCol":30},"realSpan":true},[["lq_anf$##7205759403792805224","{v : [(FibHeap.FibTree a)] | len v == 1 + len ts1\n                             && lqdc##$select v == ts1\n                             && tail v == ts1}"]]],[{"spanInfo":{"endLine":65,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":33,"startLine":65,"startCol":32},"realSpan":true},[["y","{VV : a | VV == y}"]]],[{"spanInfo":{"endLine":135,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":29,"startLine":135,"startCol":23},"realSpan":true},[["FibHeap.pow2","x1:{v : GHC.Types.Int | v >= 0} -> {v : GHC.Types.Int | v == pow2 x1\n                                                        && v == (if 0 == x1 then 1 else 2 * pow2 (x1 - 1))\n                                                        && 0 < v}"]]],[{"spanInfo":{"endLine":118,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":46,"startLine":118,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792805315","{v : GHC.Prim.Addr# | v == \"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs:118:1-45|function fibsize\"}"]]],[{"spanInfo":{"endLine":91,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":31,"startLine":91,"startCol":25},"realSpan":true},[["lq_anf$##7205759403792805230","{v : GHC.Types.Int | v == rank x\n                     && v >= 0}"]]],[{"spanInfo":{"endLine":73,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":52,"startLine":73,"startCol":46},"realSpan":true},[["minTr2","{v : (FibHeap.FibTree a) | v == minTr2\n                           && size v == pow2 (rank v)\n                           && 0 < size v}"]]],[{"spanInfo":{"endLine":79,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":35,"startLine":79,"startCol":22},"realSpan":true},[["lq_anf$##7205759403792805253","{v : (FibHeap.FibHeap a) | notEmptyFibHeap v\n                           && rank (minTree v) == 1\n                           && root (minTree v) == x\n                           && subtrees (minTree v) == []\n                           && trees v == []}"]]],[{"spanInfo":{"endLine":106,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":31,"startLine":106,"startCol":21},"realSpan":true},[["lq_anf$##7205759403792805280","{v : [(FibHeap.FibTree a)] | len v > 0} -> ((FibHeap.FibTree a), [(FibHeap.FibTree a)])"]]],[{"spanInfo":{"endLine":71,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":14,"startLine":71,"startCol":13},"realSpan":true},[["h","{v : (FibHeap.FibHeap a) | notEmptyFibHeap v\n                           && (isEmptyFibHeap v\n                               && not (notEmptyFibHeap v))\n                              || (notEmptyFibHeap v\n                                  && not (isEmptyFibHeap v))\n                           && v == h\n                           && 0 < fibsize v}"]]],[{"spanInfo":{"endLine":108,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":12,"startLine":108,"startCol":6},"realSpan":true},[["minTr'","(FibHeap.FibTree a)"]]],[{"spanInfo":{"endLine":123,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":6,"startLine":123,"startCol":1},"realSpan":true},[["FibHeap.lsize","forall a .\nx1:[(FibHeap.FibTree a)] -> {VV : GHC.Types.Int | VV == lsize x1\n                                                  && VV >= len x1}"]]],[{"spanInfo":{"endLine":99,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":36,"startLine":99,"startCol":35},"realSpan":true},[["t","{v : (FibHeap.FibTree a) | v == t\n                           && size v == pow2 (rank v)\n                           && 0 < size v}"]]],[{"spanInfo":{"endLine":124,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":22,"startLine":124,"startCol":21},"realSpan":true},[["t","{v : (FibHeap.FibTree a) | v == t\n                           && size v == pow2 (rank v)\n                           && 0 < size v}"]]],[{"spanInfo":{"endLine":48,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":25,"startLine":48,"startCol":20},"realSpan":true},[["GHC.Types.False","{v : GHC.Types.Bool | not v\n                      && v == False}"]]],[{"spanInfo":{"endLine":64,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":12,"startLine":64,"startCol":7},"realSpan":true},[["lq_anf$##7205759403792805215","{v : GHC.Types.Bool | v <=> x < y}"]]],[{"spanInfo":{"endLine":107,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":64,"startLine":107,"startCol":58},"realSpan":true},[["minTr'","{v : (FibHeap.FibTree a) | v == minTr'\n                           && size v == pow2 (rank v)\n                           && 0 < size v}"]]],[{"spanInfo":{"endLine":105,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":45,"startLine":105,"startCol":39},"realSpan":true},[["minTr'","{v : (FibHeap.FibTree a) | v == minTr'\n                           && size v == pow2 (rank v)\n                           && 0 < size v}"]]],[{"spanInfo":{"endLine":64,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":44,"startLine":64,"startCol":39},"realSpan":true},[["GHC.Types.False","{v : GHC.Types.Bool | not v\n                      && v == False}"]]],[{"spanInfo":{"endLine":86,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":12,"startLine":86,"startCol":1},"realSpan":true},[["FibHeap.consolidate","forall a .\n(GHC.Classes.Ord<[]> a) =>\n{t : [(FibHeap.FibTree a)] | len t > 0} -> {v : [(FibHeap.FibTree a)] | len v > 0}"]]],[{"spanInfo":{"endLine":74,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":45,"startLine":74,"startCol":42},"realSpan":true},[["ts2","{v : [(FibHeap.FibTree a)] | v == ts2\n                             && len v >= 0\n                             && lsize v >= len v}"]]],[{"spanInfo":{"endLine":63,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":28,"startLine":63,"startCol":26},"realSpan":true},[["t2","{t2 : (FibHeap.FibTree a) | rank t1 == rank t2}"]]],[{"spanInfo":{"endLine":130,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":24,"startLine":130,"startCol":14},"realSpan":true},[["lq_anf$##7205759403792805307","{VV : GHC.Types.Int | 0 < VV}"]]],[{"spanInfo":{"endLine":65,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":48,"startLine":65,"startCol":43},"realSpan":true},[["GHC.Types.False","{v : GHC.Types.Bool | not v\n                      && v == False}"]]],[{"spanInfo":{"endLine":92,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":31,"startLine":92,"startCol":29},"realSpan":true},[["x'","{v : (FibHeap.FibTree a) | v == x'\n                           && size v == pow2 (rank v)\n                           && 0 < size v}"]]],[{"spanInfo":{"endLine":106,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":68,"startLine":106,"startCol":34},"realSpan":true},[["lq_anf$##7205759403792805283","{v : [(FibHeap.FibTree a)] | len v > 0}"]]],[{"spanInfo":{"endLine":124,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":33,"startLine":124,"startCol":31},"realSpan":true},[["ts","{v : [(FibHeap.FibTree a)] | v == ts\n                             && len v >= 0}"]]],[{"spanInfo":{"endLine":74,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":45,"startLine":74,"startCol":37},"realSpan":true},[["lq_anf$##7205759403792805249","{v : [(FibHeap.FibTree a)] | len v == len ts1 + len ts2}"]]],[{"spanInfo":{"endLine":47,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":24,"startLine":47,"startCol":20},"realSpan":true},[["GHC.Types.True","{v : GHC.Types.Bool | v\n                      && v == True}"]]],[{"spanInfo":{"endLine":96,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":25,"startLine":96,"startCol":18},"realSpan":true},[["lq_anf$##7205759403792805266","{v : [(FibHeap.FibTree a)] | v == []\n                             && len v == 0\n                             && lsize v == 0}"]]],[{"spanInfo":{"endLine":108,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":17,"startLine":108,"startCol":14},"realSpan":true},[["ts'","[(FibHeap.FibTree a)]"]]],[{"spanInfo":{"endLine":130,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":23,"startLine":130,"startCol":22},"realSpan":true},[["lq_anf$##7205759403792805305","GHC.Types.Int"]]],[{"spanInfo":{"endLine":98,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":34,"startLine":98,"startCol":21},"realSpan":true},[["FibHeap.extractMin","forall a .\n(GHC.Classes.Ord<[]> a) =>\n{t : [(FibHeap.FibTree a)] | len t > 0} -> ((FibHeap.FibTree a), [(FibHeap.FibTree a)])"]]],[{"spanInfo":{"endLine":99,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":28,"startLine":99,"startCol":12},"realSpan":true},[["lq_anf$##7205759403792805263","GHC.Types.Bool"]]],[{"spanInfo":{"endLine":73,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":61,"startLine":73,"startCol":58},"realSpan":true},[["ts1","{v : [(FibHeap.FibTree a)] | v == ts1\n                             && len v >= 0\n                             && lsize v >= len v}"]]],[{"spanInfo":{"endLine":73,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":32,"startLine":73,"startCol":21},"realSpan":true},[["lq_anf$##7205759403792805246","{VV : a | VV == root minTr2}"]]],[{"spanInfo":{"endLine":118,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":35,"startLine":118,"startCol":25},"realSpan":true},[["lq_anf$##7205759403792805316","{v : GHC.Types.Int | v == pow2 (rank minTr)\n                     && v == size minTr\n                     && 0 < v}"]]],[{"spanInfo":{"endLine":99,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":53,"startLine":99,"startCol":52},"realSpan":true},[["t","{v : (FibHeap.FibTree a) | v == t\n                           && size v == pow2 (rank v)\n                           && 0 < size v}"]]],[{"spanInfo":{"endLine":107,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":68,"startLine":107,"startCol":55},"realSpan":true},[["FibHeap.FH","{VV : forall a .\n      x1:(FibHeap.FibTree a) -> x2:[(FibHeap.FibTree a)] -> {v : (FibHeap.FibHeap a) | notEmptyFibHeap v\n                                                                                       && not (isEmptyFibHeap v)\n                                                                                       && v == FH x1 x2\n                                                                                       && fibsize v == size x1 + lsize x2\n                                                                                       && minTree v == x1\n                                                                                       && trees v == x2} | VV == FH}"]]],[{"spanInfo":{"endLine":105,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":49,"startLine":105,"startCol":46},"realSpan":true},[["ts'","{v : [(FibHeap.FibTree a)] | v == ts'\n                             && len v >= 0\n                             && lsize v >= len v}"]]],[{"spanInfo":{"endLine":64,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":8,"startLine":64,"startCol":7},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"endLine":63,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":5,"startLine":63,"startCol":1},"realSpan":true},[["FibHeap.link","forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:(FibHeap.FibTree a) -> x3:{t2 : (FibHeap.FibTree a) | rank x2 == rank t2} -> {v : (FibHeap.FibTree a) | (root v == root x2\n                                                                                                            && root x2 <= root x3)\n                                                                                                           || (root v == root x3\n                                                                                                               && root x3 <= root x2)\n                                                                                                           && rank v == 1 + rank x2}"]]],[{"spanInfo":{"endLine":59,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":40,"startLine":59,"startCol":38},"realSpan":true},[[null,"{VV : forall a <p :: a a -> Bool>.\n      {v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | v == []\n                                                  && len v == 0\n                                                  && lsize v == 0} | VV == []}"]]],[{"spanInfo":{"endLine":74,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":40,"startLine":74,"startCol":37},"realSpan":true},[["ts1","{v : [(FibHeap.FibTree a)] | v == ts1\n                             && len v >= 0\n                             && lsize v >= len v}"]]],[{"spanInfo":{"endLine":124,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":33,"startLine":123,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792805310","{v : [(FibHeap.FibTree a)] | len v >= 0}"]]],[{"spanInfo":{"endLine":135,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":29,"startLine":135,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792805309","(FibHeap.FibTree a)"]]],[{"spanInfo":{"endLine":99,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":28,"startLine":99,"startCol":26},"realSpan":true},[["t'","{v : (FibHeap.FibTree a) | v == t'\n                           && size v == pow2 (rank v)\n                           && 0 < size v}"]]],[{"spanInfo":{"endLine":118,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":8,"startLine":118,"startCol":1},"realSpan":true},[["FibHeap.fibsize","forall a .\nx1:{VV : (FibHeap.FibHeap a) | notEmptyFibHeap VV} -> {VV : GHC.Types.Int | VV == fibsize x1\n                                                                            && 0 < VV}"]]],[{"spanInfo":{"endLine":104,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":10,"startLine":104,"startCol":1},"realSpan":true},[["FibHeap.deleteMin","forall a .\n(GHC.Classes.Ord<[]> a) =>\n{VV : (FibHeap.FibHeap a) | notEmptyFibHeap VV} -> (FibHeap.FibHeap a)"]]],[{"spanInfo":{"endLine":106,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":68,"startLine":106,"startCol":46},"realSpan":true},[["lq_anf$##7205759403792805282","[(FibHeap.FibTree a)]"]]],[{"spanInfo":{"endLine":64,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":33,"startLine":64,"startCol":31},"realSpan":true},[["lq_anf$##7205759403792805214","{v : (FibHeap.FibTree a) | v == t2\n                           && rank t1 == rank v\n                           && root v == y\n                           && size v == pow2 (rank v)\n                           && subtrees v == ts2\n                           && 0 < size v}"]]],[{"spanInfo":{"endLine":91,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":67,"startLine":91,"startCol":48},"realSpan":true},[["meld","forall a .\n(GHC.Classes.Ord<[]> a) =>\nx2:[(FibHeap.FibTree a)] -> (FibHeap.FibTree a) -> {v : [(FibHeap.FibTree a)] | len v > 0\n                                                                                && len v <= len x2 + 1}"]]],[{"spanInfo":{"endLine":91,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":42,"startLine":91,"startCol":35},"realSpan":true},[["lq_anf$##7205759403792805231","{v : GHC.Types.Int | v == rank x'\n                     && v >= 0}"]]],[{"spanInfo":{"endLine":42,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":25,"startLine":42,"startCol":21},"realSpan":true},[["GHC.Types.True","{v : GHC.Types.Bool | v\n                      && v == True}"]]],[{"spanInfo":{"endLine":118,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":46,"startLine":118,"startCol":25},"realSpan":true},[["GHC.Num.$fNumInt","{v : (GHC.Num.Num GHC.Types.Int) | v == $fNumInt}"]]],[{"spanInfo":{"endLine":90,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":14,"startLine":90,"startCol":13},"realSpan":true},[["x","(FibHeap.FibTree a)"]]],[{"spanInfo":{"endLine":73,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":18,"startLine":73,"startCol":12},"realSpan":true},[["minTr1","{v : (FibHeap.FibTree a) | v == minTr1\n                           && size v == pow2 (rank v)\n                           && 0 < size v}"]]],[{"spanInfo":{"endLine":86,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":21,"startLine":86,"startCol":20},"realSpan":true},[["x","{v : (FibHeap.FibTree a) | v == x\n                           && size v == pow2 (rank v)\n                           && 0 < size v}"]]],[{"spanInfo":{"endLine":64,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":37,"startLine":64,"startCol":34},"realSpan":true},[["ts1","{v : [(FibHeap.FibTree a)] | v == ts1\n                             && len v >= 0\n                             && lsize v >= len v}"]]],[{"spanInfo":{"endLine":74,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":46,"startLine":74,"startCol":29},"realSpan":true},[["lq_anf$##7205759403792805250","{v : [(FibHeap.FibTree a)] | head v == minTr1\n                             && lqdc##$select v == minTr1}"]]],[{"spanInfo":{"endLine":111,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":29,"startLine":111,"startCol":28},"realSpan":true},[[null,"{VV : forall a .\n      {v : (FibHeap.FibHeap a) | isEmptyFibHeap v\n                                 && not (notEmptyFibHeap v)\n                                 && v == E} | VV == E}"]]],[{"spanInfo":{"endLine":59,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":27,"startLine":59,"startCol":26},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"endLine":99,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":57,"startLine":99,"startCol":52},"realSpan":true},[["lq_anf$##7205759403792805265","{v : [(FibHeap.FibTree a)] | v == : t ts'\n                             && head v == t\n                             && len v == 1 + len ts'\n                             && lqdc##$select v == t\n                             && lqdc##$select v == ts'\n                             && lsize v == size t + lsize ts'\n                             && tail v == ts'}"]]],[{"spanInfo":{"endLine":65,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":31,"startLine":65,"startCol":24},"realSpan":true},[["lq_anf$##7205759403792805219","GHC.Types.Int"]]],[{"spanInfo":{"endLine":79,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":21,"startLine":79,"startCol":20},"realSpan":true},[["h","{v : (FibHeap.FibHeap a) | (isEmptyFibHeap v\n                            && not (notEmptyFibHeap v))\n                           || (notEmptyFibHeap v\n                               && not (isEmptyFibHeap v))\n                           && v == h\n                           && 0 < fibsize v}"]]],[{"spanInfo":{"endLine":130,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":24,"startLine":129,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792805301","GHC.Prim.Int#"]]],[{"spanInfo":{"endLine":118,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":46,"startLine":118,"startCol":38},"realSpan":true},[["lq_anf$##7205759403792805317","{v : GHC.Types.Int | v == lsize ts\n                     && v >= len ts}"]]],[{"spanInfo":{"endLine":96,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":24,"startLine":96,"startCol":22},"realSpan":true},[[null,"{VV : forall a <p :: a a -> Bool>.\n      {v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | v == []\n                                                  && len v == 0\n                                                  && lsize v == 0} | VV == []}"]]],[{"spanInfo":{"endLine":71,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":10,"startLine":71,"startCol":9},"realSpan":true},[["h","{VV : (FibHeap.FibHeap a) | notEmptyFibHeap VV}"]]],[{"spanInfo":{"endLine":92,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":34,"startLine":92,"startCol":32},"realSpan":true},[["xs","{v : [(FibHeap.FibTree a)] | v == xs\n                             && len v >= 0\n                             && lsize v >= len v}"]]],[{"spanInfo":{"endLine":108,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":58,"startLine":108,"startCol":56},"realSpan":true},[["ds_d2Zr","{v : [(FibHeap.FibTree a)] | len v >= 0\n                             && lsize v >= len v}"]]],[{"spanInfo":{"endLine":63,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":8,"startLine":63,"startCol":6},"realSpan":true},[["t1","(FibHeap.FibTree a)"]]],[{"spanInfo":{"endLine":92,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":28,"startLine":92,"startCol":27},"realSpan":true},[["x","{v : (FibHeap.FibTree a) | v == x\n                           && size v == pow2 (rank v)\n                           && 0 < size v}"]]],[{"spanInfo":{"endLine":48,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":25,"startLine":47,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792805205","{v : (FibHeap.FibHeap a) | 0 < fibsize v}"]]],[{"spanInfo":{"endLine":98,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":17,"startLine":98,"startCol":14},"realSpan":true},[["ts'","[(FibHeap.FibTree a)]"]]],[{"spanInfo":{"endLine":74,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":46,"startLine":74,"startCol":19},"realSpan":true},[["FibHeap.FH","{VV : forall a .\n      x1:(FibHeap.FibTree a) -> x2:[(FibHeap.FibTree a)] -> {v : (FibHeap.FibHeap a) | notEmptyFibHeap v\n                                                                                       && not (isEmptyFibHeap v)\n                                                                                       && v == FH x1 x2\n                                                                                       && fibsize v == size x1 + lsize x2\n                                                                                       && minTree v == x1\n                                                                                       && trees v == x2} | VV == FH}"]]],[{"spanInfo":{"endLine":99,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":18,"startLine":99,"startCol":12},"realSpan":true},[["lq_anf$##7205759403792805261","{VV : a | VV == root t}"]]],[{"spanInfo":{"endLine":82,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":15,"startLine":82,"startCol":11},"realSpan":true},[[null,"{VV : forall a .\n      x1:(FibHeap.FibTree a) -> {VV : a | VV == root x1} | VV == root}"]]],[{"spanInfo":{"endLine":65,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":48,"startLine":65,"startCol":19},"realSpan":true},[["FibHeap.Node","{VV : forall a .\n      x1:{v : GHC.Types.Int | v >= 0} -> x2:a -> x3:[(FibHeap.FibTree a)] -> x4:GHC.Types.Bool -> {v : (FibHeap.FibTree a) | v == Node x1 x2 x3 x4\n                                                                                                                             && marked v == x4\n                                                                                                                             && rank v == x1\n                                                                                                                             && root v == x2\n                                                                                                                             && size v == pow2 x1\n                                                                                                                             && subtrees v == x3} | VV == Node}"]]],[{"spanInfo":{"endLine":65,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":30,"startLine":65,"startCol":29},"realSpan":true},[["lq_anf$##7205759403792805218","GHC.Types.Int"]]],[{"spanInfo":{"endLine":98,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":12,"startLine":98,"startCol":10},"realSpan":true},[["t'","(FibHeap.FibTree a)"]]],[{"spanInfo":{"endLine":99,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":58,"startLine":99,"startCol":47},"realSpan":true},[["GHC.Tuple.(,)","{VV : forall a b <p2 :: a b -> Bool>.\n      x1:a -> x2:{VV : b<p2 x1> | true} -> {v : (a, b)<\\x5 VV -> {VV : b<p2 x5> | true}> | v == (,) x1 x2\n                                                                                           && fst v == x1\n                                                                                           && lqdc##$select v == x1\n                                                                                           && lqdc##$select v == x2\n                                                                                           && snd v == x2\n                                                                                           && x_Tuple21 v == x1\n                                                                                           && x_Tuple22 v == x2} | VV == (,)}"]]],[{"spanInfo":{"endLine":82,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":25,"startLine":82,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792805257","x1:(FibHeap.FibHeap a) -> {v : (FibHeap.FibTree a) | v == minTree x1}"]]],[{"spanInfo":{"endLine":129,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":11,"startLine":129,"startCol":10},"realSpan":true},[["lq_anf$##7205759403792805308","{v : GHC.Prim.Int# | v == 1}"]]],[{"spanInfo":{"endLine":130,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":21,"startLine":130,"startCol":20},"realSpan":true},[["ds_d2Tz","{v : GHC.Types.Int | v >= 0}"]]],[{"spanInfo":{"endLine":92,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":34,"startLine":86,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792805227","{v : [(FibHeap.FibTree a)] | len v >= 0\n                             && lsize v >= len v}"]]],[{"spanInfo":{"endLine":130,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":11,"startLine":130,"startCol":10},"realSpan":true},[["lq_anf$##7205759403792805303","GHC.Types.Int"]]],[{"spanInfo":{"endLine":99,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":58,"startLine":98,"startCol":5},"realSpan":true},[["lq_anf$##7205759403792805264","GHC.Types.Bool"]]],[{"spanInfo":{"endLine":59,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":10,"startLine":59,"startCol":1},"realSpan":true},[["FibHeap.singleton","forall a .\nx1:a -> {VV : (FibHeap.FibHeap a) | notEmptyFibHeap VV\n                                    && rank (minTree VV) == 1\n                                    && root (minTree VV) == x1\n                                    && subtrees (minTree VV) == []\n                                    && trees VV == []}"]]],[{"spanInfo":{"endLine":124,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":22,"startLine":124,"startCol":16},"realSpan":true},[["lq_anf$##7205759403792805312","{v : GHC.Types.Int | v == pow2 (rank t)\n                     && v == size t\n                     && 0 < v}"]]],[{"spanInfo":{"endLine":65,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":41,"startLine":65,"startCol":38},"realSpan":true},[["ts2","{v : [(FibHeap.FibTree a)] | v == ts2\n                             && len v >= 0\n                             && lsize v >= len v}"]]],[{"spanInfo":{"endLine":106,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":61,"startLine":106,"startCol":47},"realSpan":true},[["lq_anf$##7205759403792805281","[(FibHeap.FibTree a)]"]]],[{"spanInfo":{"endLine":64,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":22,"startLine":64,"startCol":21},"realSpan":true},[["r","{v : GHC.Types.Int | v == r\n                     && v >= 0}"]]],[{"spanInfo":{"endLine":64,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":29,"startLine":64,"startCol":28},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"endLine":99,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":58,"startLine":96,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792805260","{v : [(FibHeap.FibTree a)] | len v >= 0\n                             && lsize v >= len v}"]]],[{"spanInfo":{"endLine":64,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":12,"startLine":64,"startCol":11},"realSpan":true},[["y","{VV : a | VV == y}"]]],[{"spanInfo":{"endLine":65,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":37,"startLine":65,"startCol":35},"realSpan":true},[["lq_anf$##7205759403792805213","{v : (FibHeap.FibTree a) | v == t1\n                           && rank v == r\n                           && root v == x\n                           && size v == pow2 r\n                           && size v == pow2 (rank v)\n                           && subtrees v == ts1\n                           && 0 < size v}"]]],[{"spanInfo":{"endLine":86,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":22,"startLine":86,"startCol":19},"realSpan":true},[["lq_anf$##7205759403792805239","{v : [(FibHeap.FibTree a)] | v == []\n                             && len v == 0\n                             && lsize v == 0}"]]],[{"spanInfo":{"endLine":90,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":20,"startLine":90,"startCol":17},"realSpan":true},[["lq_anf$##7205759403792805229","{v : [(FibHeap.FibTree a)] | v == []\n                             && len v == 0\n                             && lsize v == 0}"]]],[{"spanInfo":{"endLine":108,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":59,"startLine":108,"startCol":46},"realSpan":true},[["lq_anf$##7205759403792805278","[(FibHeap.FibTree a)]"]]],[{"spanInfo":{"endLine":99,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":40,"startLine":99,"startCol":38},"realSpan":true},[["ds_d2V4","{v : [(FibHeap.FibTree a)] | len v >= 0\n                             && lsize v >= len v}"]]],[{"spanInfo":{"endLine":99,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":50,"startLine":99,"startCol":48},"realSpan":true},[["t'","{v : (FibHeap.FibTree a) | v == t'\n                           && size v == pow2 (rank v)\n                           && 0 < size v}"]]],[{"spanInfo":{"endLine":99,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":57,"startLine":99,"startCol":54},"realSpan":true},[["ts'","{v : [(FibHeap.FibTree a)] | v == ts'\n                             && len v >= 0\n                             && lsize v >= len v}"]]],[{"spanInfo":{"endLine":91,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":67,"startLine":91,"startCol":56},"realSpan":true},[["lq_anf$##7205759403792805235","{v : (FibHeap.FibTree a) | (root v == root x\n                            && root x <= root x')\n                           || (root v == root x'\n                               && root x' <= root x)\n                           && rank v == 1 + rank x}"]]],[{"spanInfo":{"endLine":87,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":36,"startLine":87,"startCol":33},"realSpan":true},[["lq_anf$##7205759403792805238","{v : [(FibHeap.FibTree a)] | head v == x\n                             && lqdc##$select v == x}"]]],[{"spanInfo":{"endLine":59,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":40,"startLine":59,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792805212","{v : [(FibHeap.FibTree a)] | v == []\n                             && len v == 0\n                             && lsize v == 0}"]]],[{"spanInfo":{"endLine":59,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":37,"startLine":59,"startCol":18},"realSpan":true},[["lq_anf$##7205759403792805211","{v : (FibHeap.FibTree a) | marked v == False\n                           && root v == x}"]]],[{"spanInfo":{"endLine":73,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":32,"startLine":73,"startCol":7},"realSpan":true},[["lq_anf$##7205759403792805247","GHC.Types.Bool"]]]],"o_templs":[[{"spanInfo":{"endLine":53,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":13,"startLine":53,"startCol":1},"realSpan":true},[[null,"{VV : forall a .\n      {lq_tmp$x##769 : (FibHeap.FibHeap a) | FibHeap.isEmptyFibHeap lq_tmp$x##769\n                                             && is$FibHeap.E lq_tmp$x##769\n                                             && not (FibHeap.notEmptyFibHeap lq_tmp$x##769)\n                                             && not (is$FibHeap.FH lq_tmp$x##769)\n                                             && lq_tmp$x##769 == FibHeap.E} | VV == FibHeap.E}"]]],[{"spanInfo":{"endLine":64,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":27,"startLine":64,"startCol":20},"realSpan":true},[["lq_anf$##7205759403792805223","{lq_tmp$x##1131 : GHC.Types.Int | lq_tmp$x##1131 == r##a1XI + lq_anf$##7205759403792805222##d31s}"]]],[{"spanInfo":{"endLine":42,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":25,"startLine":41,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792805202","{lq_tmp$x##671 : (FibHeap.FibHeap a) | (FibHeap.isEmptyFibHeap lq_tmp$x##671\n                                        && not (FibHeap.notEmptyFibHeap lq_tmp$x##671))\n                                       || (FibHeap.notEmptyFibHeap lq_tmp$x##671\n                                           && not (FibHeap.isEmptyFibHeap lq_tmp$x##671))\n                                       && lq_tmp$x##671 == ds_d30l\n                                       && 0 < FibHeap.fibsize lq_tmp$x##671}"]]],[{"spanInfo":{"endLine":73,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":44,"startLine":73,"startCol":38},"realSpan":true},[["minTr1","{lq_tmp$x##2300 : (FibHeap.FibTree a) | lq_tmp$x##2300 == minTr1##a1XQ\n                                        && FibHeap.size lq_tmp$x##2300 == FibHeap.pow2 (FibHeap.rank lq_tmp$x##2300)\n                                        && 0 < FibHeap.size lq_tmp$x##2300}"]]],[{"spanInfo":{"endLine":1,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":1,"startLine":1,"startCol":1},"realSpan":true},[["FibHeap.$trModule","{VV##5653 : GHC.Types.Module | $k_##5654}"]]],[{"spanInfo":{"endLine":87,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":39,"startLine":87,"startCol":37},"realSpan":true},[["ds_d2XC","{lq_tmp$x##1921 : [(FibHeap.FibTree a)] | lq_tmp$x##1921 == ds_d2XC\n                                          && FibHeap.lsize lq_tmp$x##1921 >= len lq_tmp$x##1921\n                                          && len lq_tmp$x##1921 >= 0}"]]],[{"spanInfo":{"endLine":79,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":35,"startLine":79,"startCol":1},"realSpan":true},[["$dOrd_a25N","{lq_tmp$x##2346 : (GHC.Classes.Ord a) | lq_tmp$x##2346 == $dOrd_a25N}"]]],[{"spanInfo":{"endLine":79,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":34,"startLine":79,"startCol":33},"realSpan":true},[["x","{lq_tmp$x##2326 : a | lq_tmp$x##2326 == x##a1XW}"]]],[{"spanInfo":{"endLine":135,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":29,"startLine":135,"startCol":28},"realSpan":true},[["r","{lq_tmp$x##5416 : GHC.Types.Int | lq_tmp$x##5416 == r##a1Yx\n                                  && lq_tmp$x##5416 >= 0}"]]],[{"spanInfo":{"endLine":124,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":33,"startLine":124,"startCol":25},"realSpan":true},[["lq_anf$##7205759403792805313","{lq_tmp$x##5511 : GHC.Types.Int | lq_tmp$x##5511 == FibHeap.lsize ts##a1Yv\n                                  && lq_tmp$x##5511 >= len ts##a1Yv}"]]],[{"spanInfo":{"endLine":79,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":9,"startLine":79,"startCol":8},"realSpan":true},[["h","(FibHeap.FibHeap a)"]]],[{"spanInfo":{"endLine":111,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":12,"startLine":111,"startCol":10},"realSpan":true},[["xs","[a]"]]],[{"spanInfo":{"endLine":65,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":42,"startLine":65,"startCol":34},"realSpan":true},[["lq_anf$##7205759403792805220","{lq_tmp$x##1043 : [{lq_tmp$x##1056 : (FibHeap.FibTree {lq_tmp$x##1055 : a | $k_##1052[VV##1051:=lq_tmp$x##1055][VV##1053:=lq_tmp$x##1056][lq_tmp$x##1047:=lq_anf$##7205759403792805213##d31j][lq_tmp$x##1048:=ts2##a1XN]}) | $k_##1054[VV##1053:=lq_tmp$x##1056][lq_tmp$x##1047:=lq_anf$##7205759403792805213##d31j][lq_tmp$x##1048:=ts2##a1XN]}]<\\lq_tmp$x##1050 VV -> {lq_tmp$x##1056 : (FibHeap.FibTree {lq_tmp$x##1055 : a | $k_##1058[VV##1057:=lq_tmp$x##1055][VV##1059:=lq_tmp$x##1056][lq_tmp$x##1047:=lq_anf$##7205759403792805213##d31j][lq_tmp$x##1048:=ts2##a1XN][lq_tmp$x##1061:=lq_tmp$x##1050]}) | $k_##1060[VV##1059:=lq_tmp$x##1056][lq_tmp$x##1047:=lq_anf$##7205759403792805213##d31j][lq_tmp$x##1048:=ts2##a1XN][lq_tmp$x##1061:=lq_tmp$x##1050]}> | is$GHC.Types.: lq_tmp$x##1043\nnot (is$GHC.Types.[] lq_tmp$x##1043)\nlq_tmp$x##1043 == GHC.Types.: lq_anf$##7205759403792805213##d31j ts2##a1XN\nibHeap.lsize lq_tmp$x##1043 == FibHeap.size lq_anf$##7205759403792805213##d31j + FibHeap.lsize ts2##a1XN\nhead lq_tmp$x##1043 == lq_anf$##7205759403792805213##d31j\nlen lq_tmp$x##1043 == 1 + len ts2##a1XN\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         && lqdc##$select##GHC.Types.:##1 lq_tmp$x##1043 == lq_anf$##7205759403792805213##d31j\nlqdc##$select##GHC.Types.:##2 lq_tmp$x##1043 == ts2##a1XN\ntail lq_tmp$x##1043 == ts2##a1XN}"]]],[{"spanInfo":{"endLine":106,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":17,"startLine":106,"startCol":14},"realSpan":true},[["ts'","{VV##5194 : [{VV##5187 : (FibHeap.FibTree {VV##5185 : a | $k_##5186}) | $k_##5188}]<\\lq_tmp$x##5189 VV -> {VV##5192 : (FibHeap.FibTree {VV##5190 : a | $k_##5191}) | $k_##5193}> | $k_##5195}"]]],[{"spanInfo":{"endLine":107,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":68,"startLine":107,"startCol":65},"realSpan":true},[["ts'","{lq_tmp$x##4850 : [{lq_tmp$x##4846 : (FibHeap.FibTree {lq_tmp$x##4845 : a | $k_##4762[VV##4761:=lq_tmp$x##4845][VV##4763:=lq_tmp$x##4846][VV##4770:=lq_tmp$x##4850]}) | $k_##4764[VV##4763:=lq_tmp$x##4846][VV##4770:=lq_tmp$x##4850]}]<\\lq_tmp$x##4851 VV -> {lq_tmp$x##4849 : (FibHeap.FibTree {lq_tmp$x##4848 : a | $k_##4767[VV##4766:=lq_tmp$x##4848][VV##4768:=lq_tmp$x##4849][VV##4770:=lq_tmp$x##4850][lq_tmp$x##4765:=lq_tmp$x##4851][lq_tmp$x##4847:=lq_tmp$x##4851]}) | $k_##4769[VV##4768:=lq_tmp$x##4849][VV##4770:=lq_tmp$x##4850][lq_tmp$x##4765:=lq_tmp$x##4851][lq_tmp$x##4847:=lq_tmp$x##4851]}> | lq_tmp$x##4850 == ts'##a25q\nibHeap.lsize lq_tmp$x##4850 >= len lq_tmp$x##4850\nlen lq_tmp$x##4850 >= 0\nk_##4771[VV##4770:=lq_tmp$x##4850]}"]]],[{"spanInfo":{"endLine":73,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":62,"startLine":73,"startCol":45},"realSpan":true},[["lq_anf$##7205759403792805252","{lq_tmp$x##2250 : [{lq_tmp$x##2263 : (FibHeap.FibTree {lq_tmp$x##2262 : a | $k_##2259[VV##2258:=lq_tmp$x##2262][VV##2260:=lq_tmp$x##2263][lq_tmp$x##2254:=minTr2##a1XT][lq_tmp$x##2255:=lq_anf$##7205759403792805251##d31V]}) | $k_##2261[VV##2260:=lq_tmp$x##2263][lq_tmp$x##2254:=minTr2##a1XT][lq_tmp$x##2255:=lq_anf$##7205759403792805251##d31V]}]<\\lq_tmp$x##2257 VV -> {lq_tmp$x##2263 : (FibHeap.FibTree {lq_tmp$x##2262 : a | $k_##2265[VV##2264:=lq_tmp$x##2262][VV##2266:=lq_tmp$x##2263][lq_tmp$x##2254:=minTr2##a1XT][lq_tmp$x##2255:=lq_anf$##7205759403792805251##d31V][lq_tmp$x##2268:=lq_tmp$x##2257]}) | $k_##2267[VV##2266:=lq_tmp$x##2263][lq_tmp$x##2254:=minTr2##a1XT][lq_tmp$x##2255:=lq_anf$##7205759403792805251##d31V][lq_tmp$x##2268:=lq_tmp$x##2257]}> | is$GHC.Types.: lq_tmp$x##2250\nnot (is$GHC.Types.[] lq_tmp$x##2250)\nlq_tmp$x##2250 == GHC.Types.: minTr2##a1XT lq_anf$##7205759403792805251##d31V\nibHeap.lsize lq_tmp$x##2250 == FibHeap.size minTr2##a1XT + FibHeap.lsize lq_anf$##7205759403792805251##d31V\nhead lq_tmp$x##2250 == minTr2##a1XT\nlen lq_tmp$x##2250 == 1 + len lq_anf$##7205759403792805251##d31V\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     && lqdc##$select##GHC.Types.:##1 lq_tmp$x##2250 == minTr2##a1XT\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     && lqdc##$select##GHC.Types.:##2 lq_tmp$x##2250 == lq_anf$##7205759403792805251##d31V\ntail lq_tmp$x##2250 == lq_anf$##7205759403792805251##d31V}"]]],[{"spanInfo":{"endLine":65,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":48,"startLine":63,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792805216","{lq_tmp$x##1003 : GHC.Types.Bool | (lq_tmp$x##1003 <=> x##a1XJ < y##a1XM)\n                                   && lq_tmp$x##1003 == lq_anf$##7205759403792805215##d31l}"]]],[{"spanInfo":{"endLine":111,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":32,"startLine":111,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792805255","{lq_tmp$x##2381 : (FibHeap.FibHeap {lq_tmp$x##2384 : a | $k_##2383[VV##2382:=lq_tmp$x##2384]}) | FibHeap.isEmptyFibHeap lq_tmp$x##2381\n                                                                                                 && is$FibHeap.E lq_tmp$x##2381\n                                                                                                 && not (FibHeap.notEmptyFibHeap lq_tmp$x##2381)\n                                                                                                 && not (is$FibHeap.FH lq_tmp$x##2381)\n                                                                                                 && lq_tmp$x##2381 == FibHeap.E}"]]],[{"spanInfo":{"endLine":65,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":26,"startLine":65,"startCol":25},"realSpan":true},[["r","{lq_tmp$x##1032 : GHC.Types.Int | lq_tmp$x##1032 == r##a1XI\n                                  && lq_tmp$x##1032 >= 0}"]]],[{"spanInfo":{"endLine":105,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":49,"startLine":105,"startCol":36},"realSpan":true},[["FibHeap.FH","{VV : forall a .\n      lq_tmp$x##5261:(FibHeap.FibTree a) -> lq_tmp$x##5262:[(FibHeap.FibTree a)] -> {lq_tmp$x##5257 : (FibHeap.FibHeap a) | FibHeap.notEmptyFibHeap lq_tmp$x##5257\n                                                                                                                            && is$FibHeap.FH lq_tmp$x##5257\n                                                                                                                            && not (FibHeap.isEmptyFibHeap lq_tmp$x##5257)\n                                                                                                                            && not (is$FibHeap.E lq_tmp$x##5257)\n                                                                                                                            && lq_tmp$x##5257 == FibHeap.FH lq_tmp$x##5261 lq_tmp$x##5262\n                                                                                                                            && FibHeap.fibsize lq_tmp$x##5257 == FibHeap.size lq_tmp$x##5261 + FibHeap.lsize lq_tmp$x##5262\n                                                                                                                            && FibHeap.minTree lq_tmp$x##5257 == lq_tmp$x##5261\n                                                                                                                            && FibHeap.trees lq_tmp$x##5257 == lq_tmp$x##5262} | VV == FibHeap.FH}"]]],[{"spanInfo":{"endLine":53,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":9,"startLine":53,"startCol":1},"realSpan":true},[["FibHeap.makeHeap","forall a .\n{VV##0 : (FibHeap.FibHeap a) | not (FibHeap.notEmptyFibHeap VV##0)}"]]],[{"spanInfo":{"endLine":111,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":27,"startLine":111,"startCol":21},"realSpan":true},[["lq_anf$##7205759403792805254","lq_tmp$x##2372:(FibHeap.FibHeap {lq_tmp$x##2376 : a | $k_##2375[VV##2374:=lq_tmp$x##2376][lq_tmp$x##2371:=fix$36$$36$dOrd_a25U]}) -> lq_tmp$x##2373:{lq_tmp$x##2376 : a | $k_##2375[VV##2374:=lq_tmp$x##2376][lq_tmp$x##2371:=fix$36$$36$dOrd_a25U]} -> {lq_tmp$x##2367 : (FibHeap.FibHeap {lq_tmp$x##2376 : a | $k_##2375[VV##2374:=lq_tmp$x##2376][lq_tmp$x##2371:=fix$36$$36$dOrd_a25U]}) | FibHeap.notEmptyFibHeap lq_tmp$x##2367\n                                                                                                                                                                                                                                                                                                                                                                                               && (FibHeap.root (FibHeap.minTree lq_tmp$x##2367) == FibHeap.root (FibHeap.minTree lq_tmp$x##2372)\n                                                                                                                                                                                                                                                                                                                                                                                                   && FibHeap.root (FibHeap.minTree lq_tmp$x##2372) <= lq_tmp$x##2373)\n                                                                                                                                                                                                                                                                                                                                                                                                  || ((lq_tmp$x##2373 <= FibHeap.root (FibHeap.minTree lq_tmp$x##2372)\n                                                                                                                                                                                                                                                                                                                                                                                                       || not (FibHeap.notEmptyFibHeap lq_tmp$x##2372))\n                                                                                                                                                                                                                                                                                                                                                                                                      && FibHeap.root (FibHeap.minTree lq_tmp$x##2367) == lq_tmp$x##2373)}"]]],[{"spanInfo":{"endLine":90,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":19,"startLine":90,"startCol":18},"realSpan":true},[["x","{lq_tmp$x##1513 : (FibHeap.FibTree a) | lq_tmp$x##1513 == x##a1Y2\n                                        && FibHeap.size lq_tmp$x##1513 == FibHeap.pow2 (FibHeap.rank lq_tmp$x##1513)\n                                        && 0 < FibHeap.size lq_tmp$x##1513}"]]],[{"spanInfo":{"endLine":129,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":5,"startLine":129,"startCol":1},"realSpan":true},[["FibHeap.pow2","lq_tmp$x##5279:{VV##0 : GHC.Types.Int | VV##0 >= 0} -> {VV##0 : GHC.Types.Int | 0 < VV##0}"]]],[{"spanInfo":{"endLine":92,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":34,"startLine":92,"startCol":27},"realSpan":true},[["GHC.Types.:","{VV : forall a <p :: a a -> Bool>.\n      lq_tmp$x##1657:a -> lq_tmp$x##1658:[{lq_tmp$x##1646 : a<p lq_tmp$x##1657> | true}]<\\lq_tmp$x##1659 VV -> {lq_tmp$x##1648 : a<p lq_tmp$x##1659> | true}> -> {lq_tmp$x##1653 : [a]<\\lq_tmp$x##1660 VV -> {lq_tmp$x##1652 : a<p lq_tmp$x##1660> | true}> | is$GHC.Types.: lq_tmp$x##1653\n                                                                                                                                                                                                                                                              && not (is$GHC.Types.[] lq_tmp$x##1653)\n                                                                                                                                                                                                                                                              && lq_tmp$x##1653 == GHC.Types.: lq_tmp$x##1657 lq_tmp$x##1658\n                                                                                                                                                                                                                                                              && FibHeap.lsize lq_tmp$x##1653 == FibHeap.size lq_tmp$x##1657 + FibHeap.lsize lq_tmp$x##1658\n                                                                                                                                                                                                                                                              && head lq_tmp$x##1653 == lq_tmp$x##1657\n                                                                                                                                                                                                                                                              && len lq_tmp$x##1653 == 1 + len lq_tmp$x##1658\n                                                                                                                                                                                                                                                              && lqdc##$select##GHC.Types.:##1 lq_tmp$x##1653 == lq_tmp$x##1657\n                                                                                                                                                                                                                                                              && lqdc##$select##GHC.Types.:##2 lq_tmp$x##1653 == lq_tmp$x##1658\n                                                                                                                                                                                                                                                              && tail lq_tmp$x##1653 == lq_tmp$x##1658} | VV == GHC.Types.:}"]]],[{"spanInfo":{"endLine":130,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":24,"startLine":130,"startCol":19},"realSpan":true},[["lq_anf$##7205759403792805306","{lq_tmp$x##5326 : GHC.Types.Int | lq_tmp$x##5326 == ds_d2Tz - lq_anf$##7205759403792805305##d32N}"]]],[{"spanInfo":{"endLine":79,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":7,"startLine":79,"startCol":1},"realSpan":true},[["FibHeap.insert","forall a .\n(GHC.Classes.Ord<[]> a) =>\nlq_tmp$x##2313:(FibHeap.FibHeap a) -> lq_tmp$x##2314:a -> {VV##0 : (FibHeap.FibHeap a) | FibHeap.notEmptyFibHeap VV##0\n                                                                                         && (FibHeap.root (FibHeap.minTree VV##0) == FibHeap.root (FibHeap.minTree lq_tmp$x##2313)\n                                                                                             && FibHeap.root (FibHeap.minTree lq_tmp$x##2313) <= lq_tmp$x##2314)\n                                                                                            || ((lq_tmp$x##2314 <= FibHeap.root (FibHeap.minTree lq_tmp$x##2313)\n                                                                                                 || not (FibHeap.notEmptyFibHeap lq_tmp$x##2313))\n                                                                                                && FibHeap.root (FibHeap.minTree VV##0) == lq_tmp$x##2314)}"]]],[{"spanInfo":{"endLine":59,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":25,"startLine":59,"startCol":24},"realSpan":true},[["lq_anf$##7205759403792805209","{lq_tmp$x##779 : GHC.Types.Int | lq_tmp$x##779 == (lq_anf$##7205759403792805208##d31e : int)}"]]],[{"spanInfo":{"endLine":74,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":46,"startLine":71,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792805248","{lq_tmp$x##2080 : GHC.Types.Bool | (lq_tmp$x##2080 <=> lq_anf$##7205759403792805245##d31P < lq_anf$##7205759403792805246##d31Q)\n                                   && lq_tmp$x##2080 == lq_anf$##7205759403792805247##d31R}"]]],[{"spanInfo":{"endLine":79,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":11,"startLine":79,"startCol":10},"realSpan":true},[["x","a"]]],[{"spanInfo":{"endLine":91,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":42,"startLine":91,"startCol":25},"realSpan":true},[["lq_anf$##7205759403792805232","{lq_tmp$x##1585 : GHC.Types.Bool | lq_tmp$x##1585 <=> lq_anf$##7205759403792805230##d31A == lq_anf$##7205759403792805231##d31B}"]]],[{"spanInfo":{"endLine":91,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":42,"startLine":91,"startCol":40},"realSpan":true},[["x'","{lq_tmp$x##1579 : (FibHeap.FibTree a) | lq_tmp$x##1579 == x'##a1Y3\n                                        && FibHeap.size lq_tmp$x##1579 == FibHeap.pow2 (FibHeap.rank lq_tmp$x##1579)\n                                        && 0 < FibHeap.size lq_tmp$x##1579}"]]],[{"spanInfo":{"endLine":108,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":52,"startLine":108,"startCol":47},"realSpan":true},[["lq_anf$##7205759403792805275","{lq_tmp$x##4554 : [(FibHeap.FibTree a)] | is$GHC.Types.: lq_tmp$x##4554\n                                          && not (is$GHC.Types.[] lq_tmp$x##4554)\n                                          && lq_tmp$x##4554 == lq_anf$##7205759403792805275##d32j\n                                          && lq_tmp$x##4554 == subtr##a1Yl\n                                          && lq_tmp$x##4554 == GHC.Types.: x##a1Ym xs##a1Yn\n                                          && FibHeap.lsize lq_tmp$x##4554 == FibHeap.size x##a1Ym + FibHeap.lsize xs##a1Yn\n                                          && head lq_tmp$x##4554 == x##a1Ym\n                                          && len lq_tmp$x##4554 == 1 + len xs##a1Yn\n                                          && lqdc##$select##GHC.Types.:##1 lq_tmp$x##4554 == x##a1Ym\n                                          && lqdc##$select##GHC.Types.:##2 lq_tmp$x##4554 == xs##a1Yn\n                                          && tail lq_tmp$x##4554 == xs##a1Yn\n                                          && FibHeap.lsize lq_tmp$x##4554 >= len lq_tmp$x##4554\n                                          && len lq_tmp$x##4554 >= 0}"]]],[{"spanInfo":{"endLine":64,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":26,"startLine":64,"startCol":25},"realSpan":true},[["lq_anf$##7205759403792805222","{lq_tmp$x##1115 : GHC.Types.Int | lq_tmp$x##1115 == (lq_anf$##7205759403792805221##d31r : int)}"]]],[{"spanInfo":{"endLine":82,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":25,"startLine":82,"startCol":18},"realSpan":true},[[null,"{VV : forall a .\n      lq_tmp$x##2455:(FibHeap.FibHeap a) -> {lq_tmp$x##2453 : (FibHeap.FibTree a) | lq_tmp$x##2453 == FibHeap.minTree lq_tmp$x##2455} | VV == FibHeap.minTree}"]]],[{"spanInfo":{"endLine":91,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":66,"startLine":91,"startCol":64},"realSpan":true},[["x'","{lq_tmp$x##1709 : (FibHeap.FibTree a) | lq_tmp$x##1709 == x'##a1Y3\n                                        && FibHeap.size lq_tmp$x##1709 == FibHeap.pow2 (FibHeap.rank lq_tmp$x##1709)\n                                        && 0 < FibHeap.size lq_tmp$x##1709}"]]],[{"spanInfo":{"endLine":106,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":12,"startLine":106,"startCol":6},"realSpan":true},[["minTr'","{VV##5136 : (FibHeap.FibTree {VV##5134 : a | $k_##5135}) | $k_##5137}"]]],[{"spanInfo":{"endLine":74,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":36,"startLine":74,"startCol":30},"realSpan":true},[["minTr1","{lq_tmp$x##2158 : (FibHeap.FibTree a) | lq_tmp$x##2158 == minTr1##a1XQ\n                                        && FibHeap.size lq_tmp$x##2158 == FibHeap.pow2 (FibHeap.rank lq_tmp$x##2158)\n                                        && 0 < FibHeap.size lq_tmp$x##2158}"]]],[{"spanInfo":{"endLine":98,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":34,"startLine":98,"startCol":32},"realSpan":true},[["ds_d2V4","{lq_tmp$x##2816 : [(FibHeap.FibTree a)] | lq_tmp$x##2816 == ds_d2V4\n                                          && FibHeap.lsize lq_tmp$x##2816 >= len lq_tmp$x##2816\n                                          && len lq_tmp$x##2816 >= 0}"]]],[{"spanInfo":{"endLine":74,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":28,"startLine":74,"startCol":22},"realSpan":true},[["minTr2","{lq_tmp$x##2187 : (FibHeap.FibTree a) | lq_tmp$x##2187 == minTr2##a1XT\n                                        && FibHeap.size lq_tmp$x##2187 == FibHeap.pow2 (FibHeap.rank lq_tmp$x##2187)\n                                        && 0 < FibHeap.size lq_tmp$x##2187}"]]],[{"spanInfo":{"endLine":90,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":9,"startLine":90,"startCol":5},"realSpan":true},[["meld","forall a .\n(GHC.Classes.Ord<[]> a) =>\nlq_tmp$x##1432:[(FibHeap.FibTree a)] -> lq_tmp$x##1433:(FibHeap.FibTree a) -> {v : [(FibHeap.FibTree a)] | len v > 0\n                                                                                                           && len v <= len lq_tmp$x##1432 + 1}"]]],[{"spanInfo":{"endLine":108,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":59,"startLine":104,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792805276","{lq_tmp$x##4429 : GHC.Prim.Addr# | lq_tmp$x##4429 == \"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs:(104,1)-(108,58)|function deleteMin\"}"]]],[{"spanInfo":{"endLine":73,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":32,"startLine":73,"startCol":26},"realSpan":true},[["minTr2","{lq_tmp$x##2059 : (FibHeap.FibTree a) | lq_tmp$x##2059 == minTr2##a1XT\n                                        && FibHeap.size lq_tmp$x##2059 == FibHeap.pow2 (FibHeap.rank lq_tmp$x##2059)\n                                        && 0 < FibHeap.size lq_tmp$x##2059}"]]],[{"spanInfo":{"endLine":73,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":61,"startLine":73,"startCol":53},"realSpan":true},[["lq_anf$##7205759403792805251","{lq_tmp$x##2211 : [{lq_tmp$x##2226 : (FibHeap.FibTree {lq_tmp$x##2225 : a | $k_##2222[VV##2221:=lq_tmp$x##2225][VV##2223:=lq_tmp$x##2226][lq_tmp$x##2216:=ts2##a1XU][lq_tmp$x##2217:=ts1##a1XR]}) | $k_##2224[VV##2223:=lq_tmp$x##2226][lq_tmp$x##2216:=ts2##a1XU][lq_tmp$x##2217:=ts1##a1XR]}] | len lq_tmp$x##2211 == len ts2##a1XU + len ts1##a1XR}"]]],[{"spanInfo":{"endLine":106,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":61,"startLine":106,"startCol":56},"realSpan":true},[["ds_d2Zq","{lq_tmp$x##4944 : (FibHeap.FibTree a) | lq_tmp$x##4944 == ds_d2Zq\n                                        && FibHeap.size lq_tmp$x##4944 == FibHeap.pow2 (FibHeap.rank lq_tmp$x##4944)\n                                        && 0 < FibHeap.size lq_tmp$x##4944}"]]],[{"spanInfo":{"endLine":91,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":63,"startLine":91,"startCol":62},"realSpan":true},[["x","{lq_tmp$x##1707 : (FibHeap.FibTree a) | lq_tmp$x##1707 == x##a1Y2\n                                        && FibHeap.size lq_tmp$x##1707 == FibHeap.pow2 (FibHeap.rank lq_tmp$x##1707)\n                                        && 0 < FibHeap.size lq_tmp$x##1707}"]]],[{"spanInfo":{"endLine":41,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":16,"startLine":41,"startCol":1},"realSpan":true},[["FibHeap.notEmptyFibHeap","forall a .\nlq_tmp$x##668:(FibHeap.FibHeap a) -> {VV : GHC.Types.Bool | VV <=> FibHeap.notEmptyFibHeap lq_tmp$x##668}"]]],[{"spanInfo":{"endLine":106,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":67,"startLine":106,"startCol":65},"realSpan":true},[["ds_d2Zr","{lq_tmp$x##4985 : [(FibHeap.FibTree a)] | lq_tmp$x##4985 == ds_d2Zr\n                                          && FibHeap.lsize lq_tmp$x##4985 >= len lq_tmp$x##4985\n                                          && len lq_tmp$x##4985 >= 0}"]]],[{"spanInfo":{"endLine":91,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":31,"startLine":91,"startCol":30},"realSpan":true},[["x","{lq_tmp$x##1568 : (FibHeap.FibTree a) | lq_tmp$x##1568 == x##a1Y2\n                                        && FibHeap.size lq_tmp$x##1568 == FibHeap.pow2 (FibHeap.rank lq_tmp$x##1568)\n                                        && 0 < FibHeap.size lq_tmp$x##1568}"]]],[{"spanInfo":{"endLine":59,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":12,"startLine":59,"startCol":11},"realSpan":true},[["x","a"]]],[{"spanInfo":{"endLine":111,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":9,"startLine":111,"startCol":1},"realSpan":true},[["FibHeap.fromList","forall a .\n(GHC.Classes.Ord<[]> a) =>\nlq_tmp$x##2357:[a] -> (FibHeap.FibHeap a)"]]],[{"spanInfo":{"endLine":108,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":59,"startLine":108,"startCol":34},"realSpan":true},[["lq_anf$##7205759403792805279","{lq_tmp$x##4577 : [(FibHeap.FibTree {lq_tmp$x##4587 : a | $k_##4586[VV##4585:=lq_tmp$x##4587][lq_tmp$x##4581:=fix$36$$36$dOrd_a24T][lq_tmp$x##4582:=lq_anf$##7205759403792805278##d32m]})] | len lq_tmp$x##4577 > 0}"]]],[{"spanInfo":{"endLine":106,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":68,"startLine":106,"startCol":21},"realSpan":true},[[null,"{lq_tmp$x##5096 : ({lq_tmp$x##5082 : (FibHeap.FibTree {lq_tmp$x##5081 : a | $k_##5053[VV##5052:=lq_tmp$x##5081][VV##5054:=lq_tmp$x##5082][VV##5079:=lq_tmp$x##5096][lq_tmp$x##5030:=lq_anf$##7205759403792805280##d32o][lq_tmp$x##5031:=lq_anf$##7205759403792805283##d32r]}) | $k_##5055[VV##5054:=lq_tmp$x##5082][VV##5079:=lq_tmp$x##5096][lq_tmp$x##5030:=lq_anf$##7205759403792805280##d32o][lq_tmp$x##5031:=lq_anf$##7205759403792805283##d32r]}, {lq_tmp$x##5088 : [{lq_tmp$x##5084 : (FibHeap.FibTree {lq_tmp$x##5083 : a | $k_##5057[VV##5056:=lq_tmp$x##5083][VV##5058:=lq_tmp$x##5084][VV##5065:=lq_tmp$x##5088][VV##5079:=lq_tmp$x##5096][lq_tmp$x##5030:=lq_anf$##7205759403792805280##d32o][lq_tmp$x##5031:=lq_anf$##7205759403792805283##d32r]}) | $k_##5059[VV##5058:=lq_tmp$x##5084][VV##5065:=lq_tmp$x##5088][VV##5079:=lq_tmp$x##5096][lq_tmp$x##5030:=lq_anf$##7205759403792805280##d32o][lq_tmp$x##5031:=lq_anf$##7205759403792805283##d32r]}]<\\lq_tmp$x##5085 VV -> {lq_tmp$x##5087 : (FibHeap.FibTree {lq_tmp$x##5086 : a | $k_##5062[VV##5061:=lq_tmp$x##5086][VV##5063:=lq_tmp$x##5087][VV##5065:=lq_tmp$x##5088][VV##5079:=lq_tmp$x##5096][lq_tmp$x##5030:=lq_anf$##7205759403792805280##d32o][lq_tmp$x##5031:=lq_anf$##7205759403792805283##d32r][lq_tmp$x##5060:=lq_tmp$x##5085]}) | $k_##5064[VV##5063:=lq_tmp$x##5087][VV##5065:=lq_tmp$x##5088][VV##5079:=lq_tmp$x##5096][lq_tmp$x##5030:=lq_anf$##7205759403792805280##d32o][lq_tmp$x##5031:=lq_anf$##7205759403792805283##d32r][lq_tmp$x##5060:=lq_tmp$x##5085]}> | $k_##5066[VV##5065:=lq_tmp$x##5088][VV##5079:=lq_tmp$x##5096][lq_tmp$x##5030:=lq_anf$##7205759403792805280##d32o][lq_tmp$x##5031:=lq_anf$##7205759403792805283##d32r]})<\\lq_tmp$x##5089 VV -> {lq_tmp$x##5095 : [{lq_tmp$x##5091 : (FibHeap.FibTree {lq_tmp$x##5090 : a | $k_##5069[VV##5068:=lq_tmp$x##5090][VV##5070:=lq_tmp$x##5091][VV##5077:=lq_tmp$x##5095][VV##5079:=lq_tmp$x##5096][lq_tmp$x##5030:=lq_anf$##7205759403792805280##d32o][lq_tmp$x##5031:=lq_anf$##7205759403792805283##d32r][lq_tmp$x##5067:=lq_tmp$x##5089]}) | $k_##5071[VV##5070:=lq_tmp$x##5091][VV##5077:=lq_tmp$x##5095][VV##5079:=lq_tmp$x##5096][lq_tmp$x##5030:=lq_anf$##7205759403792805280##d32o][lq_tmp$x##5031:=lq_anf$##7205759403792805283##d32r][lq_tmp$x##5067:=lq_tmp$x##5089]}]<\\lq_tmp$x##5092 VV -> {lq_tmp$x##5094 : (FibHeap.FibTree {lq_tmp$x##5093 : a | $k_##5074[VV##5073:=lq_tmp$x##5093][VV##5075:=lq_tmp$x##5094][VV##5077:=lq_tmp$x##5095][VV##5079:=lq_tmp$x##5096][lq_tmp$x##5030:=lq_anf$##7205759403792805280##d32o][lq_tmp$x##5031:=lq_anf$##7205759403792805283##d32r][lq_tmp$x##5067:=lq_tmp$x##5089][lq_tmp$x##5072:=lq_tmp$x##5092]}) | $k_##5076[VV##5075:=lq_tmp$x##5094][VV##5077:=lq_tmp$x##5095][VV##5079:=lq_tmp$x##5096][lq_tmp$x##5030:=lq_anf$##7205759403792805280##d32o][lq_tmp$x##5031:=lq_anf$##7205759403792805283##d32r][lq_tmp$x##5067:=lq_tmp$x##5089][lq_tmp$x##5072:=lq_tmp$x##5092]}> | $k_##5078[VV##5077:=lq_tmp$x##5095][VV##5079:=lq_tmp$x##5096][lq_tmp$x##5030:=lq_anf$##7205759403792805280##d32o][lq_tmp$x##5031:=lq_anf$##7205759403792805283##d32r][lq_tmp$x##5067:=lq_tmp$x##5089]}> | $k_##5080[VV##5079:=lq_tmp$x##5096][lq_tmp$x##5030:=lq_anf$##7205759403792805280##d32o][lq_tmp$x##5031:=lq_anf$##7205759403792805283##d32r]}"]]],[{"spanInfo":{"endLine":124,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":33,"startLine":124,"startCol":16},"realSpan":true},[["GHC.Num.$fNumInt","{lq_tmp$x##5540 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##5540 == GHC.Num.$fNumInt}"]]],[{"spanInfo":{"endLine":64,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":44,"startLine":64,"startCol":15},"realSpan":true},[["FibHeap.Node","{VV : forall a .\n      lq_tmp$x##1191:{lq_tmp$x##1175 : GHC.Types.Int | lq_tmp$x##1175 >= 0} -> lq_tmp$x##1192:a -> lq_tmp$x##1193:[(FibHeap.FibTree a)] -> lq_tmp$x##1194:GHC.Types.Bool -> {lq_tmp$x##1185 : (FibHeap.FibTree a) | is$FibHeap.Node lq_tmp$x##1185\n                                                                                                                                                                                                                    && lq_tmp$x##1185 == FibHeap.Node lq_tmp$x##1191 lq_tmp$x##1192 lq_tmp$x##1193 lq_tmp$x##1194\n                                                                                                                                                                                                                    && FibHeap.marked lq_tmp$x##1185 == lq_tmp$x##1194\n                                                                                                                                                                                                                    && FibHeap.rank lq_tmp$x##1185 == lq_tmp$x##1191\n                                                                                                                                                                                                                    && FibHeap.root lq_tmp$x##1185 == lq_tmp$x##1192\n                                                                                                                                                                                                                    && FibHeap.size lq_tmp$x##1185 == FibHeap.pow2 lq_tmp$x##1191\n                                                                                                                                                                                                                    && FibHeap.subtrees lq_tmp$x##1185 == lq_tmp$x##1193} | VV == FibHeap.Node}"]]],[{"spanInfo":{"endLine":82,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":8,"startLine":82,"startCol":1},"realSpan":true},[["FibHeap.findMin","forall a .\n(GHC.Classes.Ord<[]> a) =>\nlq_tmp$x##2439:(FibHeap.FibHeap a) -> a"]]],[{"spanInfo":{"endLine":111,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":32,"startLine":111,"startCol":30},"realSpan":true},[["xs","{lq_tmp$x##2434 : [a] | lq_tmp$x##2434 == xs##a1Yr\n                        && FibHeap.lsize lq_tmp$x##2434 >= len lq_tmp$x##2434\n                        && len lq_tmp$x##2434 >= 0}"]]],[{"spanInfo":{"endLine":108,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":31,"startLine":108,"startCol":21},"realSpan":true},[["lq_anf$##7205759403792805277","lq_tmp$x##4511:{lq_tmp$x##4490 : [(FibHeap.FibTree {lq_tmp$x##4518 : a | $k_##4517[VV##4516:=lq_tmp$x##4518][lq_tmp$x##4510:=fix$36$$36$dOrd_a24T]})] | len lq_tmp$x##4490 > 0} -> ((FibHeap.FibTree {lq_tmp$x##4518 : a | $k_##4517[VV##4516:=lq_tmp$x##4518][lq_tmp$x##4510:=fix$36$$36$dOrd_a24T]}), [(FibHeap.FibTree {lq_tmp$x##4518 : a | $k_##4517[VV##4516:=lq_tmp$x##4518][lq_tmp$x##4510:=fix$36$$36$dOrd_a24T]})])"]]],[{"spanInfo":{"endLine":99,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":41,"startLine":99,"startCol":34},"realSpan":true},[["GHC.Tuple.(,)","{VV : forall a b <p2 :: a b -> Bool>.\n      lq_tmp$x##3090:a -> lq_tmp$x##3091:{lq_tmp$x##3082 : b<p2 lq_tmp$x##3090> | true} -> {lq_tmp$x##3087 : (a, b)<\\lq_tmp$x##3092 VV -> {lq_tmp$x##3086 : b<p2 lq_tmp$x##3092> | true}> | is$GHC.Tuple.(,) lq_tmp$x##3087\n                                                                                                                                                                                            && lq_tmp$x##3087 == GHC.Tuple.(,) lq_tmp$x##3090 lq_tmp$x##3091\n                                                                                                                                                                                            && fst lq_tmp$x##3087 == lq_tmp$x##3090\n                                                                                                                                                                                            && lqdc##$select##GHC.Tuple.(,)##1 lq_tmp$x##3087 == lq_tmp$x##3090\n                                                                                                                                                                                            && lqdc##$select##GHC.Tuple.(,)##2 lq_tmp$x##3087 == lq_tmp$x##3091\n                                                                                                                                                                                            && snd lq_tmp$x##3087 == lq_tmp$x##3091\n                                                                                                                                                                                            && x_Tuple21 lq_tmp$x##3087 == lq_tmp$x##3090\n                                                                                                                                                                                            && x_Tuple22 lq_tmp$x##3087 == lq_tmp$x##3091} | VV == GHC.Tuple.(,)}"]]],[{"spanInfo":{"endLine":118,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":46,"startLine":118,"startCol":44},"realSpan":true},[["ts","{lq_tmp$x##5633 : [(FibHeap.FibTree a)] | lq_tmp$x##5633 == ts##a1Yt\n                                          && FibHeap.lsize lq_tmp$x##5633 >= len lq_tmp$x##5633\n                                          && len lq_tmp$x##5633 >= 0}"]]],[{"spanInfo":{"endLine":91,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":55,"startLine":91,"startCol":53},"realSpan":true},[["xs","{lq_tmp$x##1746 : [(FibHeap.FibTree a)] | lq_tmp$x##1746 == xs##a1Y4\n                                          && FibHeap.lsize lq_tmp$x##1746 >= len lq_tmp$x##1746\n                                          && len lq_tmp$x##1746 >= 0}"]]],[{"spanInfo":{"endLine":118,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":35,"startLine":118,"startCol":30},"realSpan":true},[["minTr","{lq_tmp$x##5612 : (FibHeap.FibTree a) | lq_tmp$x##5612 == minTr##a1Ys\n                                        && FibHeap.size lq_tmp$x##5612 == FibHeap.pow2 (FibHeap.rank lq_tmp$x##5612)\n                                        && 0 < FibHeap.size lq_tmp$x##5612}"]]],[{"spanInfo":{"endLine":92,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":34,"startLine":90,"startCol":5},"realSpan":true},[["lq_anf$##7205759403792805228","{lq_tmp$x##1445 : [(FibHeap.FibTree a)] | lq_tmp$x##1445 == ds_d2XJ\n                                          && FibHeap.lsize lq_tmp$x##1445 >= len lq_tmp$x##1445\n                                          && len lq_tmp$x##1445 >= 0}"]]],[{"spanInfo":{"endLine":87,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":32,"startLine":87,"startCol":28},"realSpan":true},[["lq_anf$##7205759403792805236","lq_tmp$x##1774:[(FibHeap.FibTree {lq_tmp$x##1780 : a | $k_##1779[VV##1778:=lq_tmp$x##1780][lq_tmp$x##1773:=fix$36$$36$dOrd_a24f]})] -> lq_tmp$x##1775:(FibHeap.FibTree {lq_tmp$x##1780 : a | $k_##1779[VV##1778:=lq_tmp$x##1780][lq_tmp$x##1773:=fix$36$$36$dOrd_a24f]}) -> {lq_tmp$x##1768 : [(FibHeap.FibTree {lq_tmp$x##1780 : a | $k_##1779[VV##1778:=lq_tmp$x##1780][lq_tmp$x##1773:=fix$36$$36$dOrd_a24f]})] | len lq_tmp$x##1768 > 0\n                                                                                                                                                                                                                                                                                                                                                                                                                     && len lq_tmp$x##1768 <= len lq_tmp$x##1774 + 1}"]]],[{"spanInfo":{"endLine":47,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":15,"startLine":47,"startCol":1},"realSpan":true},[["FibHeap.isEmptyFibHeap","forall a .\nlq_tmp$x##718:(FibHeap.FibHeap a) -> {VV : GHC.Types.Bool | (VV\n                                                             && not (FibHeap.notEmptyFibHeap lq_tmp$x##718))\n                                                            || (FibHeap.notEmptyFibHeap lq_tmp$x##718\n                                                                && not VV)\n                                                            && (VV <=> FibHeap.isEmptyFibHeap lq_tmp$x##718)}"]]],[{"spanInfo":{"endLine":92,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":34,"startLine":91,"startCol":22},"realSpan":true},[["lq_anf$##7205759403792805233","{lq_tmp$x##1600 : GHC.Types.Bool | (lq_tmp$x##1600 <=> lq_anf$##7205759403792805230##d31A == lq_anf$##7205759403792805231##d31B)\n                                   && lq_tmp$x##1600 == lq_anf$##7205759403792805232##d31C}"]]],[{"spanInfo":{"endLine":73,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":62,"startLine":73,"startCol":35},"realSpan":true},[["FibHeap.FH","{VV : forall a .\n      lq_tmp$x##2293:(FibHeap.FibTree a) -> lq_tmp$x##2294:[(FibHeap.FibTree a)] -> {lq_tmp$x##2289 : (FibHeap.FibHeap a) | FibHeap.notEmptyFibHeap lq_tmp$x##2289\n                                                                                                                            && is$FibHeap.FH lq_tmp$x##2289\n                                                                                                                            && not (FibHeap.isEmptyFibHeap lq_tmp$x##2289)\n                                                                                                                            && not (is$FibHeap.E lq_tmp$x##2289)\n                                                                                                                            && lq_tmp$x##2289 == FibHeap.FH lq_tmp$x##2293 lq_tmp$x##2294\n                                                                                                                            && FibHeap.fibsize lq_tmp$x##2289 == FibHeap.size lq_tmp$x##2293 + FibHeap.lsize lq_tmp$x##2294\n                                                                                                                            && FibHeap.minTree lq_tmp$x##2289 == lq_tmp$x##2293\n                                                                                                                            && FibHeap.trees lq_tmp$x##2289 == lq_tmp$x##2294} | VV == FibHeap.FH}"]]],[{"spanInfo":{"endLine":123,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":13,"startLine":123,"startCol":12},"realSpan":true},[["lq_anf$##7205759403792805311","{lq_tmp$x##5449 : GHC.Prim.Int# | lq_tmp$x##5449 == 0}"]]],[{"spanInfo":{"endLine":71,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":6,"startLine":71,"startCol":1},"realSpan":true},[["FibHeap.merge","forall a .\n(GHC.Classes.Ord<[]> a) =>\nlq_tmp$x##1926:(FibHeap.FibHeap a) -> lq_tmp$x##1927:{VV##0 : (FibHeap.FibHeap a) | FibHeap.notEmptyFibHeap VV##0} -> {VV##0 : (FibHeap.FibHeap a) | FibHeap.notEmptyFibHeap VV##0\n                                                                                                                                                     && (FibHeap.root (FibHeap.minTree VV##0) == FibHeap.root (FibHeap.minTree lq_tmp$x##1926)\n                                                                                                                                                         && FibHeap.root (FibHeap.minTree lq_tmp$x##1926) < FibHeap.root (FibHeap.minTree lq_tmp$x##1927))\n                                                                                                                                                        || ((FibHeap.root (FibHeap.minTree lq_tmp$x##1927) <= FibHeap.root (FibHeap.minTree lq_tmp$x##1926)\n                                                                                                                                                             || not (FibHeap.notEmptyFibHeap lq_tmp$x##1926))\n                                                                                                                                                            && FibHeap.root (FibHeap.minTree VV##0) == FibHeap.root (FibHeap.minTree lq_tmp$x##1927))}"]]],[{"spanInfo":{"endLine":73,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":18,"startLine":73,"startCol":7},"realSpan":true},[["lq_anf$##7205759403792805245","{lq_tmp$x##2046 : a | lq_tmp$x##2046 == FibHeap.root minTr1##a1XQ\n                      && $k_##2045[VV##2044:=lq_tmp$x##2046][lq_tmp$x##2043:=minTr1##a1XQ]}"]]],[{"spanInfo":{"endLine":73,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":56,"startLine":73,"startCol":53},"realSpan":true},[["ts2","{lq_tmp$x##2232 : [(FibHeap.FibTree a)] | lq_tmp$x##2232 == ts2##a1XU\n                                          && FibHeap.lsize lq_tmp$x##2232 >= len lq_tmp$x##2232\n                                          && len lq_tmp$x##2232 >= 0}"]]],[{"spanInfo":{"endLine":87,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":35,"startLine":87,"startCol":34},"realSpan":true},[["x","{lq_tmp$x##1831 : (FibHeap.FibTree a) | lq_tmp$x##1831 == x##a1XX\n                                        && FibHeap.size lq_tmp$x##1831 == FibHeap.pow2 (FibHeap.rank lq_tmp$x##1831)\n                                        && 0 < FibHeap.size lq_tmp$x##1831}"]]],[{"spanInfo":{"endLine":59,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":36,"startLine":59,"startCol":31},"realSpan":true},[["GHC.Types.False","{lq_tmp$x##835 : GHC.Types.Bool | not lq_tmp$x##835\n                                  && lq_tmp$x##835 == GHC.Types.False}"]]],[{"spanInfo":{"endLine":99,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":18,"startLine":99,"startCol":17},"realSpan":true},[["t","{lq_tmp$x##2942 : (FibHeap.FibTree a) | lq_tmp$x##2942 == t##a1Y6\n                                        && FibHeap.size lq_tmp$x##2942 == FibHeap.pow2 (FibHeap.rank lq_tmp$x##2942)\n                                        && 0 < FibHeap.size lq_tmp$x##2942}"]]],[{"spanInfo":{"endLine":87,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":39,"startLine":87,"startCol":22},"realSpan":true},[["Data.Foldable.$fFoldable[]","{lq_tmp$x##1863 : (Data.Foldable.Foldable []) | lq_tmp$x##1863 == Data.Foldable.$fFoldable[]}"]]],[{"spanInfo":{"endLine":92,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":34,"startLine":92,"startCol":29},"realSpan":true},[["lq_anf$##7205759403792805234","{lq_tmp$x##1615 : [{lq_tmp$x##1628 : (FibHeap.FibTree {lq_tmp$x##1627 : a | $k_##1624[VV##1623:=lq_tmp$x##1627][VV##1625:=lq_tmp$x##1628][lq_tmp$x##1619:=x'##a1Y3][lq_tmp$x##1620:=xs##a1Y4]}) | $k_##1626[VV##1625:=lq_tmp$x##1628][lq_tmp$x##1619:=x'##a1Y3][lq_tmp$x##1620:=xs##a1Y4]}]<\\lq_tmp$x##1622 VV -> {lq_tmp$x##1628 : (FibHeap.FibTree {lq_tmp$x##1627 : a | $k_##1630[VV##1629:=lq_tmp$x##1627][VV##1631:=lq_tmp$x##1628][lq_tmp$x##1619:=x'##a1Y3][lq_tmp$x##1620:=xs##a1Y4][lq_tmp$x##1633:=lq_tmp$x##1622]}) | $k_##1632[VV##1631:=lq_tmp$x##1628][lq_tmp$x##1619:=x'##a1Y3][lq_tmp$x##1620:=xs##a1Y4][lq_tmp$x##1633:=lq_tmp$x##1622]}> | is$GHC.Types.: lq_tmp$x##1615\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             && not (is$GHC.Types.[] lq_tmp$x##1615)\nlq_tmp$x##1615 == GHC.Types.: x'##a1Y3 xs##a1Y4\nibHeap.lsize lq_tmp$x##1615 == FibHeap.size x'##a1Y3 + FibHeap.lsize xs##a1Y4\nhead lq_tmp$x##1615 == x'##a1Y3\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             && len lq_tmp$x##1615 == 1 + len xs##a1Y4\nlqdc##$select##GHC.Types.:##1 lq_tmp$x##1615 == x'##a1Y3\nlqdc##$select##GHC.Types.:##2 lq_tmp$x##1615 == xs##a1Y4\ntail lq_tmp$x##1615 == xs##a1Y4}"]]],[{"spanInfo":{"endLine":59,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":30,"startLine":59,"startCol":28},"realSpan":true},[[null,"{VV : forall a <p :: a a -> Bool>.\n      {lq_tmp$x##787 : [a]<\\lq_tmp$x##788 VV -> {lq_tmp$x##786 : a<p lq_tmp$x##788> | true}> | is$GHC.Types.[] lq_tmp$x##787\n                                                                                               && not (is$GHC.Types.: lq_tmp$x##787)\n                                                                                               && lq_tmp$x##787 == GHC.Types.[]\n                                                                                               && FibHeap.lsize lq_tmp$x##787 == 0\n                                                                                               && len lq_tmp$x##787 == 0} | VV == GHC.Types.[]}"]]],[{"spanInfo":{"endLine":135,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":5,"startLine":135,"startCol":1},"realSpan":true},[["FibHeap.size","forall a .\nlq_tmp$x##5363:(FibHeap.FibTree a) -> {VV : GHC.Types.Int | VV == FibHeap.pow2 (FibHeap.rank lq_tmp$x##5363)\n                                                            && VV == FibHeap.size lq_tmp$x##5363\n                                                            && 0 < VV}"]]],[{"spanInfo":{"endLine":96,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":20,"startLine":96,"startCol":19},"realSpan":true},[["t","{lq_tmp$x##2727 : (FibHeap.FibTree a) | lq_tmp$x##2727 == t##a1Y6\n                                        && FibHeap.size lq_tmp$x##2727 == FibHeap.pow2 (FibHeap.rank lq_tmp$x##2727)\n                                        && 0 < FibHeap.size lq_tmp$x##2727}"]]],[{"spanInfo":{"endLine":104,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":39,"startLine":104,"startCol":38},"realSpan":true},[[null,"{VV : forall a .\n      {lq_tmp$x##3304 : (FibHeap.FibHeap a) | FibHeap.isEmptyFibHeap lq_tmp$x##3304\n                                              && is$FibHeap.E lq_tmp$x##3304\n                                              && not (FibHeap.notEmptyFibHeap lq_tmp$x##3304)\n                                              && not (is$FibHeap.FH lq_tmp$x##3304)\n                                              && lq_tmp$x##3304 == FibHeap.E} | VV == FibHeap.E}"]]],[{"spanInfo":{"endLine":41,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":26,"startLine":41,"startCol":21},"realSpan":true},[["GHC.Types.False","{lq_tmp$x##681 : GHC.Types.Bool | not lq_tmp$x##681\n                                  && lq_tmp$x##681 == GHC.Types.False}"]]],[{"spanInfo":{"endLine":99,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":28,"startLine":99,"startCol":21},"realSpan":true},[["lq_anf$##7205759403792805262","{lq_tmp$x##2951 : a | lq_tmp$x##2951 == FibHeap.root t'##a23e\n                      && $k_##2950[VV##2949:=lq_tmp$x##2951][lq_tmp$x##2948:=t'##a23e]}"]]],[{"spanInfo":{"endLine":108,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":59,"startLine":108,"startCol":21},"realSpan":true},[[null,"{lq_tmp$x##4672 : ({lq_tmp$x##4658 : (FibHeap.FibTree {lq_tmp$x##4657 : a | $k_##4629[VV##4628:=lq_tmp$x##4657][VV##4630:=lq_tmp$x##4658][VV##4655:=lq_tmp$x##4672][lq_tmp$x##4606:=lq_anf$##7205759403792805277##d32l][lq_tmp$x##4607:=lq_anf$##7205759403792805279##d32n]}) | $k_##4631[VV##4630:=lq_tmp$x##4658][VV##4655:=lq_tmp$x##4672][lq_tmp$x##4606:=lq_anf$##7205759403792805277##d32l][lq_tmp$x##4607:=lq_anf$##7205759403792805279##d32n]}, {lq_tmp$x##4664 : [{lq_tmp$x##4660 : (FibHeap.FibTree {lq_tmp$x##4659 : a | $k_##4633[VV##4632:=lq_tmp$x##4659][VV##4634:=lq_tmp$x##4660][VV##4641:=lq_tmp$x##4664][VV##4655:=lq_tmp$x##4672][lq_tmp$x##4606:=lq_anf$##7205759403792805277##d32l][lq_tmp$x##4607:=lq_anf$##7205759403792805279##d32n]}) | $k_##4635[VV##4634:=lq_tmp$x##4660][VV##4641:=lq_tmp$x##4664][VV##4655:=lq_tmp$x##4672][lq_tmp$x##4606:=lq_anf$##7205759403792805277##d32l][lq_tmp$x##4607:=lq_anf$##7205759403792805279##d32n]}]<\\lq_tmp$x##4661 VV -> {lq_tmp$x##4663 : (FibHeap.FibTree {lq_tmp$x##4662 : a | $k_##4638[VV##4637:=lq_tmp$x##4662][VV##4639:=lq_tmp$x##4663][VV##4641:=lq_tmp$x##4664][VV##4655:=lq_tmp$x##4672][lq_tmp$x##4606:=lq_anf$##7205759403792805277##d32l][lq_tmp$x##4607:=lq_anf$##7205759403792805279##d32n][lq_tmp$x##4636:=lq_tmp$x##4661]}) | $k_##4640[VV##4639:=lq_tmp$x##4663][VV##4641:=lq_tmp$x##4664][VV##4655:=lq_tmp$x##4672][lq_tmp$x##4606:=lq_anf$##7205759403792805277##d32l][lq_tmp$x##4607:=lq_anf$##7205759403792805279##d32n][lq_tmp$x##4636:=lq_tmp$x##4661]}> | $k_##4642[VV##4641:=lq_tmp$x##4664][VV##4655:=lq_tmp$x##4672][lq_tmp$x##4606:=lq_anf$##7205759403792805277##d32l][lq_tmp$x##4607:=lq_anf$##7205759403792805279##d32n]})<\\lq_tmp$x##4665 VV -> {lq_tmp$x##4671 : [{lq_tmp$x##4667 : (FibHeap.FibTree {lq_tmp$x##4666 : a | $k_##4645[VV##4644:=lq_tmp$x##4666][VV##4646:=lq_tmp$x##4667][VV##4653:=lq_tmp$x##4671][VV##4655:=lq_tmp$x##4672][lq_tmp$x##4606:=lq_anf$##7205759403792805277##d32l][lq_tmp$x##4607:=lq_anf$##7205759403792805279##d32n][lq_tmp$x##4643:=lq_tmp$x##4665]}) | $k_##4647[VV##4646:=lq_tmp$x##4667][VV##4653:=lq_tmp$x##4671][VV##4655:=lq_tmp$x##4672][lq_tmp$x##4606:=lq_anf$##7205759403792805277##d32l][lq_tmp$x##4607:=lq_anf$##7205759403792805279##d32n][lq_tmp$x##4643:=lq_tmp$x##4665]}]<\\lq_tmp$x##4668 VV -> {lq_tmp$x##4670 : (FibHeap.FibTree {lq_tmp$x##4669 : a | $k_##4650[VV##4649:=lq_tmp$x##4669][VV##4651:=lq_tmp$x##4670][VV##4653:=lq_tmp$x##4671][VV##4655:=lq_tmp$x##4672][lq_tmp$x##4606:=lq_anf$##7205759403792805277##d32l][lq_tmp$x##4607:=lq_anf$##7205759403792805279##d32n][lq_tmp$x##4643:=lq_tmp$x##4665][lq_tmp$x##4648:=lq_tmp$x##4668]}) | $k_##4652[VV##4651:=lq_tmp$x##4670][VV##4653:=lq_tmp$x##4671][VV##4655:=lq_tmp$x##4672][lq_tmp$x##4606:=lq_anf$##7205759403792805277##d32l][lq_tmp$x##4607:=lq_anf$##7205759403792805279##d32n][lq_tmp$x##4643:=lq_tmp$x##4665][lq_tmp$x##4648:=lq_tmp$x##4668]}> | $k_##4654[VV##4653:=lq_tmp$x##4671][VV##4655:=lq_tmp$x##4672][lq_tmp$x##4606:=lq_anf$##7205759403792805277##d32l][lq_tmp$x##4607:=lq_anf$##7205759403792805279##d32n][lq_tmp$x##4643:=lq_tmp$x##4665]}> | $k_##4656[VV##4655:=lq_tmp$x##4672][lq_tmp$x##4606:=lq_anf$##7205759403792805277##d32l][lq_tmp$x##4607:=lq_anf$##7205759403792805279##d32n]}"]]],[{"spanInfo":{"endLine":96,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":11,"startLine":96,"startCol":1},"realSpan":true},[["FibHeap.extractMin","forall a .\n(GHC.Classes.Ord<[]> a) =>\nlq_tmp$x##2507:{t : [(FibHeap.FibTree a)] | len t > 0} -> ((FibHeap.FibTree a), [(FibHeap.FibTree a)])"]]],[{"spanInfo":{"endLine":130,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":24,"startLine":130,"startCol":10},"realSpan":true},[["GHC.Num.$fNumInt","{lq_tmp$x##5351 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##5351 == GHC.Num.$fNumInt}"]]],[{"spanInfo":{"endLine":64,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":38,"startLine":64,"startCol":30},"realSpan":true},[["lq_anf$##7205759403792805224","{lq_tmp$x##1145 : [{lq_tmp$x##1158 : (FibHeap.FibTree {lq_tmp$x##1157 : a | $k_##1154[VV##1153:=lq_tmp$x##1157][VV##1155:=lq_tmp$x##1158][lq_tmp$x##1149:=lq_anf$##7205759403792805214##d31k][lq_tmp$x##1150:=ts1##a1XK]}) | $k_##1156[VV##1155:=lq_tmp$x##1158][lq_tmp$x##1149:=lq_anf$##7205759403792805214##d31k][lq_tmp$x##1150:=ts1##a1XK]}]<\\lq_tmp$x##1152 VV -> {lq_tmp$x##1158 : (FibHeap.FibTree {lq_tmp$x##1157 : a | $k_##1160[VV##1159:=lq_tmp$x##1157][VV##1161:=lq_tmp$x##1158][lq_tmp$x##1149:=lq_anf$##7205759403792805214##d31k][lq_tmp$x##1150:=ts1##a1XK][lq_tmp$x##1163:=lq_tmp$x##1152]}) | $k_##1162[VV##1161:=lq_tmp$x##1158][lq_tmp$x##1149:=lq_anf$##7205759403792805214##d31k][lq_tmp$x##1150:=ts1##a1XK][lq_tmp$x##1163:=lq_tmp$x##1152]}> | is$GHC.Types.: lq_tmp$x##1145\nnot (is$GHC.Types.[] lq_tmp$x##1145)\nlq_tmp$x##1145 == GHC.Types.: lq_anf$##7205759403792805214##d31k ts1##a1XK\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         && FibHeap.lsize lq_tmp$x##1145 == FibHeap.size lq_anf$##7205759403792805214##d31k + FibHeap.lsize ts1##a1XK\nhead lq_tmp$x##1145 == lq_anf$##7205759403792805214##d31k\nlen lq_tmp$x##1145 == 1 + len ts1##a1XK\nlqdc##$select##GHC.Types.:##1 lq_tmp$x##1145 == lq_anf$##7205759403792805214##d31k\nlqdc##$select##GHC.Types.:##2 lq_tmp$x##1145 == ts1##a1XK\ntail lq_tmp$x##1145 == ts1##a1XK}"]]],[{"spanInfo":{"endLine":65,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":33,"startLine":65,"startCol":32},"realSpan":true},[["y","{lq_tmp$x##1098 : a | lq_tmp$x##1098 == y##a1XM}"]]],[{"spanInfo":{"endLine":135,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":29,"startLine":135,"startCol":23},"realSpan":true},[["FibHeap.pow2","lq_tmp$x##5415:{lq_tmp$x##5412 : GHC.Types.Int | lq_tmp$x##5412 >= 0} -> {lq_tmp$x##5413 : GHC.Types.Int | lq_tmp$x##5413 == FibHeap.pow2 lq_tmp$x##5415\n                                                                                                           && lq_tmp$x##5413 == (if 0 == lq_tmp$x##5415 then 1 else 2 * FibHeap.pow2 (lq_tmp$x##5415 - 1))\n                                                                                                           && 0 < lq_tmp$x##5413}"]]],[{"spanInfo":{"endLine":118,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":46,"startLine":118,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792805315","{lq_tmp$x##5556 : GHC.Prim.Addr# | lq_tmp$x##5556 == \"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs:118:1-45|function fibsize\"}"]]],[{"spanInfo":{"endLine":91,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":31,"startLine":91,"startCol":25},"realSpan":true},[["lq_anf$##7205759403792805230","{lq_tmp$x##1561 : GHC.Types.Int | lq_tmp$x##1561 == FibHeap.rank x##a1Y2\n                                  && lq_tmp$x##1561 >= 0}"]]],[{"spanInfo":{"endLine":73,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":52,"startLine":73,"startCol":46},"realSpan":true},[["minTr2","{lq_tmp$x##2271 : (FibHeap.FibTree a) | lq_tmp$x##2271 == minTr2##a1XT\n                                        && FibHeap.size lq_tmp$x##2271 == FibHeap.pow2 (FibHeap.rank lq_tmp$x##2271)\n                                        && 0 < FibHeap.size lq_tmp$x##2271}"]]],[{"spanInfo":{"endLine":79,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":35,"startLine":79,"startCol":22},"realSpan":true},[["lq_anf$##7205759403792805253","{lq_tmp$x##2320 : (FibHeap.FibHeap {lq_tmp$x##2325 : a | $k_##2324[VV##2323:=lq_tmp$x##2325][lq_tmp$x##2322:=x##a1XW]}) | FibHeap.notEmptyFibHeap lq_tmp$x##2320\n                                                                                                                          && FibHeap.rank (FibHeap.minTree lq_tmp$x##2320) == 1\n                                                                                                                          && FibHeap.subtrees (FibHeap.minTree lq_tmp$x##2320) == GHC.Types.[]\n                                                                                                                          && FibHeap.trees lq_tmp$x##2320 == GHC.Types.[]\n                                                                                                                          && FibHeap.root (FibHeap.minTree lq_tmp$x##2320) == x##a1XW}"]]],[{"spanInfo":{"endLine":106,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":31,"startLine":106,"startCol":21},"realSpan":true},[["lq_anf$##7205759403792805280","lq_tmp$x##4918:{lq_tmp$x##4897 : [(FibHeap.FibTree {lq_tmp$x##4925 : a | $k_##4924[VV##4923:=lq_tmp$x##4925][lq_tmp$x##4917:=fix$36$$36$dOrd_a24T]})] | len lq_tmp$x##4897 > 0} -> ((FibHeap.FibTree {lq_tmp$x##4925 : a | $k_##4924[VV##4923:=lq_tmp$x##4925][lq_tmp$x##4917:=fix$36$$36$dOrd_a24T]}), [(FibHeap.FibTree {lq_tmp$x##4925 : a | $k_##4924[VV##4923:=lq_tmp$x##4925][lq_tmp$x##4917:=fix$36$$36$dOrd_a24T]})])"]]],[{"spanInfo":{"endLine":71,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":14,"startLine":71,"startCol":13},"realSpan":true},[["h","{lq_tmp$x##1943 : (FibHeap.FibHeap a) | FibHeap.notEmptyFibHeap lq_tmp$x##1943\n                                        && (FibHeap.isEmptyFibHeap lq_tmp$x##1943\n                                            && not (FibHeap.notEmptyFibHeap lq_tmp$x##1943))\n                                           || (FibHeap.notEmptyFibHeap lq_tmp$x##1943\n                                               && not (FibHeap.isEmptyFibHeap lq_tmp$x##1943))\n                                        && lq_tmp$x##1943 == h##a1XO\n                                        && 0 < FibHeap.fibsize lq_tmp$x##1943}"]]],[{"spanInfo":{"endLine":108,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":12,"startLine":108,"startCol":6},"realSpan":true},[["minTr'","{VV##4712 : (FibHeap.FibTree {VV##4710 : a | $k_##4711}) | $k_##4713}"]]],[{"spanInfo":{"endLine":123,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":6,"startLine":123,"startCol":1},"realSpan":true},[["FibHeap.lsize","forall a .\nlq_tmp$x##5419:[(FibHeap.FibTree a)] -> {VV : GHC.Types.Int | VV == FibHeap.lsize lq_tmp$x##5419\n                                                              && VV >= len lq_tmp$x##5419}"]]],[{"spanInfo":{"endLine":99,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":36,"startLine":99,"startCol":35},"realSpan":true},[["t","{lq_tmp$x##3130 : (FibHeap.FibTree a) | lq_tmp$x##3130 == t##a1Y6\n                                        && FibHeap.size lq_tmp$x##3130 == FibHeap.pow2 (FibHeap.rank lq_tmp$x##3130)\n                                        && 0 < FibHeap.size lq_tmp$x##3130}"]]],[{"spanInfo":{"endLine":124,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":22,"startLine":124,"startCol":21},"realSpan":true},[["t","{lq_tmp$x##5503 : (FibHeap.FibTree a) | lq_tmp$x##5503 == t##a1Yu\n                                        && FibHeap.size lq_tmp$x##5503 == FibHeap.pow2 (FibHeap.rank lq_tmp$x##5503)\n                                        && 0 < FibHeap.size lq_tmp$x##5503}"]]],[{"spanInfo":{"endLine":48,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":25,"startLine":48,"startCol":20},"realSpan":true},[["GHC.Types.False","{lq_tmp$x##766 : GHC.Types.Bool | not lq_tmp$x##766\n                                  && lq_tmp$x##766 == GHC.Types.False}"]]],[{"spanInfo":{"endLine":64,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":12,"startLine":64,"startCol":7},"realSpan":true},[["lq_anf$##7205759403792805215","{lq_tmp$x##988 : GHC.Types.Bool | lq_tmp$x##988 <=> x##a1XJ < y##a1XM}"]]],[{"spanInfo":{"endLine":107,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":64,"startLine":107,"startCol":58},"realSpan":true},[["minTr'","{lq_tmp$x##4844 : (FibHeap.FibTree {lq_tmp$x##4843 : a | $k_##4711[VV##4710:=lq_tmp$x##4843][VV##4712:=lq_tmp$x##4844]}) | lq_tmp$x##4844 == minTr'##a25o\n                                                                                                                           && FibHeap.size lq_tmp$x##4844 == FibHeap.pow2 (FibHeap.rank lq_tmp$x##4844)\n                                                                                                                           && 0 < FibHeap.size lq_tmp$x##4844\n                                                                                                                           && $k_##4713[VV##4712:=lq_tmp$x##4844]}"]]],[{"spanInfo":{"endLine":105,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":45,"startLine":105,"startCol":39},"realSpan":true},[["minTr'","{lq_tmp$x##5268 : (FibHeap.FibTree {lq_tmp$x##5267 : a | $k_##5135[VV##5134:=lq_tmp$x##5267][VV##5136:=lq_tmp$x##5268]}) | lq_tmp$x##5268 == minTr'##a251\n                                                                                                                           && FibHeap.size lq_tmp$x##5268 == FibHeap.pow2 (FibHeap.rank lq_tmp$x##5268)\n                                                                                                                           && 0 < FibHeap.size lq_tmp$x##5268\n                                                                                                                           && $k_##5137[VV##5136:=lq_tmp$x##5268]}"]]],[{"spanInfo":{"endLine":64,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":44,"startLine":64,"startCol":39},"realSpan":true},[["GHC.Types.False","{lq_tmp$x##1208 : GHC.Types.Bool | not lq_tmp$x##1208\n                                   && lq_tmp$x##1208 == GHC.Types.False}"]]],[{"spanInfo":{"endLine":86,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":12,"startLine":86,"startCol":1},"realSpan":true},[["FibHeap.consolidate","forall a .\n(GHC.Classes.Ord<[]> a) =>\nlq_tmp$x##1215:{t : [(FibHeap.FibTree a)] | len t > 0} -> {v : [(FibHeap.FibTree a)] | len v > 0}"]]],[{"spanInfo":{"endLine":74,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":45,"startLine":74,"startCol":42},"realSpan":true},[["ts2","{lq_tmp$x##2126 : [(FibHeap.FibTree a)] | lq_tmp$x##2126 == ts2##a1XU\n                                          && FibHeap.lsize lq_tmp$x##2126 >= len lq_tmp$x##2126\n                                          && len lq_tmp$x##2126 >= 0}"]]],[{"spanInfo":{"endLine":63,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":28,"startLine":63,"startCol":26},"realSpan":true},[["t2","{t2 : (FibHeap.FibTree a) | FibHeap.rank t1##a1XH == FibHeap.rank t2}"]]],[{"spanInfo":{"endLine":130,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":24,"startLine":130,"startCol":14},"realSpan":true},[["lq_anf$##7205759403792805307","{VV##0 : GHC.Types.Int | 0 < VV##0}"]]],[{"spanInfo":{"endLine":65,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":48,"startLine":65,"startCol":43},"realSpan":true},[["GHC.Types.False","{lq_tmp$x##1106 : GHC.Types.Bool | not lq_tmp$x##1106\n                                   && lq_tmp$x##1106 == GHC.Types.False}"]]],[{"spanInfo":{"endLine":92,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":31,"startLine":92,"startCol":29},"realSpan":true},[["x'","{lq_tmp$x##1636 : (FibHeap.FibTree a) | lq_tmp$x##1636 == x'##a1Y3\n                                        && FibHeap.size lq_tmp$x##1636 == FibHeap.pow2 (FibHeap.rank lq_tmp$x##1636)\n                                        && 0 < FibHeap.size lq_tmp$x##1636}"]]],[{"spanInfo":{"endLine":106,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":68,"startLine":106,"startCol":34},"realSpan":true},[["lq_anf$##7205759403792805283","{lq_tmp$x##5001 : [(FibHeap.FibTree {lq_tmp$x##5011 : a | $k_##5010[VV##5009:=lq_tmp$x##5011][lq_tmp$x##5005:=fix$36$$36$dOrd_a24T][lq_tmp$x##5006:=lq_anf$##7205759403792805282##d32q]})] | len lq_tmp$x##5001 > 0}"]]],[{"spanInfo":{"endLine":124,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":33,"startLine":124,"startCol":31},"realSpan":true},[["ts","{lq_tmp$x##5524 : [(FibHeap.FibTree a)] | lq_tmp$x##5524 == ts##a1Yv\n                                          && len lq_tmp$x##5524 >= 0}"]]],[{"spanInfo":{"endLine":74,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":45,"startLine":74,"startCol":37},"realSpan":true},[["lq_anf$##7205759403792805249","{lq_tmp$x##2098 : [{lq_tmp$x##2113 : (FibHeap.FibTree {lq_tmp$x##2112 : a | $k_##2109[VV##2108:=lq_tmp$x##2112][VV##2110:=lq_tmp$x##2113][lq_tmp$x##2103:=ts1##a1XR][lq_tmp$x##2104:=ts2##a1XU]}) | $k_##2111[VV##2110:=lq_tmp$x##2113][lq_tmp$x##2103:=ts1##a1XR][lq_tmp$x##2104:=ts2##a1XU]}] | len lq_tmp$x##2098 == len ts1##a1XR + len ts2##a1XU}"]]],[{"spanInfo":{"endLine":47,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":24,"startLine":47,"startCol":20},"realSpan":true},[["GHC.Types.True","{lq_tmp$x##731 : GHC.Types.Bool | lq_tmp$x##731\n                                  && lq_tmp$x##731 == GHC.Types.True}"]]],[{"spanInfo":{"endLine":96,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":25,"startLine":96,"startCol":18},"realSpan":true},[["lq_anf$##7205759403792805266","{lq_tmp$x##2663 : [{lq_tmp$x##2670 : (FibHeap.FibTree {lq_tmp$x##2669 : a | $k_##2666[VV##2665:=lq_tmp$x##2669][VV##2667:=lq_tmp$x##2670]}) | $k_##2668[VV##2667:=lq_tmp$x##2670]}]<\\lq_tmp$x##2664 VV -> {lq_tmp$x##2670 : (FibHeap.FibTree {lq_tmp$x##2669 : a | $k_##2672[VV##2671:=lq_tmp$x##2669][VV##2673:=lq_tmp$x##2670][lq_tmp$x##2675:=lq_tmp$x##2664]}) | $k_##2674[VV##2673:=lq_tmp$x##2670][lq_tmp$x##2675:=lq_tmp$x##2664]}> | is$GHC.Types.[] lq_tmp$x##2663\n                                                                                                                                                                                                                                                                                                                                                                                                                                             && not (is$GHC.Types.: lq_tmp$x##2663)\n                                                                                                                                                                                                                                                                                                                                                                                                                                             && lq_tmp$x##2663 == GHC.Types.[]\n                                                                                                                                                                                                                                                                                                                                                                                                                                             && FibHeap.lsize lq_tmp$x##2663 == 0\n                                                                                                                                                                                                                                                                                                                                                                                                                                             && len lq_tmp$x##2663 == 0}"]]],[{"spanInfo":{"endLine":108,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":17,"startLine":108,"startCol":14},"realSpan":true},[["ts'","{VV##4770 : [{VV##4763 : (FibHeap.FibTree {VV##4761 : a | $k_##4762}) | $k_##4764}]<\\lq_tmp$x##4765 VV -> {VV##4768 : (FibHeap.FibTree {VV##4766 : a | $k_##4767}) | $k_##4769}> | $k_##4771}"]]],[{"spanInfo":{"endLine":130,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":23,"startLine":130,"startCol":22},"realSpan":true},[["lq_anf$##7205759403792805305","{lq_tmp$x##5310 : GHC.Types.Int | lq_tmp$x##5310 == (lq_anf$##7205759403792805304##d32M : int)}"]]],[{"spanInfo":{"endLine":98,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":34,"startLine":98,"startCol":21},"realSpan":true},[["FibHeap.extractMin","forall a .\n(GHC.Classes.Ord<[]> a) =>\nlq_tmp$x##2507:{t : [(FibHeap.FibTree a)] | len t > 0} -> ((FibHeap.FibTree a), [(FibHeap.FibTree a)])"]]],[{"spanInfo":{"endLine":99,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":28,"startLine":99,"startCol":12},"realSpan":true},[["lq_anf$##7205759403792805263","{lq_tmp$x##2959 : GHC.Types.Bool | lq_tmp$x##2959 <=> lq_anf$##7205759403792805261##d325 < lq_anf$##7205759403792805262##d326}"]]],[{"spanInfo":{"endLine":73,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":61,"startLine":73,"startCol":58},"realSpan":true},[["ts1","{lq_tmp$x##2239 : [(FibHeap.FibTree a)] | lq_tmp$x##2239 == ts1##a1XR\n                                          && FibHeap.lsize lq_tmp$x##2239 >= len lq_tmp$x##2239\n                                          && len lq_tmp$x##2239 >= 0}"]]],[{"spanInfo":{"endLine":73,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":32,"startLine":73,"startCol":21},"realSpan":true},[["lq_anf$##7205759403792805246","{lq_tmp$x##2057 : a | lq_tmp$x##2057 == FibHeap.root minTr2##a1XT\n                      && $k_##2056[VV##2055:=lq_tmp$x##2057][lq_tmp$x##2054:=minTr2##a1XT]}"]]],[{"spanInfo":{"endLine":118,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":35,"startLine":118,"startCol":25},"realSpan":true},[["lq_anf$##7205759403792805316","{lq_tmp$x##5605 : GHC.Types.Int | lq_tmp$x##5605 == FibHeap.pow2 (FibHeap.rank minTr##a1Ys)\n                                  && lq_tmp$x##5605 == FibHeap.size minTr##a1Ys\n                                  && 0 < lq_tmp$x##5605}"]]],[{"spanInfo":{"endLine":99,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":53,"startLine":99,"startCol":52},"realSpan":true},[["t","{lq_tmp$x##3010 : (FibHeap.FibTree a) | lq_tmp$x##3010 == t##a1Y6\n                                        && FibHeap.size lq_tmp$x##3010 == FibHeap.pow2 (FibHeap.rank lq_tmp$x##3010)\n                                        && 0 < FibHeap.size lq_tmp$x##3010}"]]],[{"spanInfo":{"endLine":107,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":68,"startLine":107,"startCol":55},"realSpan":true},[["FibHeap.FH","{VV : forall a .\n      lq_tmp$x##4837:(FibHeap.FibTree a) -> lq_tmp$x##4838:[(FibHeap.FibTree a)] -> {lq_tmp$x##4833 : (FibHeap.FibHeap a) | FibHeap.notEmptyFibHeap lq_tmp$x##4833\n                                                                                                                            && is$FibHeap.FH lq_tmp$x##4833\n                                                                                                                            && not (FibHeap.isEmptyFibHeap lq_tmp$x##4833)\n                                                                                                                            && not (is$FibHeap.E lq_tmp$x##4833)\n                                                                                                                            && lq_tmp$x##4833 == FibHeap.FH lq_tmp$x##4837 lq_tmp$x##4838\n                                                                                                                            && FibHeap.fibsize lq_tmp$x##4833 == FibHeap.size lq_tmp$x##4837 + FibHeap.lsize lq_tmp$x##4838\n                                                                                                                            && FibHeap.minTree lq_tmp$x##4833 == lq_tmp$x##4837\n                                                                                                                            && FibHeap.trees lq_tmp$x##4833 == lq_tmp$x##4838} | VV == FibHeap.FH}"]]],[{"spanInfo":{"endLine":105,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":49,"startLine":105,"startCol":46},"realSpan":true},[["ts'","{lq_tmp$x##5274 : [{lq_tmp$x##5270 : (FibHeap.FibTree {lq_tmp$x##5269 : a | $k_##5186[VV##5185:=lq_tmp$x##5269][VV##5187:=lq_tmp$x##5270][VV##5194:=lq_tmp$x##5274]}) | $k_##5188[VV##5187:=lq_tmp$x##5270][VV##5194:=lq_tmp$x##5274]}]<\\lq_tmp$x##5275 VV -> {lq_tmp$x##5273 : (FibHeap.FibTree {lq_tmp$x##5272 : a | $k_##5191[VV##5190:=lq_tmp$x##5272][VV##5192:=lq_tmp$x##5273][VV##5194:=lq_tmp$x##5274][lq_tmp$x##5189:=lq_tmp$x##5275][lq_tmp$x##5271:=lq_tmp$x##5275]}) | $k_##5193[VV##5192:=lq_tmp$x##5273][VV##5194:=lq_tmp$x##5274][lq_tmp$x##5189:=lq_tmp$x##5275][lq_tmp$x##5271:=lq_tmp$x##5275]}> | lq_tmp$x##5274 == ts'##a253\nibHeap.lsize lq_tmp$x##5274 >= len lq_tmp$x##5274\nlen lq_tmp$x##5274 >= 0\nk_##5195[VV##5194:=lq_tmp$x##5274]}"]]],[{"spanInfo":{"endLine":64,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":8,"startLine":64,"startCol":7},"realSpan":true},[["x","{lq_tmp$x##1000 : a | lq_tmp$x##1000 == x##a1XJ}"]]],[{"spanInfo":{"endLine":63,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":5,"startLine":63,"startCol":1},"realSpan":true},[["FibHeap.link","forall a .\n(GHC.Classes.Ord<[]> a) =>\nlq_tmp$x##885:(FibHeap.FibTree a) -> lq_tmp$x##886:{t2 : (FibHeap.FibTree a) | FibHeap.rank lq_tmp$x##885 == FibHeap.rank t2} -> {v : (FibHeap.FibTree a) | (FibHeap.root v == FibHeap.root lq_tmp$x##885\n                                                                                                                                                             && FibHeap.root lq_tmp$x##885 <= FibHeap.root lq_tmp$x##886)\n                                                                                                                                                            || (FibHeap.root v == FibHeap.root lq_tmp$x##886\n                                                                                                                                                                && FibHeap.root lq_tmp$x##886 <= FibHeap.root lq_tmp$x##885)\n                                                                                                                                                            && FibHeap.rank v == 1 + FibHeap.rank lq_tmp$x##885}"]]],[{"spanInfo":{"endLine":59,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":40,"startLine":59,"startCol":38},"realSpan":true},[[null,"{VV : forall a <p :: a a -> Bool>.\n      {lq_tmp$x##840 : [a]<\\lq_tmp$x##841 VV -> {lq_tmp$x##839 : a<p lq_tmp$x##841> | true}> | is$GHC.Types.[] lq_tmp$x##840\n                                                                                               && not (is$GHC.Types.: lq_tmp$x##840)\n                                                                                               && lq_tmp$x##840 == GHC.Types.[]\n                                                                                               && FibHeap.lsize lq_tmp$x##840 == 0\n                                                                                               && len lq_tmp$x##840 == 0} | VV == GHC.Types.[]}"]]],[{"spanInfo":{"endLine":74,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":40,"startLine":74,"startCol":37},"realSpan":true},[["ts1","{lq_tmp$x##2119 : [(FibHeap.FibTree a)] | lq_tmp$x##2119 == ts1##a1XR\n                                          && FibHeap.lsize lq_tmp$x##2119 >= len lq_tmp$x##2119\n                                          && len lq_tmp$x##2119 >= 0}"]]],[{"spanInfo":{"endLine":124,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":33,"startLine":123,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792805310","{lq_tmp$x##5428 : [(FibHeap.FibTree a)] | lq_tmp$x##5428 == ds_d2TZ\n                                          && len lq_tmp$x##5428 >= 0}"]]],[{"spanInfo":{"endLine":135,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":29,"startLine":135,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792805309","{lq_tmp$x##5366 : (FibHeap.FibTree a) | lq_tmp$x##5366 == ds_d2TJ}"]]],[{"spanInfo":{"endLine":99,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":28,"startLine":99,"startCol":26},"realSpan":true},[["t'","{lq_tmp$x##2953 : (FibHeap.FibTree {lq_tmp$x##2952 : a | $k_##2820[VV##2819:=lq_tmp$x##2952][VV##2821:=lq_tmp$x##2953]}) | lq_tmp$x##2953 == t'##a23e\n                                                                                                                           && FibHeap.size lq_tmp$x##2953 == FibHeap.pow2 (FibHeap.rank lq_tmp$x##2953)\n                                                                                                                           && 0 < FibHeap.size lq_tmp$x##2953\n                                                                                                                           && $k_##2822[VV##2821:=lq_tmp$x##2953]}"]]],[{"spanInfo":{"endLine":118,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":8,"startLine":118,"startCol":1},"realSpan":true},[["FibHeap.fibsize","forall a .\nlq_tmp$x##5543:{VV : (FibHeap.FibHeap a) | FibHeap.notEmptyFibHeap VV} -> {VV : GHC.Types.Int | VV == FibHeap.fibsize lq_tmp$x##5543\n                                                                                                && 0 < VV}"]]],[{"spanInfo":{"endLine":104,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":10,"startLine":104,"startCol":1},"realSpan":true},[["FibHeap.deleteMin","forall a .\n(GHC.Classes.Ord<[]> a) =>\nlq_tmp$x##3140:{VV##0 : (FibHeap.FibHeap a) | FibHeap.notEmptyFibHeap VV##0} -> (FibHeap.FibHeap a)"]]],[{"spanInfo":{"endLine":106,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":68,"startLine":106,"startCol":46},"realSpan":true},[["lq_anf$##7205759403792805282","{lq_tmp$x##4957 : [{lq_tmp$x##4972 : (FibHeap.FibTree {lq_tmp$x##4971 : a | $k_##4968[VV##4967:=lq_tmp$x##4971][VV##4969:=lq_tmp$x##4972][lq_tmp$x##4962:=lq_anf$##7205759403792805281##d32p][lq_tmp$x##4963:=ds_d2Zr]}) | $k_##4970[VV##4969:=lq_tmp$x##4972][lq_tmp$x##4962:=lq_anf$##7205759403792805281##d32p][lq_tmp$x##4963:=ds_d2Zr]}] | len lq_tmp$x##4957 == len lq_anf$##7205759403792805281##d32p + len ds_d2Zr}"]]],[{"spanInfo":{"endLine":64,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":33,"startLine":64,"startCol":31},"realSpan":true},[["lq_anf$##7205759403792805214","{lq_tmp$x##1166 : (FibHeap.FibTree a) | is$FibHeap.Node lq_tmp$x##1166\n                                        && lq_tmp$x##1166 == lq_anf$##7205759403792805214##d31k\n                                        && lq_tmp$x##1166 == t2##a1XL\n                                        && lq_tmp$x##1166 == FibHeap.Node ds_d2X2 y##a1XM ts2##a1XN ds_d2X3\n                                        && FibHeap.marked lq_tmp$x##1166 == ds_d2X3\n                                        && FibHeap.rank lq_tmp$x##1166 == ds_d2X2\n                                        && FibHeap.rank t1##a1XH == FibHeap.rank lq_tmp$x##1166\n                                        && FibHeap.root lq_tmp$x##1166 == y##a1XM\n                                        && FibHeap.size lq_tmp$x##1166 == FibHeap.pow2 ds_d2X2\n                                        && FibHeap.size lq_tmp$x##1166 == FibHeap.pow2 (FibHeap.rank lq_tmp$x##1166)\n                                        && FibHeap.subtrees lq_tmp$x##1166 == ts2##a1XN\n                                        && 0 < FibHeap.size lq_tmp$x##1166}"]]],[{"spanInfo":{"endLine":91,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":67,"startLine":91,"startCol":48},"realSpan":true},[["meld","forall a .\n(GHC.Classes.Ord<[]> a) =>\nlq_tmp$x##1432:[(FibHeap.FibTree a)] -> lq_tmp$x##1433:(FibHeap.FibTree a) -> {v : [(FibHeap.FibTree a)] | len v > 0\n                                                                                                           && len v <= len lq_tmp$x##1432 + 1}"]]],[{"spanInfo":{"endLine":91,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":42,"startLine":91,"startCol":35},"realSpan":true},[["lq_anf$##7205759403792805231","{lq_tmp$x##1572 : GHC.Types.Int | lq_tmp$x##1572 == FibHeap.rank x'##a1Y3\n                                  && lq_tmp$x##1572 >= 0}"]]],[{"spanInfo":{"endLine":42,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":25,"startLine":42,"startCol":21},"realSpan":true},[["GHC.Types.True","{lq_tmp$x##716 : GHC.Types.Bool | lq_tmp$x##716\n                                  && lq_tmp$x##716 == GHC.Types.True}"]]],[{"spanInfo":{"endLine":118,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":46,"startLine":118,"startCol":25},"realSpan":true},[["GHC.Num.$fNumInt","{lq_tmp$x##5649 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##5649 == GHC.Num.$fNumInt}"]]],[{"spanInfo":{"endLine":90,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":14,"startLine":90,"startCol":13},"realSpan":true},[["x","(FibHeap.FibTree a)"]]],[{"spanInfo":{"endLine":73,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":18,"startLine":73,"startCol":12},"realSpan":true},[["minTr1","{lq_tmp$x##2048 : (FibHeap.FibTree a) | lq_tmp$x##2048 == minTr1##a1XQ\n                                        && FibHeap.size lq_tmp$x##2048 == FibHeap.pow2 (FibHeap.rank lq_tmp$x##2048)\n                                        && 0 < FibHeap.size lq_tmp$x##2048}"]]],[{"spanInfo":{"endLine":86,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":21,"startLine":86,"startCol":20},"realSpan":true},[["x","{lq_tmp$x##1384 : (FibHeap.FibTree a) | lq_tmp$x##1384 == x##a1XX\n                                        && FibHeap.size lq_tmp$x##1384 == FibHeap.pow2 (FibHeap.rank lq_tmp$x##1384)\n                                        && 0 < FibHeap.size lq_tmp$x##1384}"]]],[{"spanInfo":{"endLine":64,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":37,"startLine":64,"startCol":34},"realSpan":true},[["ts1","{lq_tmp$x##1172 : [(FibHeap.FibTree a)] | lq_tmp$x##1172 == ts1##a1XK\n                                          && FibHeap.lsize lq_tmp$x##1172 >= len lq_tmp$x##1172\n                                          && len lq_tmp$x##1172 >= 0}"]]],[{"spanInfo":{"endLine":74,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":46,"startLine":74,"startCol":29},"realSpan":true},[["lq_anf$##7205759403792805250","{lq_tmp$x##2137 : [{lq_tmp$x##2150 : (FibHeap.FibTree {lq_tmp$x##2149 : a | $k_##2146[VV##2145:=lq_tmp$x##2149][VV##2147:=lq_tmp$x##2150][lq_tmp$x##2141:=minTr1##a1XQ][lq_tmp$x##2142:=lq_anf$##7205759403792805249##d31T]}) | $k_##2148[VV##2147:=lq_tmp$x##2150][lq_tmp$x##2141:=minTr1##a1XQ][lq_tmp$x##2142:=lq_anf$##7205759403792805249##d31T]}]<\\lq_tmp$x##2144 VV -> {lq_tmp$x##2150 : (FibHeap.FibTree {lq_tmp$x##2149 : a | $k_##2152[VV##2151:=lq_tmp$x##2149][VV##2153:=lq_tmp$x##2150][lq_tmp$x##2141:=minTr1##a1XQ][lq_tmp$x##2142:=lq_anf$##7205759403792805249##d31T][lq_tmp$x##2155:=lq_tmp$x##2144]}) | $k_##2154[VV##2153:=lq_tmp$x##2150][lq_tmp$x##2141:=minTr1##a1XQ][lq_tmp$x##2142:=lq_anf$##7205759403792805249##d31T][lq_tmp$x##2155:=lq_tmp$x##2144]}> | is$GHC.Types.: lq_tmp$x##2137\nnot (is$GHC.Types.[] lq_tmp$x##2137)\nlq_tmp$x##2137 == GHC.Types.: minTr1##a1XQ lq_anf$##7205759403792805249##d31T\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     && FibHeap.lsize lq_tmp$x##2137 == FibHeap.size minTr1##a1XQ + FibHeap.lsize lq_anf$##7205759403792805249##d31T\nhead lq_tmp$x##2137 == minTr1##a1XQ\nlen lq_tmp$x##2137 == 1 + len lq_anf$##7205759403792805249##d31T\nlqdc##$select##GHC.Types.:##1 lq_tmp$x##2137 == minTr1##a1XQ\nlqdc##$select##GHC.Types.:##2 lq_tmp$x##2137 == lq_anf$##7205759403792805249##d31T\ntail lq_tmp$x##2137 == lq_anf$##7205759403792805249##d31T}"]]],[{"spanInfo":{"endLine":111,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":29,"startLine":111,"startCol":28},"realSpan":true},[[null,"{VV : forall a .\n      {lq_tmp$x##2381 : (FibHeap.FibHeap a) | FibHeap.isEmptyFibHeap lq_tmp$x##2381\n                                              && is$FibHeap.E lq_tmp$x##2381\n                                              && not (FibHeap.notEmptyFibHeap lq_tmp$x##2381)\n                                              && not (is$FibHeap.FH lq_tmp$x##2381)\n                                              && lq_tmp$x##2381 == FibHeap.E} | VV == FibHeap.E}"]]],[{"spanInfo":{"endLine":59,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":27,"startLine":59,"startCol":26},"realSpan":true},[["x","{lq_tmp$x##827 : a | lq_tmp$x##827 == x##a1XG}"]]],[{"spanInfo":{"endLine":99,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":57,"startLine":99,"startCol":52},"realSpan":true},[["lq_anf$##7205759403792805265","{lq_tmp$x##2989 : [{lq_tmp$x##3002 : (FibHeap.FibTree {lq_tmp$x##3001 : a | $k_##2998[VV##2997:=lq_tmp$x##3001][VV##2999:=lq_tmp$x##3002][lq_tmp$x##2993:=t##a1Y6][lq_tmp$x##2994:=ts'##a23g]}) | $k_##3000[VV##2999:=lq_tmp$x##3002][lq_tmp$x##2993:=t##a1Y6][lq_tmp$x##2994:=ts'##a23g]}]<\\lq_tmp$x##2996 VV -> {lq_tmp$x##3002 : (FibHeap.FibTree {lq_tmp$x##3001 : a | $k_##3004[VV##3003:=lq_tmp$x##3001][VV##3005:=lq_tmp$x##3002][lq_tmp$x##2993:=t##a1Y6][lq_tmp$x##2994:=ts'##a23g][lq_tmp$x##3007:=lq_tmp$x##2996]}) | $k_##3006[VV##3005:=lq_tmp$x##3002][lq_tmp$x##2993:=t##a1Y6][lq_tmp$x##2994:=ts'##a23g][lq_tmp$x##3007:=lq_tmp$x##2996]}> | is$GHC.Types.: lq_tmp$x##2989\nnot (is$GHC.Types.[] lq_tmp$x##2989)\nlq_tmp$x##2989 == GHC.Types.: t##a1Y6 ts'##a23g\nibHeap.lsize lq_tmp$x##2989 == FibHeap.size t##a1Y6 + FibHeap.lsize ts'##a23g\nhead lq_tmp$x##2989 == t##a1Y6\nlen lq_tmp$x##2989 == 1 + len ts'##a23g\nlqdc##$select##GHC.Types.:##1 lq_tmp$x##2989 == t##a1Y6\nlqdc##$select##GHC.Types.:##2 lq_tmp$x##2989 == ts'##a23g\ntail lq_tmp$x##2989 == ts'##a23g}"]]],[{"spanInfo":{"endLine":65,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":31,"startLine":65,"startCol":24},"realSpan":true},[["lq_anf$##7205759403792805219","{lq_tmp$x##1029 : GHC.Types.Int | lq_tmp$x##1029 == r##a1XI + lq_anf$##7205759403792805218##d31o}"]]],[{"spanInfo":{"endLine":79,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":21,"startLine":79,"startCol":20},"realSpan":true},[["h","{lq_tmp$x##2348 : (FibHeap.FibHeap a) | (FibHeap.isEmptyFibHeap lq_tmp$x##2348\n                                         && not (FibHeap.notEmptyFibHeap lq_tmp$x##2348))\n                                        || (FibHeap.notEmptyFibHeap lq_tmp$x##2348\n                                            && not (FibHeap.isEmptyFibHeap lq_tmp$x##2348))\n                                        && lq_tmp$x##2348 == h##a1XV\n                                        && 0 < FibHeap.fibsize lq_tmp$x##2348}"]]],[{"spanInfo":{"endLine":130,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":24,"startLine":129,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792805301","{lq_tmp$x##5295 : GHC.Prim.Int# | lq_tmp$x##5295 == ds_d2TG}"]]],[{"spanInfo":{"endLine":118,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":46,"startLine":118,"startCol":38},"realSpan":true},[["lq_anf$##7205759403792805317","{lq_tmp$x##5620 : GHC.Types.Int | lq_tmp$x##5620 == FibHeap.lsize ts##a1Yt\n                                  && lq_tmp$x##5620 >= len ts##a1Yt}"]]],[{"spanInfo":{"endLine":96,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":24,"startLine":96,"startCol":22},"realSpan":true},[[null,"{VV : forall a <p :: a a -> Bool>.\n      {lq_tmp$x##2663 : [a]<\\lq_tmp$x##2664 VV -> {lq_tmp$x##2662 : a<p lq_tmp$x##2664> | true}> | is$GHC.Types.[] lq_tmp$x##2663\n                                                                                                   && not (is$GHC.Types.: lq_tmp$x##2663)\n                                                                                                   && lq_tmp$x##2663 == GHC.Types.[]\n                                                                                                   && FibHeap.lsize lq_tmp$x##2663 == 0\n                                                                                                   && len lq_tmp$x##2663 == 0} | VV == GHC.Types.[]}"]]],[{"spanInfo":{"endLine":71,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":10,"startLine":71,"startCol":9},"realSpan":true},[["h","{VV##0 : (FibHeap.FibHeap a) | FibHeap.notEmptyFibHeap VV##0}"]]],[{"spanInfo":{"endLine":92,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":34,"startLine":92,"startCol":32},"realSpan":true},[["xs","{lq_tmp$x##1642 : [(FibHeap.FibTree a)] | lq_tmp$x##1642 == xs##a1Y4\n                                          && FibHeap.lsize lq_tmp$x##1642 >= len lq_tmp$x##1642\n                                          && len lq_tmp$x##1642 >= 0}"]]],[{"spanInfo":{"endLine":108,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":58,"startLine":108,"startCol":56},"realSpan":true},[["ds_d2Zr","{lq_tmp$x##4561 : [(FibHeap.FibTree a)] | lq_tmp$x##4561 == ds_d2Zr\n                                          && FibHeap.lsize lq_tmp$x##4561 >= len lq_tmp$x##4561\n                                          && len lq_tmp$x##4561 >= 0}"]]],[{"spanInfo":{"endLine":63,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":8,"startLine":63,"startCol":6},"realSpan":true},[["t1","(FibHeap.FibTree a)"]]],[{"spanInfo":{"endLine":92,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":28,"startLine":92,"startCol":27},"realSpan":true},[["x","{lq_tmp$x##1674 : (FibHeap.FibTree a) | lq_tmp$x##1674 == x##a1Y2\n                                        && FibHeap.size lq_tmp$x##1674 == FibHeap.pow2 (FibHeap.rank lq_tmp$x##1674)\n                                        && 0 < FibHeap.size lq_tmp$x##1674}"]]],[{"spanInfo":{"endLine":48,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":25,"startLine":47,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792805205","{lq_tmp$x##721 : (FibHeap.FibHeap a) | lq_tmp$x##721 == ds_d30a\n                                       && 0 < FibHeap.fibsize lq_tmp$x##721}"]]],[{"spanInfo":{"endLine":98,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":17,"startLine":98,"startCol":14},"realSpan":true},[["ts'","{VV##2879 : [{VV##2872 : (FibHeap.FibTree {VV##2870 : a | $k_##2871}) | $k_##2873}]<\\lq_tmp$x##2874 VV -> {VV##2877 : (FibHeap.FibTree {VV##2875 : a | $k_##2876}) | $k_##2878}> | $k_##2880}"]]],[{"spanInfo":{"endLine":74,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":46,"startLine":74,"startCol":19},"realSpan":true},[["FibHeap.FH","{VV : forall a .\n      lq_tmp$x##2180:(FibHeap.FibTree a) -> lq_tmp$x##2181:[(FibHeap.FibTree a)] -> {lq_tmp$x##2176 : (FibHeap.FibHeap a) | FibHeap.notEmptyFibHeap lq_tmp$x##2176\n                                                                                                                            && is$FibHeap.FH lq_tmp$x##2176\n                                                                                                                            && not (FibHeap.isEmptyFibHeap lq_tmp$x##2176)\n                                                                                                                            && not (is$FibHeap.E lq_tmp$x##2176)\n                                                                                                                            && lq_tmp$x##2176 == FibHeap.FH lq_tmp$x##2180 lq_tmp$x##2181\n                                                                                                                            && FibHeap.fibsize lq_tmp$x##2176 == FibHeap.size lq_tmp$x##2180 + FibHeap.lsize lq_tmp$x##2181\n                                                                                                                            && FibHeap.minTree lq_tmp$x##2176 == lq_tmp$x##2180\n                                                                                                                            && FibHeap.trees lq_tmp$x##2176 == lq_tmp$x##2181} | VV == FibHeap.FH}"]]],[{"spanInfo":{"endLine":99,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":18,"startLine":99,"startCol":12},"realSpan":true},[["lq_anf$##7205759403792805261","{lq_tmp$x##2940 : a | lq_tmp$x##2940 == FibHeap.root t##a1Y6\n                      && $k_##2939[VV##2938:=lq_tmp$x##2940][lq_tmp$x##2937:=t##a1Y6]}"]]],[{"spanInfo":{"endLine":82,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":15,"startLine":82,"startCol":11},"realSpan":true},[[null,"{VV : forall a .\n      lq_tmp$x##2445:(FibHeap.FibTree a) -> {lq_tmp$x##2443 : a | lq_tmp$x##2443 == FibHeap.root lq_tmp$x##2445} | VV == FibHeap.root}"]]],[{"spanInfo":{"endLine":65,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":48,"startLine":65,"startCol":19},"realSpan":true},[["FibHeap.Node","{VV : forall a .\n      lq_tmp$x##1089:{lq_tmp$x##1073 : GHC.Types.Int | lq_tmp$x##1073 >= 0} -> lq_tmp$x##1090:a -> lq_tmp$x##1091:[(FibHeap.FibTree a)] -> lq_tmp$x##1092:GHC.Types.Bool -> {lq_tmp$x##1083 : (FibHeap.FibTree a) | is$FibHeap.Node lq_tmp$x##1083\n                                                                                                                                                                                                                    && lq_tmp$x##1083 == FibHeap.Node lq_tmp$x##1089 lq_tmp$x##1090 lq_tmp$x##1091 lq_tmp$x##1092\n                                                                                                                                                                                                                    && FibHeap.marked lq_tmp$x##1083 == lq_tmp$x##1092\n                                                                                                                                                                                                                    && FibHeap.rank lq_tmp$x##1083 == lq_tmp$x##1089\n                                                                                                                                                                                                                    && FibHeap.root lq_tmp$x##1083 == lq_tmp$x##1090\n                                                                                                                                                                                                                    && FibHeap.size lq_tmp$x##1083 == FibHeap.pow2 lq_tmp$x##1089\n                                                                                                                                                                                                                    && FibHeap.subtrees lq_tmp$x##1083 == lq_tmp$x##1091} | VV == FibHeap.Node}"]]],[{"spanInfo":{"endLine":65,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":30,"startLine":65,"startCol":29},"realSpan":true},[["lq_anf$##7205759403792805218","{lq_tmp$x##1013 : GHC.Types.Int | lq_tmp$x##1013 == (lq_anf$##7205759403792805217##d31n : int)}"]]],[{"spanInfo":{"endLine":98,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":12,"startLine":98,"startCol":10},"realSpan":true},[["t'","{VV##2821 : (FibHeap.FibTree {VV##2819 : a | $k_##2820}) | $k_##2822}"]]],[{"spanInfo":{"endLine":99,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":58,"startLine":99,"startCol":47},"realSpan":true},[["GHC.Tuple.(,)","{VV : forall a b <p2 :: a b -> Bool>.\n      lq_tmp$x##3028:a -> lq_tmp$x##3029:{lq_tmp$x##3020 : b<p2 lq_tmp$x##3028> | true} -> {lq_tmp$x##3025 : (a, b)<\\lq_tmp$x##3030 VV -> {lq_tmp$x##3024 : b<p2 lq_tmp$x##3030> | true}> | is$GHC.Tuple.(,) lq_tmp$x##3025\n                                                                                                                                                                                            && lq_tmp$x##3025 == GHC.Tuple.(,) lq_tmp$x##3028 lq_tmp$x##3029\n                                                                                                                                                                                            && fst lq_tmp$x##3025 == lq_tmp$x##3028\n                                                                                                                                                                                            && lqdc##$select##GHC.Tuple.(,)##1 lq_tmp$x##3025 == lq_tmp$x##3028\n                                                                                                                                                                                            && lqdc##$select##GHC.Tuple.(,)##2 lq_tmp$x##3025 == lq_tmp$x##3029\n                                                                                                                                                                                            && snd lq_tmp$x##3025 == lq_tmp$x##3029\n                                                                                                                                                                                            && x_Tuple21 lq_tmp$x##3025 == lq_tmp$x##3028\n                                                                                                                                                                                            && x_Tuple22 lq_tmp$x##3025 == lq_tmp$x##3029} | VV == GHC.Tuple.(,)}"]]],[{"spanInfo":{"endLine":82,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":25,"startLine":82,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792805257","lq_tmp$x##2455:(FibHeap.FibHeap {lq_tmp$x##2458 : a | $k_##2457[VV##2456:=lq_tmp$x##2458]}) -> {lq_tmp$x##2453 : (FibHeap.FibTree {lq_tmp$x##2458 : a | $k_##2457[VV##2456:=lq_tmp$x##2458]}) | lq_tmp$x##2453 == FibHeap.minTree lq_tmp$x##2455}"]]],[{"spanInfo":{"endLine":129,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":11,"startLine":129,"startCol":10},"realSpan":true},[["lq_anf$##7205759403792805308","{lq_tmp$x##5356 : GHC.Prim.Int# | lq_tmp$x##5356 == 1}"]]],[{"spanInfo":{"endLine":130,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":21,"startLine":130,"startCol":20},"realSpan":true},[["ds_d2Tz","{lq_tmp$x##5329 : GHC.Types.Int | lq_tmp$x##5329 == ds_d2Tz\n                                  && lq_tmp$x##5329 >= 0}"]]],[{"spanInfo":{"endLine":92,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":34,"startLine":86,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792805227","{lq_tmp$x##1316 : [(FibHeap.FibTree a)] | lq_tmp$x##1316 == ds_d2XC\n                                          && FibHeap.lsize lq_tmp$x##1316 >= len lq_tmp$x##1316\n                                          && len lq_tmp$x##1316 >= 0}"]]],[{"spanInfo":{"endLine":130,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":11,"startLine":130,"startCol":10},"realSpan":true},[["lq_anf$##7205759403792805303","{lq_tmp$x##5302 : GHC.Types.Int | lq_tmp$x##5302 == (lq_anf$##7205759403792805302##d32K : int)}"]]],[{"spanInfo":{"endLine":99,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":58,"startLine":98,"startCol":5},"realSpan":true},[["lq_anf$##7205759403792805264","{lq_tmp$x##2974 : GHC.Types.Bool | (lq_tmp$x##2974 <=> lq_anf$##7205759403792805261##d325 < lq_anf$##7205759403792805262##d326)\n                                   && lq_tmp$x##2974 == lq_anf$##7205759403792805263##d327}"]]],[{"spanInfo":{"endLine":59,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":10,"startLine":59,"startCol":1},"realSpan":true},[["FibHeap.singleton","forall a .\nlq_tmp$x##774:a -> {VV##0 : (FibHeap.FibHeap a) | FibHeap.notEmptyFibHeap VV##0\n                                                  && FibHeap.rank (FibHeap.minTree VV##0) == 1\n                                                  && FibHeap.subtrees (FibHeap.minTree VV##0) == GHC.Types.[]\n                                                  && FibHeap.trees VV##0 == GHC.Types.[]\n                                                  && FibHeap.root (FibHeap.minTree VV##0) == lq_tmp$x##774}"]]],[{"spanInfo":{"endLine":124,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":22,"startLine":124,"startCol":16},"realSpan":true},[["lq_anf$##7205759403792805312","{lq_tmp$x##5496 : GHC.Types.Int | lq_tmp$x##5496 == FibHeap.pow2 (FibHeap.rank t##a1Yu)\n                                  && lq_tmp$x##5496 == FibHeap.size t##a1Yu\n                                  && 0 < lq_tmp$x##5496}"]]],[{"spanInfo":{"endLine":65,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":41,"startLine":65,"startCol":38},"realSpan":true},[["ts2","{lq_tmp$x##1070 : [(FibHeap.FibTree a)] | lq_tmp$x##1070 == ts2##a1XN\n                                          && FibHeap.lsize lq_tmp$x##1070 >= len lq_tmp$x##1070\n                                          && len lq_tmp$x##1070 >= 0}"]]],[{"spanInfo":{"endLine":106,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":61,"startLine":106,"startCol":47},"realSpan":true},[["lq_anf$##7205759403792805281","{lq_tmp$x##4936 : [(FibHeap.FibTree {lq_tmp$x##4942 : a | $k_##4941[VV##4940:=lq_tmp$x##4942][lq_tmp$x##4938:=ds_d2Zq]})] | lq_tmp$x##4936 == FibHeap.subtrees ds_d2Zq}"]]],[{"spanInfo":{"endLine":64,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":22,"startLine":64,"startCol":21},"realSpan":true},[["r","{lq_tmp$x##1134 : GHC.Types.Int | lq_tmp$x##1134 == r##a1XI\n                                  && lq_tmp$x##1134 >= 0}"]]],[{"spanInfo":{"endLine":64,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":29,"startLine":64,"startCol":28},"realSpan":true},[["x","{lq_tmp$x##1200 : a | lq_tmp$x##1200 == x##a1XJ}"]]],[{"spanInfo":{"endLine":99,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":58,"startLine":96,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792805260","{lq_tmp$x##2639 : [(FibHeap.FibTree a)] | lq_tmp$x##2639 == ds_d2V4\n                                          && FibHeap.lsize lq_tmp$x##2639 >= len lq_tmp$x##2639\n                                          && len lq_tmp$x##2639 >= 0}"]]],[{"spanInfo":{"endLine":64,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":12,"startLine":64,"startCol":11},"realSpan":true},[["y","{lq_tmp$x##1001 : a | lq_tmp$x##1001 == y##a1XM}"]]],[{"spanInfo":{"endLine":65,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":37,"startLine":65,"startCol":35},"realSpan":true},[["lq_anf$##7205759403792805213","{lq_tmp$x##1064 : (FibHeap.FibTree a) | is$FibHeap.Node lq_tmp$x##1064\n                                        && lq_tmp$x##1064 == lq_anf$##7205759403792805213##d31j\n                                        && lq_tmp$x##1064 == t1##a1XH\n                                        && lq_tmp$x##1064 == FibHeap.Node r##a1XI x##a1XJ ts1##a1XK ds_d2X1\n                                        && FibHeap.marked lq_tmp$x##1064 == ds_d2X1\n                                        && FibHeap.rank lq_tmp$x##1064 == r##a1XI\n                                        && FibHeap.root lq_tmp$x##1064 == x##a1XJ\n                                        && FibHeap.size lq_tmp$x##1064 == FibHeap.pow2 r##a1XI\n                                        && FibHeap.size lq_tmp$x##1064 == FibHeap.pow2 (FibHeap.rank lq_tmp$x##1064)\n                                        && FibHeap.subtrees lq_tmp$x##1064 == ts1##a1XK\n                                        && 0 < FibHeap.size lq_tmp$x##1064}"]]],[{"spanInfo":{"endLine":86,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":22,"startLine":86,"startCol":19},"realSpan":true},[["lq_anf$##7205759403792805239","{lq_tmp$x##1340 : [{lq_tmp$x##1347 : (FibHeap.FibTree {lq_tmp$x##1346 : a | $k_##1343[VV##1342:=lq_tmp$x##1346][VV##1344:=lq_tmp$x##1347]}) | $k_##1345[VV##1344:=lq_tmp$x##1347]}]<\\lq_tmp$x##1341 VV -> {lq_tmp$x##1347 : (FibHeap.FibTree {lq_tmp$x##1346 : a | $k_##1349[VV##1348:=lq_tmp$x##1346][VV##1350:=lq_tmp$x##1347][lq_tmp$x##1352:=lq_tmp$x##1341]}) | $k_##1351[VV##1350:=lq_tmp$x##1347][lq_tmp$x##1352:=lq_tmp$x##1341]}> | is$GHC.Types.[] lq_tmp$x##1340\n                                                                                                                                                                                                                                                                                                                                                                                                                                             && not (is$GHC.Types.: lq_tmp$x##1340)\n                                                                                                                                                                                                                                                                                                                                                                                                                                             && lq_tmp$x##1340 == GHC.Types.[]\n                                                                                                                                                                                                                                                                                                                                                                                                                                             && FibHeap.lsize lq_tmp$x##1340 == 0\n                                                                                                                                                                                                                                                                                                                                                                                                                                             && len lq_tmp$x##1340 == 0}"]]],[{"spanInfo":{"endLine":90,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":20,"startLine":90,"startCol":17},"realSpan":true},[["lq_anf$##7205759403792805229","{lq_tmp$x##1469 : [{lq_tmp$x##1476 : (FibHeap.FibTree {lq_tmp$x##1475 : a | $k_##1472[VV##1471:=lq_tmp$x##1475][VV##1473:=lq_tmp$x##1476]}) | $k_##1474[VV##1473:=lq_tmp$x##1476]}]<\\lq_tmp$x##1470 VV -> {lq_tmp$x##1476 : (FibHeap.FibTree {lq_tmp$x##1475 : a | $k_##1478[VV##1477:=lq_tmp$x##1475][VV##1479:=lq_tmp$x##1476][lq_tmp$x##1481:=lq_tmp$x##1470]}) | $k_##1480[VV##1479:=lq_tmp$x##1476][lq_tmp$x##1481:=lq_tmp$x##1470]}> | is$GHC.Types.[] lq_tmp$x##1469\n                                                                                                                                                                                                                                                                                                                                                                                                                                             && not (is$GHC.Types.: lq_tmp$x##1469)\n                                                                                                                                                                                                                                                                                                                                                                                                                                             && lq_tmp$x##1469 == GHC.Types.[]\n                                                                                                                                                                                                                                                                                                                                                                                                                                             && FibHeap.lsize lq_tmp$x##1469 == 0\n                                                                                                                                                                                                                                                                                                                                                                                                                                             && len lq_tmp$x##1469 == 0}"]]],[{"spanInfo":{"endLine":108,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":59,"startLine":108,"startCol":46},"realSpan":true},[["lq_anf$##7205759403792805278","{lq_tmp$x##4533 : [{lq_tmp$x##4548 : (FibHeap.FibTree {lq_tmp$x##4547 : a | $k_##4544[VV##4543:=lq_tmp$x##4547][VV##4545:=lq_tmp$x##4548][lq_tmp$x##4538:=lq_anf$##7205759403792805275##d32j][lq_tmp$x##4539:=ds_d2Zr]}) | $k_##4546[VV##4545:=lq_tmp$x##4548][lq_tmp$x##4538:=lq_anf$##7205759403792805275##d32j][lq_tmp$x##4539:=ds_d2Zr]}] | len lq_tmp$x##4533 == len lq_anf$##7205759403792805275##d32j + len ds_d2Zr}"]]],[{"spanInfo":{"endLine":99,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":40,"startLine":99,"startCol":38},"realSpan":true},[["ds_d2V4","{lq_tmp$x##3136 : [(FibHeap.FibTree a)] | lq_tmp$x##3136 == ds_d2V4\n                                          && FibHeap.lsize lq_tmp$x##3136 >= len lq_tmp$x##3136\n                                          && len lq_tmp$x##3136 >= 0}"]]],[{"spanInfo":{"endLine":99,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":50,"startLine":99,"startCol":48},"realSpan":true},[["t'","{lq_tmp$x##3068 : (FibHeap.FibTree {lq_tmp$x##3067 : a | $k_##2820[VV##2819:=lq_tmp$x##3067][VV##2821:=lq_tmp$x##3068]}) | lq_tmp$x##3068 == t'##a23e\n                                                                                                                           && FibHeap.size lq_tmp$x##3068 == FibHeap.pow2 (FibHeap.rank lq_tmp$x##3068)\n                                                                                                                           && 0 < FibHeap.size lq_tmp$x##3068\n                                                                                                                           && $k_##2822[VV##2821:=lq_tmp$x##3068]}"]]],[{"spanInfo":{"endLine":99,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":57,"startLine":99,"startCol":54},"realSpan":true},[["ts'","{lq_tmp$x##3016 : [{lq_tmp$x##3012 : (FibHeap.FibTree {lq_tmp$x##3011 : a | $k_##2871[VV##2870:=lq_tmp$x##3011][VV##2872:=lq_tmp$x##3012][VV##2879:=lq_tmp$x##3016]}) | $k_##2873[VV##2872:=lq_tmp$x##3012][VV##2879:=lq_tmp$x##3016]}]<\\lq_tmp$x##3017 VV -> {lq_tmp$x##3015 : (FibHeap.FibTree {lq_tmp$x##3014 : a | $k_##2876[VV##2875:=lq_tmp$x##3014][VV##2877:=lq_tmp$x##3015][VV##2879:=lq_tmp$x##3016][lq_tmp$x##2874:=lq_tmp$x##3017][lq_tmp$x##3013:=lq_tmp$x##3017]}) | $k_##2878[VV##2877:=lq_tmp$x##3015][VV##2879:=lq_tmp$x##3016][lq_tmp$x##2874:=lq_tmp$x##3017][lq_tmp$x##3013:=lq_tmp$x##3017]}> | lq_tmp$x##3016 == ts'##a23g\nibHeap.lsize lq_tmp$x##3016 >= len lq_tmp$x##3016\nlen lq_tmp$x##3016 >= 0\nk_##2880[VV##2879:=lq_tmp$x##3016]}"]]],[{"spanInfo":{"endLine":91,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":67,"startLine":91,"startCol":56},"realSpan":true},[["lq_anf$##7205759403792805235","{lq_tmp$x##1694 : (FibHeap.FibTree {lq_tmp$x##1703 : a | $k_##1702[VV##1701:=lq_tmp$x##1703][lq_tmp$x##1698:=fix$36$$36$dOrd_a24y][lq_tmp$x##1699:=x##a1Y2][lq_tmp$x##1700:=x'##a1Y3]}) | (FibHeap.root lq_tmp$x##1694 == FibHeap.root x##a1Y2\n                                                                                                                                                                                           && FibHeap.root x##a1Y2 <= FibHeap.root x'##a1Y3)\n                                                                                                                                                                                          || (FibHeap.root lq_tmp$x##1694 == FibHeap.root x'##a1Y3\n                                                                                                                                                                                              && FibHeap.root x'##a1Y3 <= FibHeap.root x##a1Y2)\n                                                                                                                                                                                          && FibHeap.rank lq_tmp$x##1694 == 1 + FibHeap.rank x##a1Y2}"]]],[{"spanInfo":{"endLine":87,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":36,"startLine":87,"startCol":33},"realSpan":true},[["lq_anf$##7205759403792805238","{lq_tmp$x##1810 : [{lq_tmp$x##1823 : (FibHeap.FibTree {lq_tmp$x##1822 : a | $k_##1819[VV##1818:=lq_tmp$x##1822][VV##1820:=lq_tmp$x##1823][lq_tmp$x##1814:=x##a1XX][lq_tmp$x##1815:=lq_anf$##7205759403792805237##d31H]}) | $k_##1821[VV##1820:=lq_tmp$x##1823][lq_tmp$x##1814:=x##a1XX][lq_tmp$x##1815:=lq_anf$##7205759403792805237##d31H]}]<\\lq_tmp$x##1817 VV -> {lq_tmp$x##1823 : (FibHeap.FibTree {lq_tmp$x##1822 : a | $k_##1825[VV##1824:=lq_tmp$x##1822][VV##1826:=lq_tmp$x##1823][lq_tmp$x##1814:=x##a1XX][lq_tmp$x##1815:=lq_anf$##7205759403792805237##d31H][lq_tmp$x##1828:=lq_tmp$x##1817]}) | $k_##1827[VV##1826:=lq_tmp$x##1823][lq_tmp$x##1814:=x##a1XX][lq_tmp$x##1815:=lq_anf$##7205759403792805237##d31H][lq_tmp$x##1828:=lq_tmp$x##1817]}> | is$GHC.Types.: lq_tmp$x##1810\nnot (is$GHC.Types.[] lq_tmp$x##1810)\nlq_tmp$x##1810 == GHC.Types.: x##a1XX lq_anf$##7205759403792805237##d31H\nibHeap.lsize lq_tmp$x##1810 == FibHeap.size x##a1XX + FibHeap.lsize lq_anf$##7205759403792805237##d31H\nhead lq_tmp$x##1810 == x##a1XX\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 && len lq_tmp$x##1810 == 1 + len lq_anf$##7205759403792805237##d31H\nlqdc##$select##GHC.Types.:##1 lq_tmp$x##1810 == x##a1XX\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 && lqdc##$select##GHC.Types.:##2 lq_tmp$x##1810 == lq_anf$##7205759403792805237##d31H\ntail lq_tmp$x##1810 == lq_anf$##7205759403792805237##d31H}"]]],[{"spanInfo":{"endLine":59,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":40,"startLine":59,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792805212","{lq_tmp$x##840 : [{lq_tmp$x##847 : (FibHeap.FibTree {lq_tmp$x##846 : a | $k_##843[VV##842:=lq_tmp$x##846][VV##844:=lq_tmp$x##847]}) | $k_##845[VV##844:=lq_tmp$x##847]}]<\\lq_tmp$x##841 VV -> {lq_tmp$x##847 : (FibHeap.FibTree {lq_tmp$x##846 : a | $k_##849[VV##848:=lq_tmp$x##846][VV##850:=lq_tmp$x##847][lq_tmp$x##852:=lq_tmp$x##841]}) | $k_##851[VV##850:=lq_tmp$x##847][lq_tmp$x##852:=lq_tmp$x##841]}> | is$GHC.Types.[] lq_tmp$x##840\n                                                                                                                                                                                                                                                                                                                                                                                                                   && not (is$GHC.Types.: lq_tmp$x##840)\n                                                                                                                                                                                                                                                                                                                                                                                                                   && lq_tmp$x##840 == GHC.Types.[]\n                                                                                                                                                                                                                                                                                                                                                                                                                   && FibHeap.lsize lq_tmp$x##840 == 0\n                                                                                                                                                                                                                                                                                                                                                                                                                   && len lq_tmp$x##840 == 0}"]]],[{"spanInfo":{"endLine":59,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":37,"startLine":59,"startCol":18},"realSpan":true},[["lq_anf$##7205759403792805211","{lq_tmp$x##812 : (FibHeap.FibTree {lq_tmp$x##825 : a | $k_##824[VV##823:=lq_tmp$x##825][lq_tmp$x##818:=lq_anf$##7205759403792805209##d31f][lq_tmp$x##819:=x##a1XG][lq_tmp$x##820:=lq_anf$##7205759403792805210##d31g][lq_tmp$x##821:=GHC.Types.False]}) | is$FibHeap.Node lq_tmp$x##812\n                                                                                                                                                                                                                                                          && lq_tmp$x##812 == FibHeap.Node lq_anf$##7205759403792805209##d31f x##a1XG lq_anf$##7205759403792805210##d31g GHC.Types.False\n                                                                                                                                                                                                                                                          && FibHeap.marked lq_tmp$x##812 == GHC.Types.False\n                                                                                                                                                                                                                                                          && FibHeap.rank lq_tmp$x##812 == lq_anf$##7205759403792805209##d31f\n                                                                                                                                                                                                                                                          && FibHeap.root lq_tmp$x##812 == x##a1XG\n                                                                                                                                                                                                                                                          && FibHeap.size lq_tmp$x##812 == FibHeap.pow2 lq_anf$##7205759403792805209##d31f\n                                                                                                                                                                                                                                                          && FibHeap.subtrees lq_tmp$x##812 == lq_anf$##7205759403792805210##d31g}"]]],[{"spanInfo":{"endLine":73,"filename":"/Users/niki.vazou/tmp/jamie/LiquidHaskell/lh-thesis/src/FibHeap.hs","endCol":32,"startLine":73,"startCol":7},"realSpan":true},[["lq_anf$##7205759403792805247","{lq_tmp$x##2065 : GHC.Types.Bool | lq_tmp$x##2065 <=> lq_anf$##7205759403792805245##d31P < lq_anf$##7205759403792805246##d31Q}"]]]],"o_bots":[],"o_result":{"tag":"Safe","contents":{"numCstr":65,"numIter":69,"numBrkt":68,"numChck":293,"numVald":131}}}