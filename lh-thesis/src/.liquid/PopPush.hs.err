{"o_vars":null,"o_types":[[{"spanInfo":{"endLine":35,"filename":"src/PopPush.hs","endCol":43,"startLine":35,"startCol":29},"realSpan":true},[["lq_anf$##7205759403792803269","{v : (Language.Haskell.Liquid.RTick.Tick [a]) | pot xs + 2 >= tcost v + pot (tval v)}"]]],[{"spanInfo":{"endLine":29,"filename":"src/PopPush.hs","endCol":5,"startLine":29,"startCol":1},"realSpan":true},[["PopPush.push","forall a .\nx1:[a] -> a -> {t : (Language.Haskell.Liquid.RTick.Tick {ys : [a] | len ys == 1 + len x1}) | pot x1 + 2 >= tcost t + pot (tval t)}"]]],[{"spanInfo":{"endLine":18,"filename":"src/PopPush.hs","endCol":18,"startLine":18,"startCol":17},"realSpan":true},[["lq_anf$##7205759403792803250","{v : GHC.Prim.Int# | v == 0}"]]],[{"spanInfo":{"endLine":1,"filename":"src/PopPush.hs","endCol":1,"startLine":1,"startCol":1},"realSpan":true},[["PopPush.$trModule","GHC.Types.Module"]]],[{"spanInfo":{"endLine":35,"filename":"src/PopPush.hs","endCol":28,"startLine":35,"startCol":27},"realSpan":true},[["lq_anf$##7205759403792803265","GHC.Types.Int"]]],[{"spanInfo":{"endLine":29,"filename":"src/PopPush.hs","endCol":30,"startLine":29,"startCol":24},"realSpan":true},[["lq_anf$##7205759403792803259","{v : [a] | v == : a ls\n           && head v == a\n           && len v == 1 + len ls\n           && length v == 1 + length ls\n           && lqdc##$select v == a\n           && lqdc##$select v == ls\n           && pot v == 1 + pot ls\n           && tail v == ls}"]]],[{"spanInfo":{"endLine":35,"filename":"src/PopPush.hs","endCol":39,"startLine":35,"startCol":34},"realSpan":true},[["lq_anf$##7205759403792803268","GHC.Types.Int"]]],[{"spanInfo":{"endLine":18,"filename":"src/PopPush.hs","endCol":7,"startLine":18,"startCol":1},"realSpan":true},[["PopPush.length","forall a .\nx1:[a] -> {VV : GHC.Types.Int | VV == len x1\n                                && VV == length x1}"]]],[{"spanInfo":{"endLine":35,"filename":"src/PopPush.hs","endCol":38,"startLine":35,"startCol":37},"realSpan":true},[["lq_anf$##7205759403792803267","GHC.Types.Int"]]],[{"spanInfo":{"endLine":25,"filename":"src/PopPush.hs","endCol":25,"startLine":25,"startCol":23},"realSpan":true},[["xs","{v : [a] | v == xs\n           && length v == len v\n           && len v >= 0}"]]],[{"spanInfo":{"endLine":35,"filename":"src/PopPush.hs","endCol":43,"startLine":35,"startCol":16},"realSpan":true},[["Language.Haskell.Liquid.RTick.step","{VV : forall a .\n      x1:GHC.Types.Int -> x2:(Language.Haskell.Liquid.RTick.Tick a) -> {v : (Language.Haskell.Liquid.RTick.Tick a) | v == Tick (x1 + tcost x2) (tval x2)\n                                                                                                                     && v == step x1 x2\n                                                                                                                     && tval x2 == tval v\n                                                                                                                     && x1 + tcost x2 == tcost v} | VV == step}"]]],[{"spanInfo":{"endLine":29,"filename":"src/PopPush.hs","endCol":8,"startLine":29,"startCol":6},"realSpan":true},[["ls","[a]"]]],[{"spanInfo":{"endLine":24,"filename":"src/PopPush.hs","endCol":4,"startLine":24,"startCol":1},"realSpan":true},[["PopPush.pot","forall a .\nx1:[a] -> {VV : GHC.Types.Int | VV == len x1\n                                && VV == pot x1}"]]],[{"spanInfo":{"endLine":34,"filename":"src/PopPush.hs","endCol":9,"startLine":34,"startCol":7},"realSpan":true},[["ys","[a]"]]],[{"spanInfo":{"endLine":34,"filename":"src/PopPush.hs","endCol":31,"startLine":34,"startCol":16},"realSpan":true},[["Language.Haskell.Liquid.RTick.return","{VV : forall a .\n      x1:a -> {v : (Language.Haskell.Liquid.RTick.Tick a) | 0 == tcost v\n                                                            && v == return x1\n                                                            && v == Tick 0 x1\n                                                            && x1 == tval v} | VV == return}"]]],[{"spanInfo":{"endLine":25,"filename":"src/PopPush.hs","endCol":26,"startLine":25,"startCol":14},"realSpan":true},[["GHC.Num.$fNumInt","{v : (GHC.Num.Num GHC.Types.Int) | v == $fNumInt}"]]],[{"spanInfo":{"endLine":19,"filename":"src/PopPush.hs","endCol":30,"startLine":19,"startCol":17},"realSpan":true},[["GHC.Num.$fNumInt","{v : (GHC.Num.Num GHC.Types.Int) | v == $fNumInt}"]]],[{"spanInfo":{"endLine":35,"filename":"src/PopPush.hs","endCol":36,"startLine":35,"startCol":35},"realSpan":true},[["ds_d2uM","{v : GHC.Types.Int | v >= 0}"]]],[{"spanInfo":{"endLine":34,"filename":"src/PopPush.hs","endCol":31,"startLine":34,"startCol":29},"realSpan":true},[["ys","{v : [a] | v == ys\n           && length v == len v\n           && pot v == len v\n           && len v >= 0}"]]],[{"spanInfo":{"endLine":34,"filename":"src/PopPush.hs","endCol":4,"startLine":34,"startCol":1},"realSpan":true},[["PopPush.pop","forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> x2:{v : [a] | x1 <= len v} -> {t : (Language.Haskell.Liquid.RTick.Tick {ys : [a] | len ys == len x2 - x1}) | pot x2 + 2 >= tcost t + pot (tval t)}"]]],[{"spanInfo":{"endLine":19,"filename":"src/PopPush.hs","endCol":30,"startLine":19,"startCol":28},"realSpan":true},[["xs","{v : [a] | v == xs\n           && pot v == len v\n           && len v >= 0}"]]],[{"spanInfo":{"endLine":25,"filename":"src/PopPush.hs","endCol":26,"startLine":24,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792803254","{v : [a] | length v == len v\n           && len v >= 0}"]]],[{"spanInfo":{"endLine":29,"filename":"src/PopPush.hs","endCol":26,"startLine":29,"startCol":25},"realSpan":true},[["a","{VV : a | VV == a}"]]],[{"spanInfo":{"endLine":29,"filename":"src/PopPush.hs","endCol":10,"startLine":29,"startCol":9},"realSpan":true},[["a","a"]]],[{"spanInfo":{"endLine":35,"filename":"src/PopPush.hs","endCol":43,"startLine":34,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792803263","{v : GHC.Prim.Addr# | v == \"src/PopPush.hs:(34,1)-(35,42)|function pop\"}"]]],[{"spanInfo":{"endLine":25,"filename":"src/PopPush.hs","endCol":26,"startLine":25,"startCol":18},"realSpan":true},[["lq_anf$##7205759403792803258","{v : GHC.Types.Int | v == len xs\n                     && v == pot xs}"]]],[{"spanInfo":{"endLine":29,"filename":"src/PopPush.hs","endCol":29,"startLine":29,"startCol":27},"realSpan":true},[["ls","{v : [a] | v == ls\n           && length v == len v\n           && pot v == len v\n           && len v >= 0}"]]],[{"spanInfo":{"endLine":25,"filename":"src/PopPush.hs","endCol":15,"startLine":25,"startCol":14},"realSpan":true},[["lq_anf$##7205759403792803257","GHC.Types.Int"]]],[{"spanInfo":{"endLine":29,"filename":"src/PopPush.hs","endCol":30,"startLine":29,"startCol":1},"realSpan":true},[["Language.Haskell.Liquid.RTick.wait","{VV : forall a .\n      x1:a -> {v : (Language.Haskell.Liquid.RTick.Tick a) | 1 == tcost v\n                                                            && v == wait x1\n                                                            && v == Tick 1 x1\n                                                            && x1 == tval v} | VV == wait}"]]],[{"spanInfo":{"endLine":19,"filename":"src/PopPush.hs","endCol":30,"startLine":18,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792803249","{v : [a] | pot v == len v\n           && len v >= 0}"]]],[{"spanInfo":{"endLine":19,"filename":"src/PopPush.hs","endCol":18,"startLine":19,"startCol":17},"realSpan":true},[["lq_anf$##7205759403792803252","GHC.Types.Int"]]],[{"spanInfo":{"endLine":19,"filename":"src/PopPush.hs","endCol":30,"startLine":19,"startCol":21},"realSpan":true},[["lq_anf$##7205759403792803253","{v : GHC.Types.Int | v == len xs\n                     && v == length xs}"]]],[{"spanInfo":{"endLine":24,"filename":"src/PopPush.hs","endCol":15,"startLine":24,"startCol":14},"realSpan":true},[["lq_anf$##7205759403792803255","{v : GHC.Prim.Int# | v == 0}"]]],[{"spanInfo":{"endLine":35,"filename":"src/PopPush.hs","endCol":42,"startLine":35,"startCol":40},"realSpan":true},[["xs","{v : [a] | v == xs\n           && length v == len v\n           && pot v == len v\n           && len v >= 0}"]]]],"o_templs":[[{"spanInfo":{"endLine":35,"filename":"src/PopPush.hs","endCol":43,"startLine":35,"startCol":29},"realSpan":true},[["lq_anf$##7205759403792803269","{lq_tmp$x##1111 : (Language.Haskell.Liquid.RTick.Tick {lq_tmp$x##1110 : [{lq_tmp$x##1121 : a | $k_##1120[VV##1119:=lq_tmp$x##1121][lq_tmp$x##1115:=lq_anf$##7205759403792803268##d2vW][lq_tmp$x##1116:=xs##a1uY]}] | len lq_tmp$x##1110 == len xs##a1uY - lq_anf$##7205759403792803268##d2vW}) | lq_tmp$x##1111 == PopPush.pop lq_anf$##7205759403792803268##d2vW xs##a1uY\n                                                                                                                                                                                                                                                                                                 && PopPush.pot xs##a1uY + 2 >= Language.Haskell.Liquid.RTick.tcost lq_tmp$x##1111 + PopPush.pot (Language.Haskell.Liquid.RTick.tval lq_tmp$x##1111)}"]]],[{"spanInfo":{"endLine":29,"filename":"src/PopPush.hs","endCol":5,"startLine":29,"startCol":1},"realSpan":true},[["PopPush.push","forall a .\nlq_tmp$x##903:[a] -> lq_tmp$x##904:a -> {t : (Language.Haskell.Liquid.RTick.Tick {ys : [a] | len ys == 1 + len lq_tmp$x##903}) | PopPush.pot lq_tmp$x##903 + 2 >= Language.Haskell.Liquid.RTick.tcost t + PopPush.pot (Language.Haskell.Liquid.RTick.tval t)}"]]],[{"spanInfo":{"endLine":18,"filename":"src/PopPush.hs","endCol":18,"startLine":18,"startCol":17},"realSpan":true},[["lq_anf$##7205759403792803250","{lq_tmp$x##705 : GHC.Prim.Int# | lq_tmp$x##705 == 0}"]]],[{"spanInfo":{"endLine":1,"filename":"src/PopPush.hs","endCol":1,"startLine":1,"startCol":1},"realSpan":true},[["PopPush.$trModule","{VV##1180 : GHC.Types.Module | $k_##1181}"]]],[{"spanInfo":{"endLine":35,"filename":"src/PopPush.hs","endCol":28,"startLine":35,"startCol":27},"realSpan":true},[["lq_anf$##7205759403792803265","{lq_tmp$x##1072 : GHC.Types.Int | lq_tmp$x##1072 == GHC.Types.I# lq_anf$##7205759403792803264##d2vS\n                                  && lq_tmp$x##1072 == (lq_anf$##7205759403792803264##d2vS : int)}"]]],[{"spanInfo":{"endLine":29,"filename":"src/PopPush.hs","endCol":30,"startLine":29,"startCol":24},"realSpan":true},[["lq_anf$##7205759403792803259","{lq_tmp$x##917 : [{lq_tmp$x##927 : a | $k_##926[VV##925:=lq_tmp$x##927][lq_tmp$x##921:=a##a1uU][lq_tmp$x##922:=ls##a1uT]}]<\\lq_tmp$x##924 VV -> {lq_tmp$x##927 : a | $k_##929[VV##928:=lq_tmp$x##927][lq_tmp$x##921:=a##a1uU][lq_tmp$x##922:=ls##a1uT][lq_tmp$x##930:=lq_tmp$x##924]}> | is$GHC.Types.: lq_tmp$x##917\n                                                                                                                                                                                                                                                                                         && not (is$GHC.Types.[] lq_tmp$x##917)\n                                                                                                                                                                                                                                                                                         && lq_tmp$x##917 == GHC.Types.: a##a1uU ls##a1uT\n                                                                                                                                                                                                                                                                                         && PopPush.length lq_tmp$x##917 == 1 + PopPush.length ls##a1uT\n                                                                                                                                                                                                                                                                                         && PopPush.pot lq_tmp$x##917 == 1 + PopPush.pot ls##a1uT\n                                                                                                                                                                                                                                                                                         && head lq_tmp$x##917 == a##a1uU\n                                                                                                                                                                                                                                                                                         && len lq_tmp$x##917 == 1 + len ls##a1uT\n                                                                                                                                                                                                                                                                                         && lqdc##$select##GHC.Types.:##1 lq_tmp$x##917 == a##a1uU\n                                                                                                                                                                                                                                                                                         && lqdc##$select##GHC.Types.:##2 lq_tmp$x##917 == ls##a1uT\n                                                                                                                                                                                                                                                                                         && tail lq_tmp$x##917 == ls##a1uT}"]]],[{"spanInfo":{"endLine":35,"filename":"src/PopPush.hs","endCol":39,"startLine":35,"startCol":34},"realSpan":true},[["lq_anf$##7205759403792803268","{lq_tmp$x##1096 : GHC.Types.Int | lq_tmp$x##1096 == GHC.Num.- ds_d2uM lq_anf$##7205759403792803267##d2vV\n                                  && lq_tmp$x##1096 == ds_d2uM - lq_anf$##7205759403792803267##d2vV}"]]],[{"spanInfo":{"endLine":18,"filename":"src/PopPush.hs","endCol":7,"startLine":18,"startCol":1},"realSpan":true},[["PopPush.length","forall a .\nlq_tmp$x##679:[a] -> {VV : GHC.Types.Int | VV == PopPush.length lq_tmp$x##679\n                                           && VV == len lq_tmp$x##679}"]]],[{"spanInfo":{"endLine":35,"filename":"src/PopPush.hs","endCol":38,"startLine":35,"startCol":37},"realSpan":true},[["lq_anf$##7205759403792803267","{lq_tmp$x##1080 : GHC.Types.Int | lq_tmp$x##1080 == GHC.Types.I# lq_anf$##7205759403792803266##d2vU\n                                  && lq_tmp$x##1080 == (lq_anf$##7205759403792803266##d2vU : int)}"]]],[{"spanInfo":{"endLine":25,"filename":"src/PopPush.hs","endCol":25,"startLine":25,"startCol":23},"realSpan":true},[["xs","{lq_tmp$x##883 : [a] | lq_tmp$x##883 == xs##a1uS\n                       && PopPush.length lq_tmp$x##883 == len lq_tmp$x##883\n                       && len lq_tmp$x##883 >= 0}"]]],[{"spanInfo":{"endLine":35,"filename":"src/PopPush.hs","endCol":43,"startLine":35,"startCol":16},"realSpan":true},[["Language.Haskell.Liquid.RTick.step","{VV : forall a##a7i4 .\n      lq_tmp$x##1136:GHC.Types.Int -> lq_tmp$x##1137:(Language.Haskell.Liquid.RTick.Tick a##a7i4) -> {lq_tmp$x##1133 : (Language.Haskell.Liquid.RTick.Tick a##a7i4) | lq_tmp$x##1133 == Language.Haskell.Liquid.RTick.Tick (lq_tmp$x##1136 + Language.Haskell.Liquid.RTick.tcost lq_tmp$x##1137) (Language.Haskell.Liquid.RTick.tval lq_tmp$x##1137)\n                                                                                                                                                                      && lq_tmp$x##1133 == Language.Haskell.Liquid.RTick.step lq_tmp$x##1136 lq_tmp$x##1137\n                                                                                                                                                                      && Language.Haskell.Liquid.RTick.tval lq_tmp$x##1137 == Language.Haskell.Liquid.RTick.tval lq_tmp$x##1133\n                                                                                                                                                                      && lq_tmp$x##1136 + Language.Haskell.Liquid.RTick.tcost lq_tmp$x##1137 == Language.Haskell.Liquid.RTick.tcost lq_tmp$x##1133} | VV == Language.Haskell.Liquid.RTick.step}"]]],[{"spanInfo":{"endLine":29,"filename":"src/PopPush.hs","endCol":8,"startLine":29,"startCol":6},"realSpan":true},[["ls","[a]"]]],[{"spanInfo":{"endLine":24,"filename":"src/PopPush.hs","endCol":4,"startLine":24,"startCol":1},"realSpan":true},[["PopPush.pot","forall a .\nlq_tmp$x##791:[a] -> {VV : GHC.Types.Int | VV == PopPush.pot lq_tmp$x##791\n                                           && VV == len lq_tmp$x##791}"]]],[{"spanInfo":{"endLine":34,"filename":"src/PopPush.hs","endCol":9,"startLine":34,"startCol":7},"realSpan":true},[["ys","{xs : [a] | ds_d2uM <= len xs}"]]],[{"spanInfo":{"endLine":34,"filename":"src/PopPush.hs","endCol":31,"startLine":34,"startCol":16},"realSpan":true},[["Language.Haskell.Liquid.RTick.return","{VV : forall a##a7k0 .\n      lq_tmp$x##1162:a##a7k0 -> {lq_tmp$x##1160 : (Language.Haskell.Liquid.RTick.Tick a##a7k0) | 0 == Language.Haskell.Liquid.RTick.tcost lq_tmp$x##1160\n                                                                                                 && lq_tmp$x##1160 == Language.Haskell.Liquid.RTick.return lq_tmp$x##1162\n                                                                                                 && lq_tmp$x##1160 == Language.Haskell.Liquid.RTick.Tick 0 lq_tmp$x##1162\n                                                                                                 && lq_tmp$x##1162 == Language.Haskell.Liquid.RTick.tval lq_tmp$x##1160} | VV == Language.Haskell.Liquid.RTick.return}"]]],[{"spanInfo":{"endLine":25,"filename":"src/PopPush.hs","endCol":26,"startLine":25,"startCol":14},"realSpan":true},[["GHC.Num.$fNumInt","{lq_tmp$x##899 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##899 == GHC.Num.$fNumInt}"]]],[{"spanInfo":{"endLine":19,"filename":"src/PopPush.hs","endCol":30,"startLine":19,"startCol":17},"realSpan":true},[["GHC.Num.$fNumInt","{lq_tmp$x##787 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##787 == GHC.Num.$fNumInt}"]]],[{"spanInfo":{"endLine":35,"filename":"src/PopPush.hs","endCol":36,"startLine":35,"startCol":35},"realSpan":true},[["ds_d2uM","{lq_tmp$x##1099 : GHC.Types.Int | lq_tmp$x##1099 == ds_d2uM\n                                  && lq_tmp$x##1099 >= 0}"]]],[{"spanInfo":{"endLine":34,"filename":"src/PopPush.hs","endCol":31,"startLine":34,"startCol":29},"realSpan":true},[["ys","{lq_tmp$x##1177 : [a] | lq_tmp$x##1177 == ys##a1uV\n                        && PopPush.length lq_tmp$x##1177 == len lq_tmp$x##1177\n                        && PopPush.pot lq_tmp$x##1177 == len lq_tmp$x##1177\n                        && len lq_tmp$x##1177 >= 0\n                        && ds_d2uM <= len lq_tmp$x##1177}"]]],[{"spanInfo":{"endLine":34,"filename":"src/PopPush.hs","endCol":4,"startLine":34,"startCol":1},"realSpan":true},[["PopPush.pop","forall a .\nlq_tmp$x##963:{VV##0 : GHC.Types.Int | VV##0 >= 0} -> lq_tmp$x##964:{xs : [a] | lq_tmp$x##963 <= len xs} -> {t : (Language.Haskell.Liquid.RTick.Tick {ys : [a] | len ys == len lq_tmp$x##964 - lq_tmp$x##963}) | PopPush.pot lq_tmp$x##964 + 2 >= Language.Haskell.Liquid.RTick.tcost t + PopPush.pot (Language.Haskell.Liquid.RTick.tval t)}"]]],[{"spanInfo":{"endLine":19,"filename":"src/PopPush.hs","endCol":30,"startLine":19,"startCol":28},"realSpan":true},[["xs","{lq_tmp$x##771 : [a] | lq_tmp$x##771 == xs##a1uQ\n                       && PopPush.pot lq_tmp$x##771 == len lq_tmp$x##771\n                       && len lq_tmp$x##771 >= 0}"]]],[{"spanInfo":{"endLine":25,"filename":"src/PopPush.hs","endCol":26,"startLine":24,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792803254","{lq_tmp$x##798 : [a] | lq_tmp$x##798 == ds_d2vh\n                       && PopPush.length lq_tmp$x##798 == len lq_tmp$x##798\n                       && len lq_tmp$x##798 >= 0}"]]],[{"spanInfo":{"endLine":29,"filename":"src/PopPush.hs","endCol":26,"startLine":29,"startCol":25},"realSpan":true},[["a","{lq_tmp$x##932 : a | lq_tmp$x##932 == a##a1uU}"]]],[{"spanInfo":{"endLine":29,"filename":"src/PopPush.hs","endCol":10,"startLine":29,"startCol":9},"realSpan":true},[["a","a"]]],[{"spanInfo":{"endLine":35,"filename":"src/PopPush.hs","endCol":43,"startLine":34,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792803263","{lq_tmp$x##1009 : GHC.Prim.Addr# | lq_tmp$x##1009 == \"src/PopPush.hs:(34,1)-(35,42)|function pop\"}"]]],[{"spanInfo":{"endLine":25,"filename":"src/PopPush.hs","endCol":26,"startLine":25,"startCol":18},"realSpan":true},[["lq_anf$##7205759403792803258","{lq_tmp$x##872 : GHC.Types.Int | lq_tmp$x##872 == PopPush.pot xs##a1uS\n                                 && lq_tmp$x##872 == len xs##a1uS}"]]],[{"spanInfo":{"endLine":29,"filename":"src/PopPush.hs","endCol":29,"startLine":29,"startCol":27},"realSpan":true},[["ls","{lq_tmp$x##936 : [a] | lq_tmp$x##936 == ls##a1uT\n                       && PopPush.length lq_tmp$x##936 == len lq_tmp$x##936\n                       && PopPush.pot lq_tmp$x##936 == len lq_tmp$x##936\n                       && len lq_tmp$x##936 >= 0}"]]],[{"spanInfo":{"endLine":25,"filename":"src/PopPush.hs","endCol":15,"startLine":25,"startCol":14},"realSpan":true},[["lq_anf$##7205759403792803257","{lq_tmp$x##863 : GHC.Types.Int | lq_tmp$x##863 == GHC.Types.I# lq_anf$##7205759403792803256##d2vK\n                                 && lq_tmp$x##863 == (lq_anf$##7205759403792803256##d2vK : int)}"]]],[{"spanInfo":{"endLine":29,"filename":"src/PopPush.hs","endCol":30,"startLine":29,"startCol":1},"realSpan":true},[["Language.Haskell.Liquid.RTick.wait","{VV : forall a##a7i1 .\n      lq_tmp$x##943:a##a7i1 -> {lq_tmp$x##941 : (Language.Haskell.Liquid.RTick.Tick a##a7i1) | 1 == Language.Haskell.Liquid.RTick.tcost lq_tmp$x##941\n                                                                                               && lq_tmp$x##941 == Language.Haskell.Liquid.RTick.wait lq_tmp$x##943\n                                                                                               && lq_tmp$x##941 == Language.Haskell.Liquid.RTick.Tick 1 lq_tmp$x##943\n                                                                                               && lq_tmp$x##943 == Language.Haskell.Liquid.RTick.tval lq_tmp$x##941} | VV == Language.Haskell.Liquid.RTick.wait}"]]],[{"spanInfo":{"endLine":19,"filename":"src/PopPush.hs","endCol":30,"startLine":18,"startCol":1},"realSpan":true},[["lq_anf$##7205759403792803249","{lq_tmp$x##686 : [a] | lq_tmp$x##686 == ds_d2vs\n                       && PopPush.pot lq_tmp$x##686 == len lq_tmp$x##686\n                       && len lq_tmp$x##686 >= 0}"]]],[{"spanInfo":{"endLine":19,"filename":"src/PopPush.hs","endCol":18,"startLine":19,"startCol":17},"realSpan":true},[["lq_anf$##7205759403792803252","{lq_tmp$x##751 : GHC.Types.Int | lq_tmp$x##751 == GHC.Types.I# lq_anf$##7205759403792803251##d2vF\n                                 && lq_tmp$x##751 == (lq_anf$##7205759403792803251##d2vF : int)}"]]],[{"spanInfo":{"endLine":19,"filename":"src/PopPush.hs","endCol":30,"startLine":19,"startCol":21},"realSpan":true},[["lq_anf$##7205759403792803253","{lq_tmp$x##760 : GHC.Types.Int | lq_tmp$x##760 == PopPush.length xs##a1uQ\n                                 && lq_tmp$x##760 == len xs##a1uQ}"]]],[{"spanInfo":{"endLine":24,"filename":"src/PopPush.hs","endCol":15,"startLine":24,"startCol":14},"realSpan":true},[["lq_anf$##7205759403792803255","{lq_tmp$x##817 : GHC.Prim.Int# | lq_tmp$x##817 == 0}"]]],[{"spanInfo":{"endLine":35,"filename":"src/PopPush.hs","endCol":42,"startLine":35,"startCol":40},"realSpan":true},[["xs","{lq_tmp$x##1126 : [a] | lq_tmp$x##1126 == xs##a1uY\n                        && PopPush.length lq_tmp$x##1126 == len lq_tmp$x##1126\n                        && PopPush.pot lq_tmp$x##1126 == len lq_tmp$x##1126\n                        && len lq_tmp$x##1126 >= 0}"]]]],"o_bots":[],"o_result":{"tag":"Safe","contents":{"numCstr":15,"numIter":15,"numBrkt":15,"numChck":15,"numVald":15}}}